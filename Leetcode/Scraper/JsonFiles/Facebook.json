{
  "name": "Facebook",
  "slug": "facebook",
  "questions": [
    {
      "status": "ac",
      "questionId": "1",
      "questionFrontendId": "1",
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "acRate": "52.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2",
      "questionFrontendId": "2",
      "title": "Add Two Numbers",
      "titleSlug": "add-two-numbers",
      "acRate": "42.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "3",
      "questionFrontendId": "3",
      "title": "Longest Substring Without Repeating Characters",
      "titleSlug": "longest-substring-without-repeating-characters",
      "acRate": "34.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "4",
      "questionFrontendId": "4",
      "title": "Median of Two Sorted Arrays",
      "titleSlug": "median-of-two-sorted-arrays",
      "acRate": "39.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "5",
      "questionFrontendId": "5",
      "title": "Longest Palindromic Substring",
      "titleSlug": "longest-palindromic-substring",
      "acRate": "33.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "6",
      "questionFrontendId": "6",
      "title": "Zigzag Conversion",
      "titleSlug": "zigzag-conversion",
      "acRate": "47.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "7",
      "questionFrontendId": "7",
      "title": "Reverse Integer",
      "titleSlug": "reverse-integer",
      "acRate": "28.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "8",
      "questionFrontendId": "8",
      "title": "String to Integer (atoi)",
      "titleSlug": "string-to-integer-atoi",
      "acRate": "17.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "9",
      "questionFrontendId": "9",
      "title": "Palindrome Number",
      "titleSlug": "palindrome-number",
      "acRate": "56.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "10",
      "questionFrontendId": "10",
      "title": "Regular Expression Matching",
      "titleSlug": "regular-expression-matching",
      "acRate": "28.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "11",
      "questionFrontendId": "11",
      "title": "Container With Most Water",
      "titleSlug": "container-with-most-water",
      "acRate": "55.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "12",
      "questionFrontendId": "12",
      "title": "Integer to Roman",
      "titleSlug": "integer-to-roman",
      "acRate": "64.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "13",
      "questionFrontendId": "13",
      "title": "Roman to Integer",
      "titleSlug": "roman-to-integer",
      "acRate": "60.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "14",
      "questionFrontendId": "14",
      "title": "Longest Common Prefix",
      "titleSlug": "longest-common-prefix",
      "acRate": "42.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "15",
      "questionFrontendId": "15",
      "title": "3Sum",
      "titleSlug": "3sum",
      "acRate": "34.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "16",
      "questionFrontendId": "16",
      "title": "3Sum Closest",
      "titleSlug": "3sum-closest",
      "acRate": "45.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "17",
      "questionFrontendId": "17",
      "title": "Letter Combinations of a Phone Number",
      "titleSlug": "letter-combinations-of-a-phone-number",
      "acRate": "60.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "18",
      "questionFrontendId": "18",
      "title": "4Sum",
      "titleSlug": "4sum",
      "acRate": "36.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "19",
      "questionFrontendId": "19",
      "title": "Remove Nth Node From End of List",
      "titleSlug": "remove-nth-node-from-end-of-list",
      "acRate": "45.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "20",
      "questionFrontendId": "20",
      "title": "Valid Parentheses",
      "titleSlug": "valid-parentheses",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "21",
      "questionFrontendId": "21",
      "title": "Merge Two Sorted Lists",
      "titleSlug": "merge-two-sorted-lists",
      "acRate": "64.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "22",
      "questionFrontendId": "22",
      "title": "Generate Parentheses",
      "titleSlug": "generate-parentheses",
      "acRate": "74.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "23",
      "questionFrontendId": "23",
      "title": "Merge k Sorted Lists",
      "titleSlug": "merge-k-sorted-lists",
      "acRate": "52.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "24",
      "questionFrontendId": "24",
      "title": "Swap Nodes in Pairs",
      "titleSlug": "swap-nodes-in-pairs",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "25",
      "questionFrontendId": "25",
      "title": "Reverse Nodes in k-Group",
      "titleSlug": "reverse-nodes-in-k-group",
      "acRate": "58.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "26",
      "questionFrontendId": "26",
      "title": "Remove Duplicates from Sorted Array",
      "titleSlug": "remove-duplicates-from-sorted-array",
      "acRate": "55.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "27",
      "questionFrontendId": "27",
      "title": "Remove Element",
      "titleSlug": "remove-element",
      "acRate": "56.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "28",
      "questionFrontendId": "28",
      "title": "Find the Index of the First Occurrence in a String",
      "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
      "acRate": "42.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "29",
      "questionFrontendId": "29",
      "title": "Divide Two Integers",
      "titleSlug": "divide-two-integers",
      "acRate": "17.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "31",
      "questionFrontendId": "31",
      "title": "Next Permutation",
      "titleSlug": "next-permutation",
      "acRate": "39.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "32",
      "questionFrontendId": "32",
      "title": "Longest Valid Parentheses",
      "titleSlug": "longest-valid-parentheses",
      "acRate": "34.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "33",
      "questionFrontendId": "33",
      "title": "Search in Rotated Sorted Array",
      "titleSlug": "search-in-rotated-sorted-array",
      "acRate": "40.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "34",
      "questionFrontendId": "34",
      "title": "Find First and Last Position of Element in Sorted Array",
      "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
      "acRate": "44.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "35",
      "questionFrontendId": "35",
      "title": "Search Insert Position",
      "titleSlug": "search-insert-position",
      "acRate": "45.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "36",
      "questionFrontendId": "36",
      "title": "Valid Sudoku",
      "titleSlug": "valid-sudoku",
      "acRate": "59.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "38",
      "questionFrontendId": "38",
      "title": "Count and Say",
      "titleSlug": "count-and-say",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "39",
      "questionFrontendId": "39",
      "title": "Combination Sum",
      "titleSlug": "combination-sum",
      "acRate": "71.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "40",
      "questionFrontendId": "40",
      "title": "Combination Sum II",
      "titleSlug": "combination-sum-ii",
      "acRate": "54.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "41",
      "questionFrontendId": "41",
      "title": "First Missing Positive",
      "titleSlug": "first-missing-positive",
      "acRate": "37.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "42",
      "questionFrontendId": "42",
      "title": "Trapping Rain Water",
      "titleSlug": "trapping-rain-water",
      "acRate": "60.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "43",
      "questionFrontendId": "43",
      "title": "Multiply Strings",
      "titleSlug": "multiply-strings",
      "acRate": "40.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "44",
      "questionFrontendId": "44",
      "title": "Wildcard Matching",
      "titleSlug": "wildcard-matching",
      "acRate": "27.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "45",
      "questionFrontendId": "45",
      "title": "Jump Game II",
      "titleSlug": "jump-game-ii",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "46",
      "questionFrontendId": "46",
      "title": "Permutations",
      "titleSlug": "permutations",
      "acRate": "78.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "47",
      "questionFrontendId": "47",
      "title": "Permutations II",
      "titleSlug": "permutations-ii",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "48",
      "questionFrontendId": "48",
      "title": "Rotate Image",
      "titleSlug": "rotate-image",
      "acRate": "74.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "49",
      "questionFrontendId": "49",
      "title": "Group Anagrams",
      "titleSlug": "group-anagrams",
      "acRate": "68.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "50",
      "questionFrontendId": "50",
      "title": "Pow(x, n)",
      "titleSlug": "powx-n",
      "acRate": "34.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "51",
      "questionFrontendId": "51",
      "title": "N-Queens",
      "titleSlug": "n-queens",
      "acRate": "67.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "53",
      "questionFrontendId": "53",
      "title": "Maximum Subarray",
      "titleSlug": "maximum-subarray",
      "acRate": "50.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "54",
      "questionFrontendId": "54",
      "title": "Spiral Matrix",
      "titleSlug": "spiral-matrix",
      "acRate": "49.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "55",
      "questionFrontendId": "55",
      "title": "Jump Game",
      "titleSlug": "jump-game",
      "acRate": "38.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "56",
      "questionFrontendId": "56",
      "title": "Merge Intervals",
      "titleSlug": "merge-intervals",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "57",
      "questionFrontendId": "57",
      "title": "Insert Interval",
      "titleSlug": "insert-interval",
      "acRate": "41.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "58",
      "questionFrontendId": "58",
      "title": "Length of Last Word",
      "titleSlug": "length-of-last-word",
      "acRate": "49.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "59",
      "questionFrontendId": "59",
      "title": "Spiral Matrix II",
      "titleSlug": "spiral-matrix-ii",
      "acRate": "70.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "61",
      "questionFrontendId": "61",
      "title": "Rotate List",
      "titleSlug": "rotate-list",
      "acRate": "37.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "62",
      "questionFrontendId": "62",
      "title": "Unique Paths",
      "titleSlug": "unique-paths",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "63",
      "questionFrontendId": "63",
      "title": "Unique Paths II",
      "titleSlug": "unique-paths-ii",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "64",
      "questionFrontendId": "64",
      "title": "Minimum Path Sum",
      "titleSlug": "minimum-path-sum",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "65",
      "questionFrontendId": "65",
      "title": "Valid Number",
      "titleSlug": "valid-number",
      "acRate": "19.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "66",
      "questionFrontendId": "66",
      "title": "Plus One",
      "titleSlug": "plus-one",
      "acRate": "45.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "67",
      "questionFrontendId": "67",
      "title": "Add Binary",
      "titleSlug": "add-binary",
      "acRate": "53.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "68",
      "questionFrontendId": "68",
      "title": "Text Justification",
      "titleSlug": "text-justification",
      "acRate": "43.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "69",
      "questionFrontendId": "69",
      "title": "Sqrt(x)",
      "titleSlug": "sqrtx",
      "acRate": "38.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "70",
      "questionFrontendId": "70",
      "title": "Climbing Stairs",
      "titleSlug": "climbing-stairs",
      "acRate": "52.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "71",
      "questionFrontendId": "71",
      "title": "Simplify Path",
      "titleSlug": "simplify-path",
      "acRate": "42.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "72",
      "questionFrontendId": "72",
      "title": "Edit Distance",
      "titleSlug": "edit-distance",
      "acRate": "56.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "73",
      "questionFrontendId": "73",
      "title": "Set Matrix Zeroes",
      "titleSlug": "set-matrix-zeroes",
      "acRate": "55.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "74",
      "questionFrontendId": "74",
      "title": "Search a 2D Matrix",
      "titleSlug": "search-a-2d-matrix",
      "acRate": "49.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "75",
      "questionFrontendId": "75",
      "title": "Sort Colors",
      "titleSlug": "sort-colors",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "76",
      "questionFrontendId": "76",
      "title": "Minimum Window Substring",
      "titleSlug": "minimum-window-substring",
      "acRate": "42.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "78",
      "questionFrontendId": "78",
      "title": "Subsets",
      "titleSlug": "subsets",
      "acRate": "77.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "79",
      "questionFrontendId": "79",
      "title": "Word Search",
      "titleSlug": "word-search",
      "acRate": "41.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "80",
      "questionFrontendId": "80",
      "title": "Remove Duplicates from Sorted Array II",
      "titleSlug": "remove-duplicates-from-sorted-array-ii",
      "acRate": "57.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "83",
      "questionFrontendId": "83",
      "title": "Remove Duplicates from Sorted List",
      "titleSlug": "remove-duplicates-from-sorted-list",
      "acRate": "52.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "84",
      "questionFrontendId": "84",
      "title": "Largest Rectangle in Histogram",
      "titleSlug": "largest-rectangle-in-histogram",
      "acRate": "44.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "85",
      "questionFrontendId": "85",
      "title": "Maximal Rectangle",
      "titleSlug": "maximal-rectangle",
      "acRate": "46.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "86",
      "questionFrontendId": "86",
      "title": "Partition List",
      "titleSlug": "partition-list",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "88",
      "questionFrontendId": "88",
      "title": "Merge Sorted Array",
      "titleSlug": "merge-sorted-array",
      "acRate": "49.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "90",
      "questionFrontendId": "90",
      "title": "Subsets II",
      "titleSlug": "subsets-ii",
      "acRate": "57.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "91",
      "questionFrontendId": "91",
      "title": "Decode Ways",
      "titleSlug": "decode-ways",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "92",
      "questionFrontendId": "92",
      "title": "Reverse Linked List II",
      "titleSlug": "reverse-linked-list-ii",
      "acRate": "47.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "94",
      "questionFrontendId": "94",
      "title": "Binary Tree Inorder Traversal",
      "titleSlug": "binary-tree-inorder-traversal",
      "acRate": "75.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "95",
      "questionFrontendId": "95",
      "title": "Unique Binary Search Trees II",
      "titleSlug": "unique-binary-search-trees-ii",
      "acRate": "57.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "98",
      "questionFrontendId": "98",
      "title": "Validate Binary Search Tree",
      "titleSlug": "validate-binary-search-tree",
      "acRate": "32.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "100",
      "questionFrontendId": "100",
      "title": "Same Tree",
      "titleSlug": "same-tree",
      "acRate": "61.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "101",
      "questionFrontendId": "101",
      "title": "Symmetric Tree",
      "titleSlug": "symmetric-tree",
      "acRate": "56.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "102",
      "questionFrontendId": "102",
      "title": "Binary Tree Level Order Traversal",
      "titleSlug": "binary-tree-level-order-traversal",
      "acRate": "66.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "103",
      "questionFrontendId": "103",
      "title": "Binary Tree Zigzag Level Order Traversal",
      "titleSlug": "binary-tree-zigzag-level-order-traversal",
      "acRate": "58.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "104",
      "questionFrontendId": "104",
      "title": "Maximum Depth of Binary Tree",
      "titleSlug": "maximum-depth-of-binary-tree",
      "acRate": "75.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "109",
      "questionFrontendId": "109",
      "title": "Convert Sorted List to Binary Search Tree",
      "titleSlug": "convert-sorted-list-to-binary-search-tree",
      "acRate": "61.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "110",
      "questionFrontendId": "110",
      "title": "Balanced Binary Tree",
      "titleSlug": "balanced-binary-tree",
      "acRate": "51.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "111",
      "questionFrontendId": "111",
      "title": "Minimum Depth of Binary Tree",
      "titleSlug": "minimum-depth-of-binary-tree",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "112",
      "questionFrontendId": "112",
      "title": "Path Sum",
      "titleSlug": "path-sum",
      "acRate": "50.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "113",
      "questionFrontendId": "113",
      "title": "Path Sum II",
      "titleSlug": "path-sum-ii",
      "acRate": "58.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "114",
      "questionFrontendId": "114",
      "title": "Flatten Binary Tree to Linked List",
      "titleSlug": "flatten-binary-tree-to-linked-list",
      "acRate": "64.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "116",
      "questionFrontendId": "116",
      "title": "Populating Next Right Pointers in Each Node",
      "titleSlug": "populating-next-right-pointers-in-each-node",
      "acRate": "62.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "117",
      "questionFrontendId": "117",
      "title": "Populating Next Right Pointers in Each Node II",
      "titleSlug": "populating-next-right-pointers-in-each-node-ii",
      "acRate": "52.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "118",
      "questionFrontendId": "118",
      "title": "Pascal's Triangle",
      "titleSlug": "pascals-triangle",
      "acRate": "74.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "121",
      "questionFrontendId": "121",
      "title": "Best Time to Buy and Sell Stock",
      "titleSlug": "best-time-to-buy-and-sell-stock",
      "acRate": "53.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "122",
      "questionFrontendId": "122",
      "title": "Best Time to Buy and Sell Stock II",
      "titleSlug": "best-time-to-buy-and-sell-stock-ii",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "124",
      "questionFrontendId": "124",
      "title": "Binary Tree Maximum Path Sum",
      "titleSlug": "binary-tree-maximum-path-sum",
      "acRate": "40.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "125",
      "questionFrontendId": "125",
      "title": "Valid Palindrome",
      "titleSlug": "valid-palindrome",
      "acRate": "47.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "126",
      "questionFrontendId": "126",
      "title": "Word Ladder II",
      "titleSlug": "word-ladder-ii",
      "acRate": "27.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "127",
      "questionFrontendId": "127",
      "title": "Word Ladder",
      "titleSlug": "word-ladder",
      "acRate": "38.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "128",
      "questionFrontendId": "128",
      "title": "Longest Consecutive Sequence",
      "titleSlug": "longest-consecutive-sequence",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "129",
      "questionFrontendId": "129",
      "title": "Sum Root to Leaf Numbers",
      "titleSlug": "sum-root-to-leaf-numbers",
      "acRate": "63.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "133",
      "questionFrontendId": "133",
      "title": "Clone Graph",
      "titleSlug": "clone-graph",
      "acRate": "56.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "134",
      "questionFrontendId": "134",
      "title": "Gas Station",
      "titleSlug": "gas-station",
      "acRate": "45.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "135",
      "questionFrontendId": "135",
      "title": "Candy",
      "titleSlug": "candy",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "136",
      "questionFrontendId": "136",
      "title": "Single Number",
      "titleSlug": "single-number",
      "acRate": "72.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "138",
      "questionFrontendId": "138",
      "title": "Copy List with Random Pointer",
      "titleSlug": "copy-list-with-random-pointer",
      "acRate": "55.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "139",
      "questionFrontendId": "139",
      "title": "Word Break",
      "titleSlug": "word-break",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "140",
      "questionFrontendId": "140",
      "title": "Word Break II",
      "titleSlug": "word-break-ii",
      "acRate": "47.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "143",
      "questionFrontendId": "143",
      "title": "Reorder List",
      "titleSlug": "reorder-list",
      "acRate": "58.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "146",
      "questionFrontendId": "146",
      "title": "LRU Cache",
      "titleSlug": "lru-cache",
      "acRate": "42.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "148",
      "questionFrontendId": "148",
      "title": "Sort List",
      "titleSlug": "sort-list",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "150",
      "questionFrontendId": "150",
      "title": "Evaluate Reverse Polish Notation",
      "titleSlug": "evaluate-reverse-polish-notation",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "151",
      "questionFrontendId": "151",
      "title": "Reverse Words in a String",
      "titleSlug": "reverse-words-in-a-string",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "152",
      "questionFrontendId": "152",
      "title": "Maximum Product Subarray",
      "titleSlug": "maximum-product-subarray",
      "acRate": "35.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "153",
      "questionFrontendId": "153",
      "title": "Find Minimum in Rotated Sorted Array",
      "titleSlug": "find-minimum-in-rotated-sorted-array",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "155",
      "questionFrontendId": "155",
      "title": "Min Stack",
      "titleSlug": "min-stack",
      "acRate": "54.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "157",
      "questionFrontendId": "157",
      "title": "Read N Characters Given Read4",
      "titleSlug": "read-n-characters-given-read4",
      "acRate": "41.4%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "158",
      "questionFrontendId": "158",
      "title": "Read N Characters Given read4 II - Call Multiple Times",
      "titleSlug": "read-n-characters-given-read4-ii-call-multiple-times",
      "acRate": "42.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "160",
      "questionFrontendId": "160",
      "title": "Intersection of Two Linked Lists",
      "titleSlug": "intersection-of-two-linked-lists",
      "acRate": "57.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "161",
      "questionFrontendId": "161",
      "title": "One Edit Distance",
      "titleSlug": "one-edit-distance",
      "acRate": "34.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "162",
      "questionFrontendId": "162",
      "title": "Find Peak Element",
      "titleSlug": "find-peak-element",
      "acRate": "45.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "163",
      "questionFrontendId": "163",
      "title": "Missing Ranges",
      "titleSlug": "missing-ranges",
      "acRate": "33.5%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "166",
      "questionFrontendId": "166",
      "title": "Fraction to Recurring Decimal",
      "titleSlug": "fraction-to-recurring-decimal",
      "acRate": "24.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "167",
      "questionFrontendId": "167",
      "title": "Two Sum II - Input Array Is Sorted",
      "titleSlug": "two-sum-ii-input-array-is-sorted",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "168",
      "questionFrontendId": "168",
      "title": "Excel Sheet Column Title",
      "titleSlug": "excel-sheet-column-title",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "169",
      "questionFrontendId": "169",
      "title": "Majority Element",
      "titleSlug": "majority-element",
      "acRate": "64.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "171",
      "questionFrontendId": "171",
      "title": "Excel Sheet Column Number",
      "titleSlug": "excel-sheet-column-number",
      "acRate": "63.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "173",
      "questionFrontendId": "173",
      "title": "Binary Search Tree Iterator",
      "titleSlug": "binary-search-tree-iterator",
      "acRate": "71.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "175",
      "questionFrontendId": "175",
      "title": "Combine Two Tables",
      "titleSlug": "combine-two-tables",
      "acRate": "75.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "179",
      "questionFrontendId": "179",
      "title": "Largest Number",
      "titleSlug": "largest-number",
      "acRate": "36.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "180",
      "questionFrontendId": "180",
      "title": "Consecutive Numbers",
      "titleSlug": "consecutive-numbers",
      "acRate": "47.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "185",
      "questionFrontendId": "185",
      "title": "Department Top Three Salaries",
      "titleSlug": "department-top-three-salaries",
      "acRate": "52.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "188",
      "questionFrontendId": "188",
      "title": "Best Time to Buy and Sell Stock IV",
      "titleSlug": "best-time-to-buy-and-sell-stock-iv",
      "acRate": "42.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "189",
      "questionFrontendId": "189",
      "title": "Rotate Array",
      "titleSlug": "rotate-array",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "190",
      "questionFrontendId": "190",
      "title": "Reverse Bits",
      "titleSlug": "reverse-bits",
      "acRate": "58.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "191",
      "questionFrontendId": "191",
      "title": "Number of 1 Bits",
      "titleSlug": "number-of-1-bits",
      "acRate": "70.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "198",
      "questionFrontendId": "198",
      "title": "House Robber",
      "titleSlug": "house-robber",
      "acRate": "50.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "199",
      "questionFrontendId": "199",
      "title": "Binary Tree Right Side View",
      "titleSlug": "binary-tree-right-side-view",
      "acRate": "62.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "200",
      "questionFrontendId": "200",
      "title": "Number of Islands",
      "titleSlug": "number-of-islands",
      "acRate": "58.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "202",
      "questionFrontendId": "202",
      "title": "Happy Number",
      "titleSlug": "happy-number",
      "acRate": "56.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "203",
      "questionFrontendId": "203",
      "title": "Remove Linked List Elements",
      "titleSlug": "remove-linked-list-elements",
      "acRate": "48.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "206",
      "questionFrontendId": "206",
      "title": "Reverse Linked List",
      "titleSlug": "reverse-linked-list",
      "acRate": "76.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "207",
      "questionFrontendId": "207",
      "title": "Course Schedule",
      "titleSlug": "course-schedule",
      "acRate": "46.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "208",
      "questionFrontendId": "208",
      "title": "Implement Trie (Prefix Tree)",
      "titleSlug": "implement-trie-prefix-tree",
      "acRate": "64.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "209",
      "questionFrontendId": "209",
      "title": "Minimum Size Subarray Sum",
      "titleSlug": "minimum-size-subarray-sum",
      "acRate": "46.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "210",
      "questionFrontendId": "210",
      "title": "Course Schedule II",
      "titleSlug": "course-schedule-ii",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "211",
      "questionFrontendId": "211",
      "title": "Design Add and Search Words Data Structure",
      "titleSlug": "design-add-and-search-words-data-structure",
      "acRate": "45.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "212",
      "questionFrontendId": "212",
      "title": "Word Search II",
      "titleSlug": "word-search-ii",
      "acRate": "36.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "213",
      "questionFrontendId": "213",
      "title": "House Robber II",
      "titleSlug": "house-robber-ii",
      "acRate": "41.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "215",
      "questionFrontendId": "215",
      "title": "Kth Largest Element in an Array",
      "titleSlug": "kth-largest-element-in-an-array",
      "acRate": "66.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "217",
      "questionFrontendId": "217",
      "title": "Contains Duplicate",
      "titleSlug": "contains-duplicate",
      "acRate": "61.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "218",
      "questionFrontendId": "218",
      "title": "The Skyline Problem",
      "titleSlug": "the-skyline-problem",
      "acRate": "42.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Line Sweep",
          "slug": "line-sweep"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "219",
      "questionFrontendId": "219",
      "title": "Contains Duplicate II",
      "titleSlug": "contains-duplicate-ii",
      "acRate": "44.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "221",
      "questionFrontendId": "221",
      "title": "Maximal Square",
      "titleSlug": "maximal-square",
      "acRate": "46.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "223",
      "questionFrontendId": "223",
      "title": "Rectangle Area",
      "titleSlug": "rectangle-area",
      "acRate": "46.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "224",
      "questionFrontendId": "224",
      "title": "Basic Calculator",
      "titleSlug": "basic-calculator",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "226",
      "questionFrontendId": "226",
      "title": "Invert Binary Tree",
      "titleSlug": "invert-binary-tree",
      "acRate": "76.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "227",
      "questionFrontendId": "227",
      "title": "Basic Calculator II",
      "titleSlug": "basic-calculator-ii",
      "acRate": "43.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "229",
      "questionFrontendId": "229",
      "title": "Majority Element II",
      "titleSlug": "majority-element-ii",
      "acRate": "51.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "230",
      "questionFrontendId": "230",
      "title": "Kth Smallest Element in a BST",
      "titleSlug": "kth-smallest-element-in-a-bst",
      "acRate": "72.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "234",
      "questionFrontendId": "234",
      "title": "Palindrome Linked List",
      "titleSlug": "palindrome-linked-list",
      "acRate": "53.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "235",
      "questionFrontendId": "235",
      "title": "Lowest Common Ancestor of a Binary Search Tree",
      "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
      "acRate": "64.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "236",
      "questionFrontendId": "236",
      "title": "Lowest Common Ancestor of a Binary Tree",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "237",
      "questionFrontendId": "237",
      "title": "Delete Node in a Linked List",
      "titleSlug": "delete-node-in-a-linked-list",
      "acRate": "78.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "238",
      "questionFrontendId": "238",
      "title": "Product of Array Except Self",
      "titleSlug": "product-of-array-except-self",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "239",
      "questionFrontendId": "239",
      "title": "Sliding Window Maximum",
      "titleSlug": "sliding-window-maximum",
      "acRate": "46.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "240",
      "questionFrontendId": "240",
      "title": "Search a 2D Matrix II",
      "titleSlug": "search-a-2d-matrix-ii",
      "acRate": "52.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "241",
      "questionFrontendId": "241",
      "title": "Different Ways to Add Parentheses",
      "titleSlug": "different-ways-to-add-parentheses",
      "acRate": "65.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "242",
      "questionFrontendId": "242",
      "title": "Valid Anagram",
      "titleSlug": "valid-anagram",
      "acRate": "64.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "246",
      "questionFrontendId": "246",
      "title": "Strobogrammatic Number",
      "titleSlug": "strobogrammatic-number",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "247",
      "questionFrontendId": "247",
      "title": "Strobogrammatic Number II",
      "titleSlug": "strobogrammatic-number-ii",
      "acRate": "52.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "249",
      "questionFrontendId": "249",
      "title": "Group Shifted Strings",
      "titleSlug": "group-shifted-strings",
      "acRate": "65.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "252",
      "questionFrontendId": "252",
      "title": "Meeting Rooms",
      "titleSlug": "meeting-rooms",
      "acRate": "58.0%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "253",
      "questionFrontendId": "253",
      "title": "Meeting Rooms II",
      "titleSlug": "meeting-rooms-ii",
      "acRate": "51.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "257",
      "questionFrontendId": "257",
      "title": "Binary Tree Paths",
      "titleSlug": "binary-tree-paths",
      "acRate": "63.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "260",
      "questionFrontendId": "260",
      "title": "Single Number III",
      "titleSlug": "single-number-iii",
      "acRate": "68.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "261",
      "questionFrontendId": "261",
      "title": "Graph Valid Tree",
      "titleSlug": "graph-valid-tree",
      "acRate": "48.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "265",
      "questionFrontendId": "265",
      "title": "Paint House II",
      "titleSlug": "paint-house-ii",
      "acRate": "54.5%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "266",
      "questionFrontendId": "266",
      "title": "Palindrome Permutation",
      "titleSlug": "palindrome-permutation",
      "acRate": "67.1%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "267",
      "questionFrontendId": "267",
      "title": "Palindrome Permutation II",
      "titleSlug": "palindrome-permutation-ii",
      "acRate": "41.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "268",
      "questionFrontendId": "268",
      "title": "Missing Number",
      "titleSlug": "missing-number",
      "acRate": "66.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "269",
      "questionFrontendId": "269",
      "title": "Alien Dictionary",
      "titleSlug": "alien-dictionary",
      "acRate": "35.7%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "270",
      "questionFrontendId": "270",
      "title": "Closest Binary Search Tree Value",
      "titleSlug": "closest-binary-search-tree-value",
      "acRate": "51.9%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "271",
      "questionFrontendId": "271",
      "title": "Encode and Decode Strings",
      "titleSlug": "encode-and-decode-strings",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "273",
      "questionFrontendId": "273",
      "title": "Integer to English Words",
      "titleSlug": "integer-to-english-words",
      "acRate": "30.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "274",
      "questionFrontendId": "274",
      "title": "H-Index",
      "titleSlug": "h-index",
      "acRate": "38.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "275",
      "questionFrontendId": "275",
      "title": "H-Index II",
      "titleSlug": "h-index-ii",
      "acRate": "38.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "277",
      "questionFrontendId": "277",
      "title": "Find the Celebrity",
      "titleSlug": "find-the-celebrity",
      "acRate": "47.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "278",
      "questionFrontendId": "278",
      "title": "First Bad Version",
      "titleSlug": "first-bad-version",
      "acRate": "44.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "282",
      "questionFrontendId": "282",
      "title": "Expression Add Operators",
      "titleSlug": "expression-add-operators",
      "acRate": "39.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "283",
      "questionFrontendId": "283",
      "title": "Move Zeroes",
      "titleSlug": "move-zeroes",
      "acRate": "61.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "284",
      "questionFrontendId": "284",
      "title": "Peeking Iterator",
      "titleSlug": "peeking-iterator",
      "acRate": "59.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "285",
      "questionFrontendId": "285",
      "title": "Inorder Successor in BST",
      "titleSlug": "inorder-successor-in-bst",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "286",
      "questionFrontendId": "286",
      "title": "Walls and Gates",
      "titleSlug": "walls-and-gates",
      "acRate": "61.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "287",
      "questionFrontendId": "287",
      "title": "Find the Duplicate Number",
      "titleSlug": "find-the-duplicate-number",
      "acRate": "60.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "295",
      "questionFrontendId": "295",
      "title": "Find Median from Data Stream",
      "titleSlug": "find-median-from-data-stream",
      "acRate": "51.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "296",
      "questionFrontendId": "296",
      "title": "Best Meeting Point",
      "titleSlug": "best-meeting-point",
      "acRate": "60.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "297",
      "questionFrontendId": "297",
      "title": "Serialize and Deserialize Binary Tree",
      "titleSlug": "serialize-and-deserialize-binary-tree",
      "acRate": "56.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "298",
      "questionFrontendId": "298",
      "title": "Binary Tree Longest Consecutive Sequence",
      "titleSlug": "binary-tree-longest-consecutive-sequence",
      "acRate": "53.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "299",
      "questionFrontendId": "299",
      "title": "Bulls and Cows",
      "titleSlug": "bulls-and-cows",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "300",
      "questionFrontendId": "300",
      "title": "Longest Increasing Subsequence",
      "titleSlug": "longest-increasing-subsequence",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "301",
      "questionFrontendId": "301",
      "title": "Remove Invalid Parentheses",
      "titleSlug": "remove-invalid-parentheses",
      "acRate": "48.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "303",
      "questionFrontendId": "303",
      "title": "Range Sum Query - Immutable",
      "titleSlug": "range-sum-query-immutable",
      "acRate": "63.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "304",
      "questionFrontendId": "304",
      "title": "Range Sum Query 2D - Immutable",
      "titleSlug": "range-sum-query-2d-immutable",
      "acRate": "54.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "310",
      "questionFrontendId": "310",
      "title": "Minimum Height Trees",
      "titleSlug": "minimum-height-trees",
      "acRate": "38.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "311",
      "questionFrontendId": "311",
      "title": "Sparse Matrix Multiplication",
      "titleSlug": "sparse-matrix-multiplication",
      "acRate": "68.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "314",
      "questionFrontendId": "314",
      "title": "Binary Tree Vertical Order Traversal",
      "titleSlug": "binary-tree-vertical-order-traversal",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "317",
      "questionFrontendId": "317",
      "title": "Shortest Distance from All Buildings",
      "titleSlug": "shortest-distance-from-all-buildings",
      "acRate": "43.1%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "319",
      "questionFrontendId": "319",
      "title": "Bulb Switcher",
      "titleSlug": "bulb-switcher",
      "acRate": "52.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "323",
      "questionFrontendId": "323",
      "title": "Number of Connected Components in an Undirected Graph",
      "titleSlug": "number-of-connected-components-in-an-undirected-graph",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "325",
      "questionFrontendId": "325",
      "title": "Maximum Size Subarray Sum Equals k",
      "titleSlug": "maximum-size-subarray-sum-equals-k",
      "acRate": "49.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "328",
      "questionFrontendId": "328",
      "title": "Odd Even Linked List",
      "titleSlug": "odd-even-linked-list",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "329",
      "questionFrontendId": "329",
      "title": "Longest Increasing Path in a Matrix",
      "titleSlug": "longest-increasing-path-in-a-matrix",
      "acRate": "53.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "332",
      "questionFrontendId": "332",
      "title": "Reconstruct Itinerary",
      "titleSlug": "reconstruct-itinerary",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Eulerian Circuit",
          "slug": "eulerian-circuit"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "333",
      "questionFrontendId": "333",
      "title": "Largest BST Subtree",
      "titleSlug": "largest-bst-subtree",
      "acRate": "43.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "334",
      "questionFrontendId": "334",
      "title": "Increasing Triplet Subsequence",
      "titleSlug": "increasing-triplet-subsequence",
      "acRate": "40.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "339",
      "questionFrontendId": "339",
      "title": "Nested List Weight Sum",
      "titleSlug": "nested-list-weight-sum",
      "acRate": "83.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "341",
      "questionFrontendId": "341",
      "title": "Flatten Nested List Iterator",
      "titleSlug": "flatten-nested-list-iterator",
      "acRate": "64.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "344",
      "questionFrontendId": "344",
      "title": "Reverse String",
      "titleSlug": "reverse-string",
      "acRate": "77.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "346",
      "questionFrontendId": "346",
      "title": "Moving Average from Data Stream",
      "titleSlug": "moving-average-from-data-stream",
      "acRate": "78.2%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "347",
      "questionFrontendId": "347",
      "title": "Top K Frequent Elements",
      "titleSlug": "top-k-frequent-elements",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "348",
      "questionFrontendId": "348",
      "title": "Design Tic-Tac-Toe",
      "titleSlug": "design-tic-tac-toe",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "349",
      "questionFrontendId": "349",
      "title": "Intersection of Two Arrays",
      "titleSlug": "intersection-of-two-arrays",
      "acRate": "74.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "350",
      "questionFrontendId": "350",
      "title": "Intersection of Two Arrays II",
      "titleSlug": "intersection-of-two-arrays-ii",
      "acRate": "56.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "366",
      "questionFrontendId": "366",
      "title": "Find Leaves of Binary Tree",
      "titleSlug": "find-leaves-of-binary-tree",
      "acRate": "80.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "367",
      "questionFrontendId": "367",
      "title": "Valid Perfect Square",
      "titleSlug": "valid-perfect-square",
      "acRate": "43.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "374",
      "questionFrontendId": "374",
      "title": "Guess Number Higher or Lower",
      "titleSlug": "guess-number-higher-or-lower",
      "acRate": "53.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "377",
      "questionFrontendId": "377",
      "title": "Combination Sum IV",
      "titleSlug": "combination-sum-iv",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "378",
      "questionFrontendId": "378",
      "title": "Kth Smallest Element in a Sorted Matrix",
      "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
      "acRate": "62.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "380",
      "questionFrontendId": "380",
      "title": "Insert Delete GetRandom O(1)",
      "titleSlug": "insert-delete-getrandom-o1",
      "acRate": "54.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "381",
      "questionFrontendId": "381",
      "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
      "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
      "acRate": "35.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "383",
      "questionFrontendId": "383",
      "title": "Ransom Note",
      "titleSlug": "ransom-note",
      "acRate": "61.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "384",
      "questionFrontendId": "384",
      "title": "Shuffle an Array",
      "titleSlug": "shuffle-an-array",
      "acRate": "58.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "386",
      "questionFrontendId": "386",
      "title": "Lexicographical Numbers",
      "titleSlug": "lexicographical-numbers",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "388",
      "questionFrontendId": "388",
      "title": "Longest Absolute File Path",
      "titleSlug": "longest-absolute-file-path",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "389",
      "questionFrontendId": "389",
      "title": "Find the Difference",
      "titleSlug": "find-the-difference",
      "acRate": "59.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "392",
      "questionFrontendId": "392",
      "title": "Is Subsequence",
      "titleSlug": "is-subsequence",
      "acRate": "47.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "393",
      "questionFrontendId": "393",
      "title": "UTF-8 Validation",
      "titleSlug": "utf-8-validation",
      "acRate": "45.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "394",
      "questionFrontendId": "394",
      "title": "Decode String",
      "titleSlug": "decode-string",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "398",
      "questionFrontendId": "398",
      "title": "Random Pick Index",
      "titleSlug": "random-pick-index",
      "acRate": "63.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Reservoir Sampling",
          "slug": "reservoir-sampling"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "399",
      "questionFrontendId": "399",
      "title": "Evaluate Division",
      "titleSlug": "evaluate-division",
      "acRate": "61.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "404",
      "questionFrontendId": "404",
      "title": "Sum of Left Leaves",
      "titleSlug": "sum-of-left-leaves",
      "acRate": "57.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "406",
      "questionFrontendId": "406",
      "title": "Queue Reconstruction by Height",
      "titleSlug": "queue-reconstruction-by-height",
      "acRate": "73.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "408",
      "questionFrontendId": "408",
      "title": "Valid Word Abbreviation",
      "titleSlug": "valid-word-abbreviation",
      "acRate": "35.6%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "410",
      "questionFrontendId": "410",
      "title": "Split Array Largest Sum",
      "titleSlug": "split-array-largest-sum",
      "acRate": "55.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "412",
      "questionFrontendId": "412",
      "title": "Fizz Buzz",
      "titleSlug": "fizz-buzz",
      "acRate": "71.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "415",
      "questionFrontendId": "415",
      "title": "Add Strings",
      "titleSlug": "add-strings",
      "acRate": "51.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "416",
      "questionFrontendId": "416",
      "title": "Partition Equal Subset Sum",
      "titleSlug": "partition-equal-subset-sum",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "419",
      "questionFrontendId": "419",
      "title": "Battleships in a Board",
      "titleSlug": "battleships-in-a-board",
      "acRate": "75.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "424",
      "questionFrontendId": "424",
      "title": "Longest Repeating Character Replacement",
      "titleSlug": "longest-repeating-character-replacement",
      "acRate": "53.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "435",
      "questionFrontendId": "435",
      "title": "Non-overlapping Intervals",
      "titleSlug": "non-overlapping-intervals",
      "acRate": "53.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "437",
      "questionFrontendId": "437",
      "title": "Path Sum III",
      "titleSlug": "path-sum-iii",
      "acRate": "46.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "438",
      "questionFrontendId": "438",
      "title": "Find All Anagrams in a String",
      "titleSlug": "find-all-anagrams-in-a-string",
      "acRate": "50.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "442",
      "questionFrontendId": "442",
      "title": "Find All Duplicates in an Array",
      "titleSlug": "find-all-duplicates-in-an-array",
      "acRate": "75.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "443",
      "questionFrontendId": "443",
      "title": "String Compression",
      "titleSlug": "string-compression",
      "acRate": "54.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "448",
      "questionFrontendId": "448",
      "title": "Find All Numbers Disappeared in an Array",
      "titleSlug": "find-all-numbers-disappeared-in-an-array",
      "acRate": "60.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "450",
      "questionFrontendId": "450",
      "title": "Delete Node in a BST",
      "titleSlug": "delete-node-in-a-bst",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "451",
      "questionFrontendId": "451",
      "title": "Sort Characters By Frequency",
      "titleSlug": "sort-characters-by-frequency",
      "acRate": "72.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "461",
      "questionFrontendId": "461",
      "title": "Hamming Distance",
      "titleSlug": "hamming-distance",
      "acRate": "75.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "463",
      "questionFrontendId": "463",
      "title": "Island Perimeter",
      "titleSlug": "island-perimeter",
      "acRate": "70.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "468",
      "questionFrontendId": "468",
      "title": "Validate IP Address",
      "titleSlug": "validate-ip-address",
      "acRate": "26.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "477",
      "questionFrontendId": "477",
      "title": "Total Hamming Distance",
      "titleSlug": "total-hamming-distance",
      "acRate": "52.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "480",
      "questionFrontendId": "480",
      "title": "Sliding Window Median",
      "titleSlug": "sliding-window-median",
      "acRate": "39.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "490",
      "questionFrontendId": "490",
      "title": "The Maze",
      "titleSlug": "the-maze",
      "acRate": "57.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "494",
      "questionFrontendId": "494",
      "title": "Target Sum",
      "titleSlug": "target-sum",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "496",
      "questionFrontendId": "496",
      "title": "Next Greater Element I",
      "titleSlug": "next-greater-element-i",
      "acRate": "72.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "498",
      "questionFrontendId": "498",
      "title": "Diagonal Traverse",
      "titleSlug": "diagonal-traverse",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "501",
      "questionFrontendId": "501",
      "title": "Find Mode in Binary Search Tree",
      "titleSlug": "find-mode-in-binary-search-tree",
      "acRate": "56.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "503",
      "questionFrontendId": "503",
      "title": "Next Greater Element II",
      "titleSlug": "next-greater-element-ii",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "515",
      "questionFrontendId": "515",
      "title": "Find Largest Value in Each Tree Row",
      "titleSlug": "find-largest-value-in-each-tree-row",
      "acRate": "65.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "516",
      "questionFrontendId": "516",
      "title": "Longest Palindromic Subsequence",
      "titleSlug": "longest-palindromic-subsequence",
      "acRate": "62.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "518",
      "questionFrontendId": "518",
      "title": "Coin Change II",
      "titleSlug": "coin-change-ii",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "523",
      "questionFrontendId": "523",
      "title": "Continuous Subarray Sum",
      "titleSlug": "continuous-subarray-sum",
      "acRate": "28.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "525",
      "questionFrontendId": "525",
      "title": "Contiguous Array",
      "titleSlug": "contiguous-array",
      "acRate": "48.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "529",
      "questionFrontendId": "529",
      "title": "Minesweeper",
      "titleSlug": "minesweeper",
      "acRate": "66.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "530",
      "questionFrontendId": "530",
      "title": "Minimum Absolute Difference in BST",
      "titleSlug": "minimum-absolute-difference-in-bst",
      "acRate": "58.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "535",
      "questionFrontendId": "535",
      "title": "Encode and Decode TinyURL",
      "titleSlug": "encode-and-decode-tinyurl",
      "acRate": "86.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "536",
      "questionFrontendId": "536",
      "title": "Construct Binary Tree from String",
      "titleSlug": "construct-binary-tree-from-string",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "538",
      "questionFrontendId": "538",
      "title": "Convert BST to Greater Tree",
      "titleSlug": "convert-bst-to-greater-tree",
      "acRate": "68.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "540",
      "questionFrontendId": "540",
      "title": "Single Element in a Sorted Array",
      "titleSlug": "single-element-in-a-sorted-array",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "543",
      "questionFrontendId": "543",
      "title": "Diameter of Binary Tree",
      "titleSlug": "diameter-of-binary-tree",
      "acRate": "60.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "545",
      "questionFrontendId": "545",
      "title": "Boundary of Binary Tree",
      "titleSlug": "boundary-of-binary-tree",
      "acRate": "45.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "547",
      "questionFrontendId": "547",
      "title": "Number of Provinces",
      "titleSlug": "number-of-provinces",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "554",
      "questionFrontendId": "554",
      "title": "Brick Wall",
      "titleSlug": "brick-wall",
      "acRate": "54.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "556",
      "questionFrontendId": "556",
      "title": "Next Greater Element III",
      "titleSlug": "next-greater-element-iii",
      "acRate": "34.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "557",
      "questionFrontendId": "557",
      "title": "Reverse Words in a String III",
      "titleSlug": "reverse-words-in-a-string-iii",
      "acRate": "83.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "560",
      "questionFrontendId": "560",
      "title": "Subarray Sum Equals K",
      "titleSlug": "subarray-sum-equals-k",
      "acRate": "43.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "567",
      "questionFrontendId": "567",
      "title": "Permutation in String",
      "titleSlug": "permutation-in-string",
      "acRate": "44.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "572",
      "questionFrontendId": "572",
      "title": "Subtree of Another Tree",
      "titleSlug": "subtree-of-another-tree",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "578",
      "questionFrontendId": "578",
      "title": "Get Highest Answer Rate Question",
      "titleSlug": "get-highest-answer-rate-question",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "583",
      "questionFrontendId": "583",
      "title": "Delete Operation for Two Strings",
      "titleSlug": "delete-operation-for-two-strings",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "584",
      "questionFrontendId": "584",
      "title": "Find Customer Referee",
      "titleSlug": "find-customer-referee",
      "acRate": "69.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "593",
      "questionFrontendId": "593",
      "title": "Valid Square",
      "titleSlug": "valid-square",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "595",
      "questionFrontendId": "595",
      "title": "Big Countries",
      "titleSlug": "big-countries",
      "acRate": "68.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "597",
      "questionFrontendId": "597",
      "title": "Friend Requests I: Overall Acceptance Rate",
      "titleSlug": "friend-requests-i-overall-acceptance-rate",
      "acRate": "42.0%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "602",
      "questionFrontendId": "602",
      "title": "Friend Requests II: Who Has the Most Friends",
      "titleSlug": "friend-requests-ii-who-has-the-most-friends",
      "acRate": "57.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "605",
      "questionFrontendId": "605",
      "title": "Can Place Flowers",
      "titleSlug": "can-place-flowers",
      "acRate": "29.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "606",
      "questionFrontendId": "606",
      "title": "Construct String from Binary Tree",
      "titleSlug": "construct-string-from-binary-tree",
      "acRate": "69.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "611",
      "questionFrontendId": "611",
      "title": "Valid Triangle Number",
      "titleSlug": "valid-triangle-number",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "616",
      "questionFrontendId": "616",
      "title": "Add Bold Tag in String",
      "titleSlug": "add-bold-tag-in-string",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "617",
      "questionFrontendId": "617",
      "title": "Merge Two Binary Trees",
      "titleSlug": "merge-two-binary-trees",
      "acRate": "78.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "621",
      "questionFrontendId": "621",
      "title": "Task Scheduler",
      "titleSlug": "task-scheduler",
      "acRate": "59.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "623",
      "questionFrontendId": "623",
      "title": "Add One Row to Tree",
      "titleSlug": "add-one-row-to-tree",
      "acRate": "59.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "633",
      "questionFrontendId": "633",
      "title": "Sum of Square Numbers",
      "titleSlug": "sum-of-square-numbers",
      "acRate": "34.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "636",
      "questionFrontendId": "636",
      "title": "Exclusive Time of Functions",
      "titleSlug": "exclusive-time-of-functions",
      "acRate": "62.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "637",
      "questionFrontendId": "637",
      "title": "Average of Levels in Binary Tree",
      "titleSlug": "average-of-levels-in-binary-tree",
      "acRate": "72.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "639",
      "questionFrontendId": "639",
      "title": "Decode Ways II",
      "titleSlug": "decode-ways-ii",
      "acRate": "30.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "642",
      "questionFrontendId": "642",
      "title": "Design Search Autocomplete System",
      "titleSlug": "design-search-autocomplete-system",
      "acRate": "48.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "643",
      "questionFrontendId": "643",
      "title": "Maximum Average Subarray I",
      "titleSlug": "maximum-average-subarray-i",
      "acRate": "43.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "647",
      "questionFrontendId": "647",
      "title": "Palindromic Substrings",
      "titleSlug": "palindromic-substrings",
      "acRate": "70.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "649",
      "questionFrontendId": "649",
      "title": "Dota2 Senate",
      "titleSlug": "dota2-senate",
      "acRate": "47.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "653",
      "questionFrontendId": "653",
      "title": "Two Sum IV - Input is a BST",
      "titleSlug": "two-sum-iv-input-is-a-bst",
      "acRate": "61.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "658",
      "questionFrontendId": "658",
      "title": "Find K Closest Elements",
      "titleSlug": "find-k-closest-elements",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "662",
      "questionFrontendId": "662",
      "title": "Maximum Width of Binary Tree",
      "titleSlug": "maximum-width-of-binary-tree",
      "acRate": "42.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "670",
      "questionFrontendId": "670",
      "title": "Maximum Swap",
      "titleSlug": "maximum-swap",
      "acRate": "48.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "673",
      "questionFrontendId": "673",
      "title": "Number of Longest Increasing Subsequence",
      "titleSlug": "number-of-longest-increasing-subsequence",
      "acRate": "47.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "674",
      "questionFrontendId": "674",
      "title": "Longest Continuous Increasing Subsequence",
      "titleSlug": "longest-continuous-increasing-subsequence",
      "acRate": "50.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "676",
      "questionFrontendId": "676",
      "title": "Implement Magic Dictionary",
      "titleSlug": "implement-magic-dictionary",
      "acRate": "57.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "678",
      "questionFrontendId": "678",
      "title": "Valid Parenthesis String",
      "titleSlug": "valid-parenthesis-string",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "680",
      "questionFrontendId": "680",
      "title": "Valid Palindrome II",
      "titleSlug": "valid-palindrome-ii",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "684",
      "questionFrontendId": "684",
      "title": "Redundant Connection",
      "titleSlug": "redundant-connection",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "687",
      "questionFrontendId": "687",
      "title": "Longest Univalue Path",
      "titleSlug": "longest-univalue-path",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "688",
      "questionFrontendId": "688",
      "title": "Knight Probability in Chessboard",
      "titleSlug": "knight-probability-in-chessboard",
      "acRate": "56.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "689",
      "questionFrontendId": "689",
      "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
      "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
      "acRate": "49.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "691",
      "questionFrontendId": "691",
      "title": "Stickers to Spell Word",
      "titleSlug": "stickers-to-spell-word",
      "acRate": "48.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "692",
      "questionFrontendId": "692",
      "title": "Top K Frequent Words",
      "titleSlug": "top-k-frequent-words",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "694",
      "questionFrontendId": "694",
      "title": "Number of Distinct Islands",
      "titleSlug": "number-of-distinct-islands",
      "acRate": "61.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "695",
      "questionFrontendId": "695",
      "title": "Max Area of Island",
      "titleSlug": "max-area-of-island",
      "acRate": "71.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "698",
      "questionFrontendId": "698",
      "title": "Partition to K Equal Sum Subsets",
      "titleSlug": "partition-to-k-equal-sum-subsets",
      "acRate": "38.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "711",
      "questionFrontendId": "711",
      "title": "Number of Distinct Islands II",
      "titleSlug": "number-of-distinct-islands-ii",
      "acRate": "52.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "713",
      "questionFrontendId": "713",
      "title": "Subarray Product Less Than K",
      "titleSlug": "subarray-product-less-than-k",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "714",
      "questionFrontendId": "714",
      "title": "Best Time to Buy and Sell Stock with Transaction Fee",
      "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
      "acRate": "68.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "721",
      "questionFrontendId": "721",
      "title": "Accounts Merge",
      "titleSlug": "accounts-merge",
      "acRate": "57.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "724",
      "questionFrontendId": "724",
      "title": "Find Pivot Index",
      "titleSlug": "find-pivot-index",
      "acRate": "57.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "727",
      "questionFrontendId": "727",
      "title": "Minimum Window Subsequence",
      "titleSlug": "minimum-window-subsequence",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "733",
      "questionFrontendId": "733",
      "title": "Flood Fill",
      "titleSlug": "flood-fill",
      "acRate": "63.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "735",
      "questionFrontendId": "735",
      "title": "Asteroid Collision",
      "titleSlug": "asteroid-collision",
      "acRate": "44.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "739",
      "questionFrontendId": "739",
      "title": "Daily Temperatures",
      "titleSlug": "daily-temperatures",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "746",
      "questionFrontendId": "745",
      "title": "Prefix and Suffix Search",
      "titleSlug": "prefix-and-suffix-search",
      "acRate": "41.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "751",
      "questionFrontendId": "750",
      "title": "Number Of Corner Rectangles",
      "titleSlug": "number-of-corner-rectangles",
      "acRate": "67.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "758",
      "questionFrontendId": "426",
      "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
      "titleSlug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
      "acRate": "64.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "765",
      "questionFrontendId": "428",
      "title": "Serialize and Deserialize N-ary Tree",
      "titleSlug": "serialize-and-deserialize-n-ary-tree",
      "acRate": "66.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "766",
      "questionFrontendId": "430",
      "title": "Flatten a Multilevel Doubly Linked List",
      "titleSlug": "flatten-a-multilevel-doubly-linked-list",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "768",
      "questionFrontendId": "763",
      "title": "Partition Labels",
      "titleSlug": "partition-labels",
      "acRate": "79.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "769",
      "questionFrontendId": "764",
      "title": "Largest Plus Sign",
      "titleSlug": "largest-plus-sign",
      "acRate": "48.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "777",
      "questionFrontendId": "766",
      "title": "Toeplitz Matrix",
      "titleSlug": "toeplitz-matrix",
      "acRate": "68.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "778",
      "questionFrontendId": "767",
      "title": "Reorganize String",
      "titleSlug": "reorganize-string",
      "acRate": "54.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "785",
      "questionFrontendId": "772",
      "title": "Basic Calculator III",
      "titleSlug": "basic-calculator-iii",
      "acRate": "50.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "789",
      "questionFrontendId": "703",
      "title": "Kth Largest Element in a Stream",
      "titleSlug": "kth-largest-element-in-a-stream",
      "acRate": "56.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "792",
      "questionFrontendId": "704",
      "title": "Binary Search",
      "titleSlug": "binary-search",
      "acRate": "57.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "794",
      "questionFrontendId": "778",
      "title": "Swim in Rising Water",
      "titleSlug": "swim-in-rising-water",
      "acRate": "60.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "795",
      "questionFrontendId": "779",
      "title": "K-th Symbol in Grammar",
      "titleSlug": "k-th-symbol-in-grammar",
      "acRate": "46.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "800",
      "questionFrontendId": "784",
      "title": "Letter Case Permutation",
      "titleSlug": "letter-case-permutation",
      "acRate": "74.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "801",
      "questionFrontendId": "785",
      "title": "Is Graph Bipartite?",
      "titleSlug": "is-graph-bipartite",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "803",
      "questionFrontendId": "787",
      "title": "Cheapest Flights Within K Stops",
      "titleSlug": "cheapest-flights-within-k-stops",
      "acRate": "39.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "804",
      "questionFrontendId": "788",
      "title": "Rotated Digits",
      "titleSlug": "rotated-digits",
      "acRate": "56.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "807",
      "questionFrontendId": "791",
      "title": "Custom Sort String",
      "titleSlug": "custom-sort-string",
      "acRate": "70.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "817",
      "questionFrontendId": "706",
      "title": "Design HashMap",
      "titleSlug": "design-hashmap",
      "acRate": "65.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "819",
      "questionFrontendId": "801",
      "title": "Minimum Swaps To Make Sequences Increasing",
      "titleSlug": "minimum-swaps-to-make-sequences-increasing",
      "acRate": "39.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "832",
      "questionFrontendId": "814",
      "title": "Binary Tree Pruning",
      "titleSlug": "binary-tree-pruning",
      "acRate": "72.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "850",
      "questionFrontendId": "708",
      "title": "Insert into a Sorted Circular Linked List",
      "titleSlug": "insert-into-a-sorted-circular-linked-list",
      "acRate": "35.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "851",
      "questionFrontendId": "824",
      "title": "Goat Latin",
      "titleSlug": "goat-latin",
      "acRate": "68.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "852",
      "questionFrontendId": "825",
      "title": "Friends Of Appropriate Ages",
      "titleSlug": "friends-of-appropriate-ages",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "854",
      "questionFrontendId": "827",
      "title": "Making A Large Island",
      "titleSlug": "making-a-large-island",
      "acRate": "46.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "860",
      "questionFrontendId": "622",
      "title": "Design Circular Queue",
      "titleSlug": "design-circular-queue",
      "acRate": "51.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "865",
      "questionFrontendId": "489",
      "title": "Robot Room Cleaner",
      "titleSlug": "robot-room-cleaner",
      "acRate": "76.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "866",
      "questionFrontendId": "836",
      "title": "Rectangle Overlap",
      "titleSlug": "rectangle-overlap",
      "acRate": "44.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "882",
      "questionFrontendId": "852",
      "title": "Peak Index in a Mountain Array",
      "titleSlug": "peak-index-in-a-mountain-array",
      "acRate": "68.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "889",
      "questionFrontendId": "859",
      "title": "Buddy Strings",
      "titleSlug": "buddy-strings",
      "acRate": "33.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "893",
      "questionFrontendId": "863",
      "title": "All Nodes Distance K in Binary Tree",
      "titleSlug": "all-nodes-distance-k-in-binary-tree",
      "acRate": "64.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "896",
      "questionFrontendId": "865",
      "title": "Smallest Subtree with all the Deepest Nodes",
      "titleSlug": "smallest-subtree-with-all-the-deepest-nodes",
      "acRate": "70.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "907",
      "questionFrontendId": "875",
      "title": "Koko Eating Bananas",
      "titleSlug": "koko-eating-bananas",
      "acRate": "49.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "908",
      "questionFrontendId": "876",
      "title": "Middle of the Linked List",
      "titleSlug": "middle-of-the-linked-list",
      "acRate": "78.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "912",
      "questionFrontendId": "528",
      "title": "Random Pick with Weight",
      "titleSlug": "random-pick-with-weight",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "929",
      "questionFrontendId": "893",
      "title": "Groups of Special-Equivalent Strings",
      "titleSlug": "groups-of-special-equivalent-strings",
      "acRate": "71.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "930",
      "questionFrontendId": "894",
      "title": "All Possible Full Binary Trees",
      "titleSlug": "all-possible-full-binary-trees",
      "acRate": "82.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "932",
      "questionFrontendId": "896",
      "title": "Monotonic Array",
      "titleSlug": "monotonic-array",
      "acRate": "61.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "940",
      "questionFrontendId": "904",
      "title": "Fruit Into Baskets",
      "titleSlug": "fruit-into-baskets",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "941",
      "questionFrontendId": "905",
      "title": "Sort Array By Parity",
      "titleSlug": "sort-array-by-parity",
      "acRate": "76.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "948",
      "questionFrontendId": "912",
      "title": "Sort an Array",
      "titleSlug": "sort-an-array",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Radix Sort",
          "slug": "radix-sort"
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "954",
      "questionFrontendId": "918",
      "title": "Maximum Sum Circular Subarray",
      "titleSlug": "maximum-sum-circular-subarray",
      "acRate": "44.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "955",
      "questionFrontendId": "919",
      "title": "Complete Binary Tree Inserter",
      "titleSlug": "complete-binary-tree-inserter",
      "acRate": "65.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "957",
      "questionFrontendId": "921",
      "title": "Minimum Add to Make Parentheses Valid",
      "titleSlug": "minimum-add-to-make-parentheses-valid",
      "acRate": "75.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "971",
      "questionFrontendId": "934",
      "title": "Shortest Bridge",
      "titleSlug": "shortest-bridge",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "975",
      "questionFrontendId": "938",
      "title": "Range Sum of BST",
      "titleSlug": "range-sum-of-bst",
      "acRate": "86.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "976",
      "questionFrontendId": "939",
      "title": "Minimum Area Rectangle",
      "titleSlug": "minimum-area-rectangle",
      "acRate": "53.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "978",
      "questionFrontendId": "941",
      "title": "Valid Mountain Array",
      "titleSlug": "valid-mountain-array",
      "acRate": "33.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "990",
      "questionFrontendId": "953",
      "title": "Verifying an Alien Dictionary",
      "titleSlug": "verifying-an-alien-dictionary",
      "acRate": "54.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "998",
      "questionFrontendId": "958",
      "title": "Check Completeness of a Binary Tree",
      "titleSlug": "check-completeness-of-a-binary-tree",
      "acRate": "56.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1008",
      "questionFrontendId": "968",
      "title": "Binary Tree Cameras",
      "titleSlug": "binary-tree-cameras",
      "acRate": "46.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1014",
      "questionFrontendId": "973",
      "title": "K Closest Points to Origin",
      "titleSlug": "k-closest-points-to-origin",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1019",
      "questionFrontendId": "977",
      "title": "Squares of a Sorted Array",
      "titleSlug": "squares-of-a-sorted-array",
      "acRate": "72.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1025",
      "questionFrontendId": "983",
      "title": "Minimum Cost For Tickets",
      "titleSlug": "minimum-cost-for-tickets",
      "acRate": "65.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1028",
      "questionFrontendId": "986",
      "title": "Interval List Intersections",
      "titleSlug": "interval-list-intersections",
      "acRate": "71.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1029",
      "questionFrontendId": "987",
      "title": "Vertical Order Traversal of a Binary Tree",
      "titleSlug": "vertical-order-traversal-of-a-binary-tree",
      "acRate": "47.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1031",
      "questionFrontendId": "989",
      "title": "Add to Array-Form of Integer",
      "titleSlug": "add-to-array-form-of-integer",
      "acRate": "45.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1035",
      "questionFrontendId": "993",
      "title": "Cousins in Binary Tree",
      "titleSlug": "cousins-in-binary-tree",
      "acRate": "55.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1038",
      "questionFrontendId": "996",
      "title": "Number of Squareful Arrays",
      "titleSlug": "number-of-squareful-arrays",
      "acRate": "49.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1040",
      "questionFrontendId": "998",
      "title": "Maximum Binary Tree II",
      "titleSlug": "maximum-binary-tree-ii",
      "acRate": "68.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1046",
      "questionFrontendId": "1004",
      "title": "Max Consecutive Ones III",
      "titleSlug": "max-consecutive-ones-iii",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1050",
      "questionFrontendId": "1008",
      "title": "Construct Binary Search Tree from Preorder Traversal",
      "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
      "acRate": "81.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1051",
      "questionFrontendId": "1055",
      "title": "Shortest Way to Form String",
      "titleSlug": "shortest-way-to-form-string",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1056",
      "questionFrontendId": "1011",
      "title": "Capacity To Ship Packages Within D Days",
      "titleSlug": "capacity-to-ship-packages-within-d-days",
      "acRate": "69.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1059",
      "questionFrontendId": "1060",
      "title": "Missing Element in Sorted Array",
      "titleSlug": "missing-element-in-sorted-array",
      "acRate": "56.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1073",
      "questionFrontendId": "1020",
      "title": "Number of Enclaves",
      "titleSlug": "number-of-enclaves",
      "acRate": "68.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1091",
      "questionFrontendId": "1120",
      "title": "Maximum Average Subtree",
      "titleSlug": "maximum-average-subtree",
      "acRate": "66.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1092",
      "questionFrontendId": "1026",
      "title": "Maximum Difference Between Node and Ancestor",
      "titleSlug": "maximum-difference-between-node-and-ancestor",
      "acRate": "78.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1093",
      "questionFrontendId": "1028",
      "title": "Recover a Tree From Preorder Traversal",
      "titleSlug": "recover-a-tree-from-preorder-traversal",
      "acRate": "74.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1095",
      "questionFrontendId": "1029",
      "title": "Two City Scheduling",
      "titleSlug": "two-city-scheduling",
      "acRate": "66.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1103",
      "questionFrontendId": "1033",
      "title": "Moving Stones Until Consecutive",
      "titleSlug": "moving-stones-until-consecutive",
      "acRate": "47.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1113",
      "questionFrontendId": "1040",
      "title": "Moving Stones Until Consecutive II",
      "titleSlug": "moving-stones-until-consecutive-ii",
      "acRate": "56.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1116",
      "questionFrontendId": "1161",
      "title": "Maximum Level Sum of a Binary Tree",
      "titleSlug": "maximum-level-sum-of-a-binary-tree",
      "acRate": "67.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1121",
      "questionFrontendId": "1043",
      "title": "Partition Array for Maximum Sum",
      "titleSlug": "partition-array-for-maximum-sum",
      "acRate": "76.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1128",
      "questionFrontendId": "1047",
      "title": "Remove All Adjacent Duplicates In String",
      "titleSlug": "remove-all-adjacent-duplicates-in-string",
      "acRate": "69.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1142",
      "questionFrontendId": "1197",
      "title": "Minimum Knight Moves",
      "titleSlug": "minimum-knight-moves",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1149",
      "questionFrontendId": "1213",
      "title": "Intersection of Three Sorted Arrays",
      "titleSlug": "intersection-of-three-sorted-arrays",
      "acRate": "79.8%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1161",
      "questionFrontendId": "1075",
      "title": "Project Employees I",
      "titleSlug": "project-employees-i",
      "acRate": "61.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1162",
      "questionFrontendId": "1076",
      "title": "Project Employees II",
      "titleSlug": "project-employees-ii",
      "acRate": "49.9%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1163",
      "questionFrontendId": "1077",
      "title": "Project Employees III",
      "titleSlug": "project-employees-iii",
      "acRate": "76.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1171",
      "questionFrontendId": "1091",
      "title": "Shortest Path in Binary Matrix",
      "titleSlug": "shortest-path-in-binary-matrix",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1177",
      "questionFrontendId": "1245",
      "title": "Tree Diameter",
      "titleSlug": "tree-diameter",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1178",
      "questionFrontendId": "1216",
      "title": "Valid Palindrome III",
      "titleSlug": "valid-palindrome-iii",
      "acRate": "49.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1184",
      "questionFrontendId": "1094",
      "title": "Car Pooling",
      "titleSlug": "car-pooling",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1185",
      "questionFrontendId": "1095",
      "title": "Find in Mountain Array",
      "titleSlug": "find-in-mountain-array",
      "acRate": "40.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1205",
      "questionFrontendId": "1108",
      "title": "Defanging an IP Address",
      "titleSlug": "defanging-an-ip-address",
      "acRate": "89.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1207",
      "questionFrontendId": "1110",
      "title": "Delete Nodes And Return Forest",
      "titleSlug": "delete-nodes-and-return-forest",
      "acRate": "69.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1215",
      "questionFrontendId": "1113",
      "title": "Reported Posts",
      "titleSlug": "reported-posts",
      "acRate": "64.8%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1218",
      "questionFrontendId": "1123",
      "title": "Lowest Common Ancestor of Deepest Leaves",
      "titleSlug": "lowest-common-ancestor-of-deepest-leaves",
      "acRate": "72.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1221",
      "questionFrontendId": "1287",
      "title": "Element Appearing More Than 25% In Sorted Array",
      "titleSlug": "element-appearing-more-than-25-in-sorted-array",
      "acRate": "61.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1231",
      "questionFrontendId": "1299",
      "title": "Replace Elements with Greatest Element on Right Side",
      "titleSlug": "replace-elements-with-greatest-element-on-right-side",
      "acRate": "71.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1237",
      "questionFrontendId": "1132",
      "title": "Reported Posts II",
      "titleSlug": "reported-posts-ii",
      "acRate": "32.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1243",
      "questionFrontendId": "1315",
      "title": "Sum of Nodes with Even-Valued Grandparent",
      "titleSlug": "sum-of-nodes-with-even-valued-grandparent",
      "acRate": "85.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1245",
      "questionFrontendId": "1141",
      "title": "User Activity for the Past 30 Days I",
      "titleSlug": "user-activity-for-the-past-30-days-i",
      "acRate": "48.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1246",
      "questionFrontendId": "1142",
      "title": "User Activity for the Past 30 Days II",
      "titleSlug": "user-activity-for-the-past-30-days-ii",
      "acRate": "35.7%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1256",
      "questionFrontendId": "1331",
      "title": "Rank Transform of an Array",
      "titleSlug": "rank-transform-of-an-array",
      "acRate": "61.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1271",
      "questionFrontendId": "1236",
      "title": "Web Crawler",
      "titleSlug": "web-crawler",
      "acRate": "67.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1275",
      "questionFrontendId": "1361",
      "title": "Validate Binary Tree Nodes",
      "titleSlug": "validate-binary-tree-nodes",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1285",
      "questionFrontendId": "1382",
      "title": "Balance a Binary Search Tree",
      "titleSlug": "balance-a-binary-search-tree",
      "acRate": "81.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1288",
      "questionFrontendId": "1186",
      "title": "Maximum Subarray Sum with One Deletion",
      "titleSlug": "maximum-subarray-sum-with-one-deletion",
      "acRate": "43.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1296",
      "questionFrontendId": "1483",
      "title": "Kth Ancestor of a Tree Node",
      "titleSlug": "kth-ancestor-of-a-tree-node",
      "acRate": "34.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1300",
      "questionFrontendId": "1192",
      "title": "Critical Connections in a Network",
      "titleSlug": "critical-connections-in-a-network",
      "acRate": "55.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Biconnected Component",
          "slug": "biconnected-component"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1305",
      "questionFrontendId": "1944",
      "title": "Number of Visible People in a Queue",
      "titleSlug": "number-of-visible-people-in-a-queue",
      "acRate": "69.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1319",
      "questionFrontendId": "1207",
      "title": "Unique Number of Occurrences",
      "titleSlug": "unique-number-of-occurrences",
      "acRate": "77.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1320",
      "questionFrontendId": "1209",
      "title": "Remove All Adjacent Duplicates in String II",
      "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
      "acRate": "57.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1337",
      "questionFrontendId": "1206",
      "title": "Design Skiplist",
      "titleSlug": "design-skiplist",
      "acRate": "60.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1338",
      "questionFrontendId": "1211",
      "title": "Queries Quality and Percentage",
      "titleSlug": "queries-quality-and-percentage",
      "acRate": "50.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1357",
      "questionFrontendId": "1225",
      "title": "Report Contiguous Dates",
      "titleSlug": "report-contiguous-dates",
      "acRate": "57.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1368",
      "questionFrontendId": "1242",
      "title": "Web Crawler Multithreaded",
      "titleSlug": "web-crawler-multithreaded",
      "acRate": "48.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Concurrency",
          "slug": "concurrency"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1371",
      "questionFrontendId": "1249",
      "title": "Minimum Remove to Make Valid Parentheses",
      "titleSlug": "minimum-remove-to-make-valid-parentheses",
      "acRate": "67.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1374",
      "questionFrontendId": "1428",
      "title": "Leftmost Column with at Least a One",
      "titleSlug": "leftmost-column-with-at-least-a-one",
      "acRate": "54.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1377",
      "questionFrontendId": "1241",
      "title": "Number of Comments per Post",
      "titleSlug": "number-of-comments-per-post",
      "acRate": "65.3%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1382",
      "questionFrontendId": "2303",
      "title": "Calculate Amount Paid in Taxes",
      "titleSlug": "calculate-amount-paid-in-taxes",
      "acRate": "65.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1397",
      "questionFrontendId": "1268",
      "title": "Search Suggestions System",
      "titleSlug": "search-suggestions-system",
      "acRate": "65.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1399",
      "questionFrontendId": "1264",
      "title": "Page Recommendations",
      "titleSlug": "page-recommendations",
      "acRate": "65.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1400",
      "questionFrontendId": "1275",
      "title": "Find Winner on a Tic Tac Toe Game",
      "titleSlug": "find-winner-on-a-tic-tac-toe-game",
      "acRate": "53.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1404",
      "questionFrontendId": "1265",
      "title": "Print Immutable Linked List in Reverse",
      "titleSlug": "print-immutable-linked-list-in-reverse",
      "acRate": "94.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1406",
      "questionFrontendId": "1281",
      "title": "Subtract the Product and Sum of Digits of an Integer",
      "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
      "acRate": "86.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1414",
      "questionFrontendId": "1293",
      "title": "Shortest Path in a Grid with Obstacles Elimination",
      "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
      "acRate": "45.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1427",
      "questionFrontendId": "1305",
      "title": "All Elements in Two Binary Search Trees",
      "titleSlug": "all-elements-in-two-binary-search-trees",
      "acRate": "79.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1446",
      "questionFrontendId": "1344",
      "title": "Angle Between Hands of a Clock",
      "titleSlug": "angle-between-hands-of-a-clock",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1453",
      "questionFrontendId": "1322",
      "title": "Ads Performance",
      "titleSlug": "ads-performance",
      "acRate": "59.5%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1459",
      "questionFrontendId": "1357",
      "title": "Apply Discount Every n Orders",
      "titleSlug": "apply-discount-every-n-orders",
      "acRate": "71.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1460",
      "questionFrontendId": "1358",
      "title": "Number of Substrings Containing All Three Characters",
      "titleSlug": "number-of-substrings-containing-all-three-characters",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1466",
      "questionFrontendId": "1340",
      "title": "Jump Game V",
      "titleSlug": "jump-game-v",
      "acRate": "63.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1477",
      "questionFrontendId": "1352",
      "title": "Product of the Last K Numbers",
      "titleSlug": "product-of-the-last-k-numbers",
      "acRate": "51.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1498",
      "questionFrontendId": "1379",
      "title": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
      "titleSlug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
      "acRate": "85.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1516",
      "questionFrontendId": "1415",
      "title": "The k-th Lexicographical String of All Happy Strings of Length n",
      "titleSlug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
      "acRate": "74.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1536",
      "questionFrontendId": "1398",
      "title": "Customers Who Bought Products A and B but Not C",
      "titleSlug": "customers-who-bought-products-a-and-b-but-not-c",
      "acRate": "73.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1539",
      "questionFrontendId": "1424",
      "title": "Diagonal Traverse II",
      "titleSlug": "diagonal-traverse-ii",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1542",
      "questionFrontendId": "1446",
      "title": "Consecutive Characters",
      "titleSlug": "consecutive-characters",
      "acRate": "60.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1549",
      "questionFrontendId": "1438",
      "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
      "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
      "acRate": "49.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1550",
      "questionFrontendId": "1439",
      "title": "Find the Kth Smallest Sum of a Matrix With Sorted Rows",
      "titleSlug": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",
      "acRate": "61.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1554",
      "questionFrontendId": "1443",
      "title": "Minimum Time to Collect All Apples in a Tree",
      "titleSlug": "minimum-time-to-collect-all-apples-in-a-tree",
      "acRate": "62.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1556",
      "questionFrontendId": "1460",
      "title": "Make Two Arrays Equal by Reversing Subarrays",
      "titleSlug": "make-two-arrays-equal-by-reversing-subarrays",
      "acRate": "71.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1563",
      "questionFrontendId": "1453",
      "title": "Maximum Number of Darts Inside of a Circular Dartboard",
      "titleSlug": "maximum-number-of-darts-inside-of-a-circular-dartboard",
      "acRate": "37.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1578",
      "questionFrontendId": "1445",
      "title": "Apples & Oranges",
      "titleSlug": "apples-oranges",
      "acRate": "88.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1579",
      "questionFrontendId": "1454",
      "title": "Active Users",
      "titleSlug": "active-users",
      "acRate": "36.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1585",
      "questionFrontendId": "1492",
      "title": "The kth Factor of n",
      "titleSlug": "the-kth-factor-of-n",
      "acRate": "67.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1603",
      "questionFrontendId": "1480",
      "title": "Running Sum of 1d Array",
      "titleSlug": "running-sum-of-1d-array",
      "acRate": "86.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1604",
      "questionFrontendId": "1481",
      "title": "Least Number of Unique Integers after K Removals",
      "titleSlug": "least-number-of-unique-integers-after-k-removals",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1621",
      "questionFrontendId": "1498",
      "title": "Number of Subsequences That Satisfy the Given Sum Condition",
      "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
      "acRate": "43.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1635",
      "questionFrontendId": "1512",
      "title": "Number of Good Pairs",
      "titleSlug": "number-of-good-pairs",
      "acRate": "88.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1646",
      "questionFrontendId": "1539",
      "title": "Kth Missing Positive Number",
      "titleSlug": "kth-missing-positive-number",
      "acRate": "59.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1648",
      "questionFrontendId": "1541",
      "title": "Minimum Insertions to Balance a Parentheses String",
      "titleSlug": "minimum-insertions-to-balance-a-parentheses-string",
      "acRate": "51.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1663",
      "questionFrontendId": "1559",
      "title": "Detect Cycles in 2D Grid",
      "titleSlug": "detect-cycles-in-2d-grid",
      "acRate": "48.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1665",
      "questionFrontendId": "1522",
      "title": "Diameter of N-Ary Tree",
      "titleSlug": "diameter-of-n-ary-tree",
      "acRate": "74.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1706",
      "questionFrontendId": "1584",
      "title": "Min Cost to Connect All Points",
      "titleSlug": "min-cost-to-connect-all-points",
      "acRate": "66.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Minimum Spanning Tree",
          "slug": "minimum-spanning-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1713",
      "questionFrontendId": "1570",
      "title": "Dot Product of Two Sparse Vectors",
      "titleSlug": "dot-product-of-two-sparse-vectors",
      "acRate": "89.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1729",
      "questionFrontendId": "1586",
      "title": "Binary Search Tree Iterator II",
      "titleSlug": "binary-search-tree-iterator-ii",
      "acRate": "67.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1737",
      "questionFrontendId": "1614",
      "title": "Maximum Nesting Depth of the Parentheses",
      "titleSlug": "maximum-nesting-depth-of-the-parentheses",
      "acRate": "81.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1765",
      "questionFrontendId": "1669",
      "title": "Merge In Between Linked Lists",
      "titleSlug": "merge-in-between-linked-lists",
      "acRate": "81.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1777",
      "questionFrontendId": "1657",
      "title": "Determine if Two Strings Are Close",
      "titleSlug": "determine-if-two-strings-are-close",
      "acRate": "55.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1780",
      "questionFrontendId": "1644",
      "title": "Lowest Common Ancestor of a Binary Tree II",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree-ii",
      "acRate": "63.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1781",
      "questionFrontendId": "1662",
      "title": "Check If Two String Arrays are Equivalent",
      "titleSlug": "check-if-two-string-arrays-are-equivalent",
      "acRate": "85.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1790",
      "questionFrontendId": "1650",
      "title": "Lowest Common Ancestor of a Binary Tree III",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iii",
      "acRate": "79.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1801",
      "questionFrontendId": "1661",
      "title": "Average Time of Process per Machine",
      "titleSlug": "average-time-of-process-per-machine",
      "acRate": "66.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1819",
      "questionFrontendId": "1718",
      "title": "Construct the Lexicographically Largest Valid Sequence",
      "titleSlug": "construct-the-lexicographically-largest-valid-sequence",
      "acRate": "53.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1842",
      "questionFrontendId": "1699",
      "title": "Number of Calls Between Two Persons",
      "titleSlug": "number-of-calls-between-two-persons",
      "acRate": "81.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1848",
      "questionFrontendId": "1748",
      "title": "Sum of Unique Elements",
      "titleSlug": "sum-of-unique-elements",
      "acRate": "77.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1883",
      "questionFrontendId": "1740",
      "title": "Find Distance in a Binary Tree",
      "titleSlug": "find-distance-in-a-binary-tree",
      "acRate": "70.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1894",
      "questionFrontendId": "1768",
      "title": "Merge Strings Alternately",
      "titleSlug": "merge-strings-alternately",
      "acRate": "79.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1899",
      "questionFrontendId": "1773",
      "title": "Count Items Matching a Rule",
      "titleSlug": "count-items-matching-a-rule",
      "acRate": "84.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1908",
      "questionFrontendId": "1757",
      "title": "Recyclable and Low Fat Products",
      "titleSlug": "recyclable-and-low-fat-products",
      "acRate": "89.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1909",
      "questionFrontendId": "1762",
      "title": "Buildings With an Ocean View",
      "titleSlug": "buildings-with-an-ocean-view",
      "acRate": "79.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1915",
      "questionFrontendId": "1790",
      "title": "Check if One String Swap Can Make Strings Equal",
      "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
      "acRate": "45.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1931",
      "questionFrontendId": "1778",
      "title": "Shortest Path in a Hidden Grid",
      "titleSlug": "shortest-path-in-a-hidden-grid",
      "acRate": "39.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1951",
      "questionFrontendId": "1823",
      "title": "Find the Winner of the Circular Game",
      "titleSlug": "find-the-winner-of-the-circular-game",
      "acRate": "78.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1959",
      "questionFrontendId": "1810",
      "title": "Minimum Path Cost in a Hidden Grid",
      "titleSlug": "minimum-path-cost-in-a-hidden-grid",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1966",
      "questionFrontendId": "1838",
      "title": "Frequency of the Most Frequent Element",
      "titleSlug": "frequency-of-the-most-frequent-element",
      "acRate": "45.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1970",
      "questionFrontendId": "1859",
      "title": "Sorting the Sentence",
      "titleSlug": "sorting-the-sentence",
      "acRate": "83.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1980",
      "questionFrontendId": "1826",
      "title": "Faulty Sensor",
      "titleSlug": "faulty-sensor",
      "acRate": "50.0%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2019",
      "questionFrontendId": "1868",
      "title": "Product of Two Run-Length Encoded Arrays",
      "titleSlug": "product-of-two-run-length-encoded-arrays",
      "acRate": "58.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2038",
      "questionFrontendId": "1926",
      "title": "Nearest Exit from Entrance in Maze",
      "titleSlug": "nearest-exit-from-entrance-in-maze",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2040",
      "questionFrontendId": "1928",
      "title": "Minimum Cost to Reach Destination in Time",
      "titleSlug": "minimum-cost-to-reach-destination-in-time",
      "acRate": "37.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2045",
      "questionFrontendId": "1891",
      "title": "Cutting Ribbons",
      "titleSlug": "cutting-ribbons",
      "acRate": "49.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2046",
      "questionFrontendId": "1892",
      "title": "Page Recommendations II",
      "titleSlug": "page-recommendations-ii",
      "acRate": "42.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2047",
      "questionFrontendId": "1901",
      "title": "Find a Peak Element II",
      "titleSlug": "find-a-peak-element-ii",
      "acRate": "50.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2048",
      "questionFrontendId": "1920",
      "title": "Build Array from Permutation",
      "titleSlug": "build-array-from-permutation",
      "acRate": "89.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2078",
      "questionFrontendId": "1947",
      "title": "Maximum Compatibility Score Sum",
      "titleSlug": "maximum-compatibility-score-sum",
      "acRate": "61.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2090",
      "questionFrontendId": "1976",
      "title": "Number of Ways to Arrive at Destination",
      "titleSlug": "number-of-ways-to-arrive-at-destination",
      "acRate": "28.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2095",
      "questionFrontendId": "1963",
      "title": "Minimum Number of Swaps to Make the String Balanced",
      "titleSlug": "minimum-number-of-swaps-to-make-the-string-balanced",
      "acRate": "71.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2097",
      "questionFrontendId": "1949",
      "title": "Strong Friendship",
      "titleSlug": "strong-friendship",
      "acRate": "54.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2102",
      "questionFrontendId": "1991",
      "title": "Find the Middle Index in Array",
      "titleSlug": "find-the-middle-index-in-array",
      "acRate": "67.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2107",
      "questionFrontendId": "1980",
      "title": "Find Unique Binary String",
      "titleSlug": "find-unique-binary-string",
      "acRate": "74.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2123",
      "questionFrontendId": "1996",
      "title": "The Number of Weak Characters in the Game",
      "titleSlug": "the-number-of-weak-characters-in-the-game",
      "acRate": "43.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2126",
      "questionFrontendId": "1973",
      "title": "Count Nodes Equal to Sum of Descendants",
      "titleSlug": "count-nodes-equal-to-sum-of-descendants",
      "acRate": "76.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2134",
      "questionFrontendId": "2024",
      "title": "Maximize the Confusion of an Exam",
      "titleSlug": "maximize-the-confusion-of-an-exam",
      "acRate": "67.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2140",
      "questionFrontendId": "2014",
      "title": "Longest Subsequence Repeated k Times",
      "titleSlug": "longest-subsequence-repeated-k-times",
      "acRate": "55.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2184",
      "questionFrontendId": "2060",
      "title": "Check if an Original String Exists Given Two Encoded Strings",
      "titleSlug": "check-if-an-original-string-exists-given-two-encoded-strings",
      "acRate": "42.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2211",
      "questionFrontendId": "2090",
      "title": "K Radius Subarray Averages",
      "titleSlug": "k-radius-subarray-averages",
      "acRate": "46.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2232",
      "questionFrontendId": "2109",
      "title": "Adding Spaces to a String",
      "titleSlug": "adding-spaces-to-a-string",
      "acRate": "58.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2316",
      "questionFrontendId": "2210",
      "title": "Count Hills and Valleys in an Array",
      "titleSlug": "count-hills-and-valleys-in-an-array",
      "acRate": "59.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2335",
      "questionFrontendId": "2199",
      "title": "Finding the Topic of Each Post",
      "titleSlug": "finding-the-topic-of-each-post",
      "acRate": "48.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2342",
      "questionFrontendId": "2256",
      "title": "Minimum Average Difference",
      "titleSlug": "minimum-average-difference",
      "acRate": "43.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2347",
      "questionFrontendId": "2265",
      "title": "Count Nodes Equal to Average of Subtree",
      "titleSlug": "count-nodes-equal-to-average-of-subtree",
      "acRate": "86.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2368",
      "questionFrontendId": "2281",
      "title": "Sum of Total Strength of Wizards",
      "titleSlug": "sum-of-total-strength-of-wizards",
      "acRate": "27.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2374",
      "questionFrontendId": "2289",
      "title": "Steps to Make Array Non-decreasing",
      "titleSlug": "steps-to-make-array-non-decreasing",
      "acRate": "21.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2383",
      "questionFrontendId": "2235",
      "title": "Add Two Integers",
      "titleSlug": "add-two-integers",
      "acRate": "87.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2473",
      "questionFrontendId": "2342",
      "title": "Max Sum of a Pair With Equal Sum of Digits",
      "titleSlug": "max-sum-of-a-pair-with-equal-sum-of-digits",
      "acRate": "54.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2483",
      "questionFrontendId": "2365",
      "title": "Task Scheduler II",
      "titleSlug": "task-scheduler-ii",
      "acRate": "51.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2494",
      "questionFrontendId": "2416",
      "title": "Sum of Prefix Scores of Strings",
      "titleSlug": "sum-of-prefix-scores-of-strings",
      "acRate": "45.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2550",
      "questionFrontendId": "2452",
      "title": "Words Within Two Edits of Dictionary",
      "titleSlug": "words-within-two-edits-of-dictionary",
      "acRate": "60.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2552",
      "questionFrontendId": "2461",
      "title": "Maximum Sum of Distinct Subarrays With Length K",
      "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
      "acRate": "33.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2563",
      "questionFrontendId": "2468",
      "title": "Split Message Based on Limit",
      "titleSlug": "split-message-based-on-limit",
      "acRate": "43.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2639",
      "questionFrontendId": "2553",
      "title": "Separate the Digits in an Array",
      "titleSlug": "separate-the-digits-in-an-array",
      "acRate": "78.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2662",
      "questionFrontendId": "2596",
      "title": "Check Knight Tour Configuration",
      "titleSlug": "check-knight-tour-configuration",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2696",
      "questionFrontendId": "2597",
      "title": "The Number of Beautiful Subsets",
      "titleSlug": "the-number-of-beautiful-subsets",
      "acRate": "33.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2725",
      "questionFrontendId": "2611",
      "title": "Mice and Cheese",
      "titleSlug": "mice-and-cheese",
      "acRate": "44.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2732",
      "questionFrontendId": "2620",
      "title": "Counter",
      "titleSlug": "counter",
      "acRate": "80.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2809",
      "questionFrontendId": "2667",
      "title": "Create Hello World Function",
      "titleSlug": "create-hello-world-function",
      "acRate": "81.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2917",
      "questionFrontendId": "2824",
      "title": "Count Pairs Whose Sum is Less than Target",
      "titleSlug": "count-pairs-whose-sum-is-less-than-target",
      "acRate": "87.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3206",
      "questionFrontendId": "2956",
      "title": "Find Common Elements Between Two Arrays",
      "titleSlug": "find-common-elements-between-two-arrays",
      "acRate": "82.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3315",
      "questionFrontendId": "3009",
      "title": "Maximum Number of Intersections on the Chart",
      "titleSlug": "maximum-number-of-intersections-on-the-chart",
      "acRate": "46.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    }
  ],
  "frequencies": "{\"621\": [0, 0, 1, 350, 0, 0, 0, 6.925204961928904, 4], \"56\": [75, 94, 145, 786, 3.431924958312698, 3.8717219856967358, 4.688425570989914, 8.090823422145782, 1], \"350\": [0, 1, 6, 126, 0, 0, 0.5569503043492827, 5.7981699627717855, 3], \"15\": [57, 74, 90, 707, 2.3174279253420824, 2.7985615008430886, 3.170125648634808, 7.242887698408994, 1], \"10\": [5, 7, 14, 396, 0.27616563039022185, 0.48452867147552864, 1.2509437938987098, 7.591473466112348, 1], \"674\": [4, 4, 7, 43, 0.80661428375076, 0.80661428375076, 1.568292868322924, 4.972125439334381, 1], \"121\": [8, 13, 23, 376, 0.1254825846708958, 0.302353529790408, 0.7443516888878934, 5.691484476881451, 1], \"314\": [182, 220, 298, 734, 6.075316453917096, 6.298902180214912, 6.638964351291788, 9.298617138530748, 1], \"69\": [1, 1, 3, 44, 0, 0, 0.05074369283483175, 2.501208370828474, 3], \"257\": [0, 0, 0, 143, 0, 0, 0, 6.426339834761091, 4], \"51\": [2, 2, 3, 76, 0.06044135415350092, 0.06044135415350092, 0.13119221027135036, 4.510517111115299, 1], \"42\": [5, 8, 14, 439, 0.12343063006821355, 0.28991289812597015, 0.7080124953701318, 6.9138996466955716, 1], \"173\": [16, 20, 47, 380, 1.9928801084548275, 2.3888536198814205, 3.9815597192413277, 8.174308103981096, 1], \"151\": [2, 3, 5, 61, 0.020101179321087244, 0.04467244005159257, 0.11947365313429092, 2.9901328697664975, 1], \"43\": [12, 12, 14, 211, 1.1155618469818829, 1.1155618469818829, 1.332899594929246, 6.446459142335948, 1], \"38\": [18, 20, 23, 93, 1.9224715760832958, 2.1050126959476243, 2.354373760159734, 5.055212391546384, 1], \"273\": [2, 4, 5, 619, 0.2295744416445002, 0.7091475219063864, 0.9604619501872924, 9.672009404887525, 1], \"91\": [1, 2, 9, 360, 0, 0.06035013533317068, 0.8152409393326635, 7.601660094838973, 2], \"138\": [42, 54, 82, 369, 3.0126928888610363, 3.4957097951696827, 4.275826504886856, 7.301723606348499, 1], \"283\": [46, 61, 76, 541, 2.2107812348606424, 2.726811050504078, 3.1429767915790205, 7.017640992412921, 1], \"236\": [91, 105, 171, 647, 4.287153967465852, 4.569929065405376, 5.3767699085726655, 8.189079516094939, 1], \"253\": [17, 20, 36, 391, 1.9687958211660135, 2.2543171804871722, 3.3545690581348957, 8.08221981626761, 1], \"133\": [24, 30, 45, 350, 2.1096412815434684, 2.511285215724309, 3.276076166550339, 7.333273700646943, 1], \"49\": [7, 13, 26, 137, 0.16919337026410322, 0.4921420089679094, 1.2650487915303092, 4.271280015521393, 1], \"31\": [46, 56, 81, 587, 2.9233762536121604, 3.299159128196307, 3.979866580253196, 7.953757042564978, 1], \"339\": [109, 120, 160, 358, 5.638237102222812, 5.80251868502306, 6.141340827473821, 8.457955396436596, 1], \"518\": [0, 2, 2, 27, 0, 0.09531017980432487, 0.09531017980432487, 2.9562115153917077, 2], \"29\": [6, 6, 12, 373, 0.3117796240308414, 0.3117796240308414, 0.9015484501369516, 7.2473386867791, 1], \"114\": [8, 10, 13, 203, 0.7293949709522863, 0.9850151109444043, 1.3443181772894062, 6.532717269398139, 1], \"301\": [16, 23, 41, 657, 2.7124361730454645, 3.4033927722255912, 4.4984619482033805, 9.630587037178264, 1], \"1\": [15, 24, 48, 824, 0.19380371568797425, 0.43662552392322673, 1.1599914187067524, 6.463861598258328, 1], \"412\": [0, 1, 4, 19, 0, 0, 0.21271903397832567, 1.8481631401593503, 3], \"98\": [3, 3, 8, 286, 0.050374387821627474, 0.050374387821627474, 0.31290659250279734, 6.146422625387403, 1], \"88\": [82, 97, 133, 603, 2.8197662690786327, 3.1385899098913033, 3.7113395515205587, 6.742378440412288, 1], \"242\": [0, 1, 3, 62, 0, 0, 0.025211419346496032, 2.476955501270559, 3], \"642\": [0, 0, 0, 16, 0, 0, 0, 4.0369303611956955, 4], \"18\": [2, 3, 8, 63, 0.042650387350370085, 0.09352605801082346, 0.5289608358102031, 3.789522979893624, 1], \"139\": [19, 22, 35, 357, 1.4557728463106914, 1.6878820332542293, 2.497876217801789, 7.050187828911253, 1], \"560\": [78, 84, 126, 923, 3.9054413940625916, 4.050880190808017, 4.814063473205084, 8.81960709102706, 1], \"212\": [8, 9, 13, 60, 0.9006438410924963, 1.047078638552927, 1.580718940085089, 4.421148554749184, 1], \"297\": [4, 6, 9, 419, 0.2856138193877219, 0.5560675878793254, 0.9834085683442142, 8.189033320024219, 1], \"392\": [1, 1, 2, 26, 0, 0, 0.022548869686613078, 1.5798129734559694, 3], \"102\": [3, 4, 7, 107, 0.05317259535592034, 0.09265883048270479, 0.26030838111557353, 4.255216707712515, 1], \"325\": [1, 1, 1, 96, 0, 0, 0, 7.710669833013207, 4], \"378\": [10, 12, 21, 101, 1.5571585219208894, 1.855244064394191, 2.8631634993256365, 5.9481914393271484, 1], \"348\": [10, 12, 17, 101, 2.2639159518348917, 2.596283513631972, 3.254775379206555, 6.772888077174326, 1], \"4\": [3, 8, 13, 147, 0.04047314983522186, 0.2575161561694927, 0.5741300197558931, 4.606862191096357, 1], \"278\": [4, 4, 10, 429, 0.2104720984310654, 0.2104720984310654, 0.901838334620016, 7.8918907596370955, 1], \"76\": [28, 31, 43, 410, 1.9404635124967462, 2.1172170753519257, 2.712097765444152, 7.146605078664799, 1], \"65\": [31, 39, 69, 302, 3.3906946594630063, 3.8373637906677875, 4.925649979001226, 7.902191481173529, 1], \"32\": [3, 4, 7, 93, 0.12144283765687934, 0.20665250783725592, 0.5323989838491441, 4.829025105453829, 1], \"234\": [8, 10, 17, 96, 0.01067904894350243, 0.016636273954759324, 0.04734243581445894, 0.9345326850677902, 1], \"8\": [21, 24, 29, 214, 1.3331327180088204, 1.5364108582894207, 1.8446927522765075, 5.673432077784552, 1], \"215\": [149, 178, 238, 825, 4.785029438632444, 5.1022925996864315, 5.619641552686872, 8.311538492300558, 1], \"785\": [2, 3, 5, 38, 0.4321333551903257, 0.7958013346200287, 1.4766784225881597, 5.278803886633913, 1], \"17\": [21, 30, 38, 355, 1.4418246404419268, 2.0266444586189167, 2.448502853634185, 6.820777600972653, 1], \"567\": [1, 1, 3, 58, 0, 0, 0.11701645838618793, 3.858622228701031, 3], \"5\": [3, 5, 12, 172, 0.03670885249670127, 0.09881650797674155, 0.4689124649692232, 4.819540843450894, 1], \"636\": [20, 20, 29, 215, 3.1942475376942854, 3.1942475376942854, 3.877612890542972, 7.895083098275981, 1], \"349\": [1, 2, 6, 175, 0, 0.04662849315303362, 0.3573906781933116, 5.903871529963577, 2], \"295\": [7, 7, 9, 85, 0.5347788647884836, 0.5347788647884836, 0.7741883905630712, 4.656403594022605, 1], \"13\": [2, 9, 23, 196, 0.014250330211642135, 0.2551344162136757, 1.064054767960348, 4.9333219842469465, 1], \"380\": [13, 15, 24, 156, 1.1937163041587469, 1.4014845266138658, 2.178917429891863, 5.805442273549987, 1], \"277\": [0, 0, 0, 88, 0, 0, 0, 6.707692690788562, 4], \"282\": [7, 9, 18, 216, 1.625967214385311, 2.0476928433652555, 3.332204510175204, 8.258422978400409, 1], \"27\": [2, 4, 7, 24, 0.010587711398820563, 0.04169441853107544, 0.12256138294836413, 0.9292978417076452, 1], \"122\": [1, 2, 3, 78, 0, 0.026196651946570663, 0.05800594958851697, 3.7225946358469555, 2], \"341\": [5, 6, 8, 105, 0.8279664033688967, 1.0493065276839557, 1.4583752432954187, 6.3369213693308595, 1], \"538\": [0, 1, 2, 11, 0, 0, 0.35454501768090746, 2.6298969602165942, 3], \"285\": [1, 1, 1, 53, 0, 0, 0, 5.602473569189498, 4], \"44\": [0, 0, 1, 54, 0, 0, 0, 4.071220218596093, 4], \"20\": [17, 18, 39, 326, 0.4928560080053325, 0.5389046590309794, 1.4707355803933457, 5.460618562403073, 1], \"270\": [25, 29, 39, 168, 3.3901271579079086, 3.678272944719958, 4.22141496777754, 7.1593057274049725, 1], \"203\": [2, 3, 4, 57, 0.04976150955906385, 0.10867135530512761, 0.18571714579509285, 3.74812256986928, 1], \"191\": [1, 1, 5, 38, 0, 0, 0.3507752218115441, 3.2295746898769995, 3], \"57\": [4, 5, 9, 93, 0.1142467854444006, 0.17320295257752025, 0.47791476487410356, 4.196052424132182, 1], \"67\": [0, 3, 9, 692, 0, 0.07255397028698765, 0.5171600340113038, 8.287784440539225, 2], \"680\": [140, 170, 272, 1117, 5.089924673121973, 5.449363956900217, 6.15202353168679, 9.519010935823104, 1], \"200\": [36, 49, 68, 453, 2.1385357851942177, 2.6993857752581154, 3.321897385464928, 7.071273607711385, 1], \"3\": [10, 13, 27, 277, 0.19593695881195222, 0.3117409714594743, 0.9469836782735612, 5.118473257824236, 1], \"146\": [60, 66, 87, 424, 3.3738629374259306, 3.5585201143658383, 4.060833892750239, 7.243008867914952, 1], \"158\": [0, 0, 1, 222, 0, 0, 0, 9.410193239885908, 4], \"125\": [63, 73, 121, 701, 2.547681747571947, 2.8221557500381, 3.7562255176954613, 7.2781340472022364, 1], \"157\": [0, 0, 1, 122, 0, 0, 0, 8.142231570120957, 4], \"127\": [6, 7, 13, 145, 0.45961762813739493, 0.584539908803249, 1.3188342342683659, 5.834113858056681, 1], \"211\": [1, 1, 1, 253, 0, 0, 0, 7.404059441443302, 4], \"34\": [16, 25, 45, 434, 0.9668071491411434, 1.6051000643459903, 2.631160449595508, 7.082555878459773, 1], \"477\": [0, 0, 0, 24, 0, 0, 0, 4.816671763661991, 4], \"111\": [6, 10, 11, 72, 0.4474149929666741, 0.9428929810682248, 1.0635209688568397, 4.409811029790888, 1], \"23\": [45, 48, 66, 555, 2.7594920113660155, 2.8808713704425157, 3.49100291968409, 7.7116454851513945, 1], \"556\": [3, 3, 5, 44, 0.5020919437972361, 0.5020919437972361, 1.0337516544660688, 4.950813490032012, 1], \"179\": [0, 0, 2, 13, 0, 0, 0.12247703235966204, 1.872553585828618, 3], \"249\": [20, 28, 54, 180, 3.2701944353909913, 3.9243517563797967, 5.18533261906152, 7.618906941448423, 1], \"694\": [2, 2, 2, 28, 0.3856624808119847, 0.3856624808119847, 0.3856624808119847, 4.535126342255165, 1], \"124\": [9, 10, 14, 399, 0.5705448584676129, 0.667658904884958, 1.0512930269963259, 7.314286268243468, 1], \"543\": [61, 69, 102, 516, 3.3885536833593264, 3.627617610083775, 4.356799660826263, 7.617682857503964, 1], \"22\": [2, 3, 13, 122, 0.025253867321203414, 0.055949954478380234, 0.7326383666737267, 4.566078364783641, 1], \"384\": [3, 3, 5, 20, 0.6234672599219555, 0.6234672599219555, 1.2249060139924017, 3.6753264877092326, 1], \"346\": [45, 47, 71, 165, 4.323450694126157, 4.409316302411316, 5.1894947418980655, 6.902188201720245, 1], \"468\": [4, 4, 4, 35, 0.7508881752494619, 0.7508881752494619, 0.7508881752494619, 4.462042445804967, 1], \"284\": [1, 1, 3, 13, 0, 0, 0.9808292530117262, 3.4749525579046505, 3], \"235\": [4, 4, 9, 61, 0.15400201410186742, 0.15400201410186742, 0.611325228812541, 3.681856935011082, 1], \"206\": [0, 1, 4, 134, 0, 0, 0.02557275362761783, 3.4034989778938844, 3], \"438\": [0, 1, 2, 212, 0, 0, 0.09787757530957068, 7.0455590901544225, 3], \"317\": [11, 11, 16, 138, 2.3055657211321834, 2.3055657211321834, 3.000942557019398, 7.2524716938584834, 1], \"9\": [1, 4, 8, 56, 0, 0.03937516523483013, 0.14897379164772453, 2.1828423069554095, 2], \"252\": [0, 0, 0, 48, 0, 0, 0, 4.865340382161611, 4], \"126\": [1, 1, 3, 68, 0, 0, 0.38441169891033206, 5.4882487836561324, 3], \"304\": [9, 11, 15, 150, 1.727855667248575, 2.068669444697925, 2.6288008294480694, 7.152362826973092, 1], \"247\": [3, 3, 4, 56, 0.8187244879431477, 0.8187244879431477, 1.1797378334804782, 6.085385713224421, 1], \"209\": [3, 3, 5, 61, 0.07598590697792203, 0.07598590697792203, 0.19827548473619627, 3.515726265406861, 1], \"143\": [1, 1, 2, 109, 0, 0, 0.0006417249787060122, 1.0670168137390306, 3], \"399\": [1, 1, 4, 46, 0, 0, 0.41726149154853387, 4.24102403627182, 3], \"647\": [11, 12, 17, 127, 1.2310575873640723, 1.3573215594911332, 1.9156840758555327, 5.7814422003770405, 1], \"11\": [2, 3, 6, 125, 0.01212503487532636, 0.027077466561904618, 0.10417042076751157, 3.884687226017284, 1], \"128\": [2, 4, 9, 76, 0.01997070864794949, 0.07759586695378104, 0.34250543742538075, 3.4054411795990847, 1], \"227\": [114, 130, 186, 470, 5.093596114632896, 5.327755296475777, 5.806916719361472, 8.36638624797982, 1], \"2\": [4, 6, 18, 227, 0.04144597330407083, 0.09094877965463441, 0.618917133126316, 4.922052150442041, 1], \"801\": [1, 2, 4, 144, 0, 0.13047795513763227, 0.4430763788539477, 6.576628230052146, 2], \"50\": [94, 110, 176, 596, 3.9686942918929393, 4.277954621351341, 5.171444021504224, 7.636501792566292, 1], \"852\": [6, 7, 11, 71, 1.684590634813445, 1.9424197441155449, 2.757227437078294, 6.415366583853161, 1], \"53\": [2, 2, 12, 201, 0.014837067430467676, 0.014837067430467676, 0.4305586757058212, 5.02371824664678, 1], \"381\": [2, 2, 3, 38, 0.37117603462953225, 0.37117603462953225, 0.6987494361086152, 5.095265561339199, 1], \"21\": [8, 12, 23, 158, 0.16971838464062922, 0.34796661604694806, 0.9277851112998902, 4.292516078481445, 1], \"238\": [6, 8, 16, 658, 0.10801857683930276, 0.18464247776405363, 0.5939638570839931, 7.217178581347963, 1], \"408\": [150, 171, 222, 402, 5.907243552075049, 6.027491234477631, 6.451689184617188, 8.345441273053728, 1], \"688\": [2, 3, 3, 11, 0.4795730802618863, 0.8690378470236095, 0.8690378470236095, 2.9763141876968895, 1], \"494\": [4, 7, 8, 93, 0.29793303893683026, 0.7241160195487418, 0.8705760937260314, 5.239701977582211, 1], \"103\": [8, 11, 22, 88, 0.5494300583418585, 0.8689640272177221, 1.877594207135183, 4.49540128982978, 1], \"239\": [6, 7, 11, 104, 0.33647223662121295, 0.43466426280042664, 0.8520484631458014, 4.797258705155742, 1], \"162\": [76, 87, 128, 368, 3.8154376085756914, 4.080555332375068, 4.805637166147179, 6.941338360336855, 1], \"241\": [1, 1, 3, 14, 0, 0, 0.7741883905630712, 3.275427994373122, 3], \"437\": [0, 0, 2, 31, 0, 0, 0.09835932019884275, 3.2516156339373987, 3], \"94\": [1, 2, 5, 57, 0, 0.028013036227673965, 0.16344179897725258, 3.181185757860012, 2], \"113\": [4, 5, 7, 36, 0.35855995863450374, 0.5151290193260436, 0.8418924418202957, 3.5816453665062418, 1], \"110\": [3, 4, 6, 30, 0.06836374280939023, 0.11848160362052347, 0.24921579162398486, 2.088831282029675, 1], \"75\": [0, 1, 4, 118, 0, 0, 0.09369047490667402, 4.4598640508835885, 3], \"134\": [0, 1, 3, 13, 0, 0, 0.08675958295581801, 0.9939601863804515, 3], \"129\": [54, 59, 79, 167, 3.8702948033243527, 4.04401134019609, 4.582021577147224, 6.101981489106892, 1], \"46\": [1, 2, 5, 110, 0, 0.02819073222188664, 0.1644113478941177, 4.471528504426867, 2], \"691\": [25, 31, 36, 61, 3.9556476262966824, 4.379153659170156, 4.636942185026412, 5.723585101952381, 1], \"246\": [2, 2, 6, 74, 0.5790338737925242, 0.5790338737925242, 2.086767581771909, 6.972336194239895, 1], \"721\": [17, 20, 32, 249, 2.2917574543419823, 2.588342237036242, 3.4814767477204196, 7.5467053955951595, 1], \"386\": [0, 0, 2, 5, 0, 0, 0.39730179746900346, 1.3984157216522355, 3], \"28\": [0, 0, 3, 67, 0, 0, 0.03636764417087485, 2.969041781757729, 3], \"347\": [53, 59, 100, 376, 2.6359555287452436, 2.8365180576307614, 3.814784144855072, 6.474250986170524, 1], \"33\": [6, 10, 19, 286, 0.13626487952018312, 0.3404037865512618, 0.9017491799913738, 5.807226312811527, 1], \"286\": [2, 2, 8, 105, 0.22825865198098017, 0.22825865198098017, 1.629743178594846, 6.554579396169554, 1], \"208\": [1, 1, 1, 51, 0, 0, 0, 3.560441133203435, 4], \"78\": [17, 22, 43, 276, 1.1305121608480402, 1.5068151390450952, 2.6684772246536372, 6.309321351590102, 1], \"14\": [9, 14, 26, 140, 0.2311371989949553, 0.48809737268843456, 1.153777158547769, 4.1576533950185075, 1], \"79\": [12, 13, 21, 146, 0.7939518796819109, 0.8848243875247229, 1.5501381701528085, 5.19532964152583, 1], \"269\": [5, 8, 15, 271, 0.8367714474002161, 1.4703563668088182, 2.5478896423463304, 8.247324989849863, 1], \"300\": [4, 4, 5, 111, 0.1280724547973943, 0.1280724547973943, 0.19350276449938328, 4.665491350905637, 1], \"678\": [1, 1, 3, 46, 0, 0, 0.25562013999211797, 4.24102403627182, 3], \"713\": [2, 5, 6, 12, 0.1578069910303688, 0.7267637913589302, 0.9315582040049435, 1.9676501356917193, 1], \"19\": [17, 19, 35, 149, 0.8276250947884988, 0.9588652006092442, 1.8654747830266398, 4.604519350354603, 1], \"74\": [7, 10, 15, 73, 0.2564721465189076, 0.4679131402060907, 0.851211093794378, 3.4903048102012355, 1], \"210\": [3, 3, 4, 49, 0.10389959501815148, 0.10389959501815148, 0.17785091329828598, 3.4081480279267655, 1], \"230\": [1, 1, 6, 76, 0, 0, 0.2853858601914307, 3.9888141374652335, 3], \"26\": [5, 8, 19, 120, 0.05578068687116198, 0.1370245958903325, 0.603420283759869, 3.5276150352855296, 1], \"639\": [0, 0, 0, 10, 0, 0, 0, 3.4437149076531584, 4], \"224\": [8, 11, 17, 96, 0.9857384430379645, 1.429318653211086, 2.150051652411683, 5.49260769341379, 1], \"218\": [0, 1, 1, 37, 0, 0, 0, 4.887598094849864, 4], \"84\": [9, 10, 13, 54, 0.5893271581645133, 0.6886773444613254, 0.9839215926643957, 3.39785516574139, 1], \"415\": [27, 30, 47, 468, 2.8988325958728445, 3.0990318433917947, 3.931818575049766, 8.540142183987733, 1], \"167\": [5, 5, 8, 39, 0.12733351819555572, 0.12733351819555572, 0.29835280245872314, 2.225899950785074, 1], \"185\": [1, 1, 2, 10, 0, 0, 0.08515780834030685, 1.1700712526502546, 3], \"689\": [6, 6, 8, 83, 2.069779630768099, 2.069779630768099, 2.588342237036242, 7.18229277604726, 1], \"73\": [9, 10, 12, 82, 0.4480441066920364, 0.5293549149553507, 0.6955866311511176, 3.8695859600319427, 1], \"670\": [24, 31, 43, 196, 3.3993531360224867, 3.8977507858398233, 4.504356280984321, 7.558543110180442, 1], \"39\": [7, 8, 15, 133, 0.2736144138272912, 0.34433190055061186, 0.894080584548499, 4.741530745511221, 1], \"6\": [0, 1, 3, 27, 0, 0, 0.0751605712416521, 1.990970454400441, 3], \"140\": [14, 18, 26, 198, 2.144580843850797, 2.5998366164619773, 3.295836866004329, 7.311616145426778, 1], \"36\": [2, 4, 6, 47, 0.026248226074936345, 0.10109611687136877, 0.21459649073575138, 2.752864216892003, 1], \"68\": [4, 5, 9, 45, 0.34008234884531263, 0.49036455189465067, 1.1153490810236335, 3.9563426734190688, 1], \"112\": [1, 3, 7, 45, 0, 0.08376988306545878, 0.38915153261664065, 3.0282088622318994, 2], \"807\": [48, 54, 80, 220, 4.015807812223443, 4.247582971954161, 4.987824523381491, 7.035857236152565, 1], \"311\": [0, 1, 4, 127, 0, 0, 1.499234772300486, 8.155118673575245, 3], \"58\": [2, 3, 4, 10, 0.01847627616757318, 0.04110167568555186, 0.07194112406863154, 0.38267433777242355, 1], \"557\": [0, 0, 5, 11, 0, 0, 0.5486958978214005, 1.512488963680559, 3], \"496\": [1, 1, 2, 32, 0, 0, 0.06118115647508111, 2.84208094326864, 3], \"47\": [2, 2, 2, 32, 0.07696104113612832, 0.07696104113612832, 0.07696104113612832, 3.067122269640664, 1], \"435\": [6, 9, 12, 45, 0.4795730802618863, 0.8690378470236095, 1.241713132308783, 3.5727776966246974, 1], \"171\": [0, 1, 3, 19, 0, 0, 0.27276297168838964, 2.6084800895790883, 3], \"498\": [20, 21, 45, 160, 2.8599644018617765, 2.9522060085041, 4.396747911297921, 6.95333569289258, 1], \"12\": [0, 0, 4, 31, 0, 0, 0.1360328151909099, 2.277500782570767, 3], \"101\": [2, 2, 6, 55, 0.03144913268250332, 0.03144913268250332, 0.2527333714065298, 3.225308763201637, 1], \"733\": [0, 0, 3, 17, 0, 0, 0.15283920422944758, 1.8409864099932056, 3], \"261\": [2, 2, 2, 12, 0.18232155679395462, 0.18232155679395462, 0.18232155679395462, 2.1041341542702074, 1], \"523\": [16, 21, 48, 310, 2.2027995046671363, 2.6992061763057573, 4.2586141452968445, 8.006524799986801, 1], \"7\": [1, 4, 9, 82, 0, 0.06697062610618365, 0.3005854772876888, 3.40479839383575, 2], \"161\": [0, 0, 2, 73, 0, 0, 0.5877866649021191, 6.964934436552522, 3], \"658\": [13, 15, 21, 120, 1.6781558320358991, 1.9167709936539865, 2.5149491037763667, 5.919254059871311, 1], \"692\": [0, 1, 6, 59, 0, 0, 0.9925527167077854, 5.107145439759834, 3], \"207\": [26, 30, 35, 122, 1.7813573684581234, 2.024740039269829, 2.2973853302805085, 4.697947111335109, 1], \"463\": [1, 3, 8, 102, 0, 0.29048712337938953, 1.222893791714887, 5.967845094430524, 2], \"190\": [2, 2, 3, 18, 0.07095173597228444, 0.07095173597228444, 0.1530997075812833, 1.9395876833158263, 1], \"851\": [4, 4, 6, 66, 0.8023464725249373, 0.8023464725249373, 1.32687094064909, 5.817340071489899, 1], \"266\": [5, 5, 10, 71, 1.5198257537444133, 1.5198257537444133, 2.7269186854065928, 6.573352899410398, 1], \"398\": [23, 24, 32, 156, 3.372053386993074, 3.4543683447500966, 3.9777785234619536, 7.159143008749537, 1], \"597\": [0, 0, 2, 42, 0, 0, 0.7328875092094594, 6.16161737013632, 3], \"72\": [3, 4, 6, 44, 0.10189803234663233, 0.17454407218134732, 0.3570324485603081, 3.1811776707461843, 1], \"443\": [4, 5, 9, 49, 0.18991790368588934, 0.28276805764935187, 0.7221347174331976, 3.477714525371653, 1], \"490\": [4, 6, 8, 30, 1.0742208355439504, 1.6747291622485376, 2.164568614362167, 4.695319205705616, 1], \"393\": [2, 2, 2, 25, 0.5175824062288705, 0.5175824062288705, 0.5175824062288705, 4.67219502046509, 1], \"377\": [0, 0, 1, 16, 0, 0, 0, 2.648173163023268, 4], \"617\": [2, 3, 6, 23, 0.14842000511827327, 0.3074846997479606, 0.8919980393051105, 3.098288861879083, 1], \"104\": [1, 1, 4, 38, 0, 0, 0.06186742602372088, 1.9110040078350785, 3], \"332\": [4, 6, 7, 66, 0.5091644938159141, 0.9137980010445526, 1.1096165262591235, 5.202614993663486, 1], \"323\": [0, 0, 2, 26, 0, 0, 0.17135825199668508, 3.483968212213745, 3], \"24\": [0, 0, 3, 53, 0, 0, 0.09551262944566821, 3.4744671619269725, 3], \"199\": [70, 80, 128, 561, 3.552774312295947, 3.8131007736792872, 4.701532646281965, 7.679136979189282, 1], \"547\": [1, 1, 2, 24, 0, 0, 0.05533915290709426, 2.2184919934522305, 3], \"394\": [3, 4, 7, 75, 0.1428732864659515, 0.24140581062674824, 0.6076859511447171, 4.574605417180953, 1], \"419\": [4, 5, 5, 57, 0.9374250439481288, 1.231739068703661, 1.231739068703661, 5.7571238321423, 1], \"153\": [2, 3, 8, 69, 0.023544348305308434, 0.05221603708224446, 0.32293768017799085, 3.3795025543251858, 1], \"758\": [45, 50, 61, 365, 4.3679862200508985, 4.576295764888955, 4.932584972010716, 8.534408952913543, 1], \"865\": [5, 7, 13, 64, 1.3803241941333868, 1.9218125974762528, 3.0501753640262113, 6.184098786383448, 1], \"778\": [4, 5, 7, 80, 0.37380778823747274, 0.5354491397938886, 0.8704989010685588, 5.2056707750509155, 1], \"298\": [0, 0, 3, 21, 0, 0, 1.4384801142904609, 5.065754593317335, 3], \"344\": [0, 1, 3, 31, 0, 0, 0.07067304315127977, 2.176949910249715, 3], \"860\": [2, 2, 3, 49, 0.19014428247516366, 0.19014428247516366, 0.3860812412871159, 4.8418758055584545, 1], \"54\": [5, 7, 11, 96, 0.18981846820813295, 0.3433762040512237, 0.6989829620240472, 4.357437486630535, 1], \"160\": [2, 3, 6, 54, 0.04020642047804053, 0.08829260714567831, 0.31424909983650273, 3.431005094919297, 1], \"765\": [3, 3, 3, 15, 1.2939210409888755, 1.2939210409888755, 1.2939210409888755, 4.20732304615974, 1], \"912\": [98, 111, 171, 492, 5.106600345997608, 5.327265149141002, 5.954065660799221, 8.77331798250892, 1], \"450\": [2, 4, 5, 20, 0.08607460877124298, 0.30715417586460125, 0.44583756339855196, 2.301460865781765, 1], \"673\": [0, 0, 0, 4, 0, 0, 0, 0.7898234807953135, 4], \"150\": [1, 2, 4, 26, 0, 0.04024688050859337, 0.15209518064516228, 2.0719701685247074, 2], \"71\": [76, 94, 151, 448, 4.232265542686371, 4.65234750077729, 5.432366386012272, 7.7586989911231505, 1], \"90\": [1, 1, 2, 38, 0, 0, 0.050707947552847715, 2.9845516673667247, 3], \"189\": [1, 1, 3, 51, 0, 0, 0.03506397387145681, 2.425974026873064, 3], \"554\": [0, 0, 0, 11, 0, 0, 0, 3.005996872165874, 4], \"416\": [2, 3, 15, 107, 0.05724023016235056, 0.12446984194694785, 1.4617952192690373, 5.133534766249856, 1], \"66\": [2, 2, 6, 66, 0.016757828269088015, 0.016757828269088015, 0.1415787733316046, 2.965429848886207, 1], \"329\": [8, 10, 13, 85, 1.0528786729812265, 1.3649307493572975, 1.7795373664624068, 5.354893330265581, 1], \"63\": [7, 9, 12, 49, 0.5565716455541945, 0.8024512778491436, 1.1595348576309252, 3.6240572047860664, 1], \"536\": [3, 3, 7, 52, 0.9162907318741551, 0.9162907318741551, 2.2155737160044158, 6.105460088890354, 1], \"572\": [1, 1, 1, 29, 0, 0, 0, 2.5766634929589176, 4], \"334\": [1, 1, 3, 38, 0, 0, 0.0996398766256725, 2.8797738237831236, 3], \"593\": [1, 2, 2, 7, 0, 0.6576404921030354, 0.6576404921030354, 2.5173213084722823, 2], \"109\": [0, 0, 4, 72, 0, 0, 0.5091644938159141, 5.375758544436334, 3], \"41\": [2, 4, 4, 56, 0.03956994968697194, 0.14967187439189467, 0.14967187439189467, 3.4856856770223774, 1], \"383\": [4, 8, 9, 23, 0.1343172472818617, 0.45426953364568967, 0.5468273943132349, 1.7497075582432573, 1], \"152\": [1, 3, 4, 60, 0, 0.07162965613925479, 0.12399764165657076, 3.4243594022591894, 2], \"62\": [4, 4, 9, 82, 0.1257541595196729, 0.1257541595196729, 0.517836168252208, 4.0485607621801245, 1], \"175\": [1, 1, 2, 16, 0, 0, 0.03724825388061888, 1.2322227420508662, 3], \"296\": [6, 6, 6, 25, 1.9178709289909204, 1.9178709289909204, 1.9178709289909204, 4.623073477480618, 1], \"662\": [2, 3, 3, 24, 0.13534134786976212, 0.2822324676842163, 0.2822324676842163, 3.0850959541705896, 1], \"545\": [2, 3, 4, 29, 0.4096756406445079, 0.760450862456052, 1.107015699464489, 4.677078634270946, 1], \"237\": [1, 1, 2, 9, 0, 0, 0.05051579013690178, 0.7174605983028229, 3], \"319\": [0, 1, 3, 35, 0, 0, 0.5078801135362339, 4.511667195761954, 3], \"653\": [0, 0, 0, 9, 0, 0, 0, 1.4888968395992581, 4], \"240\": [1, 4, 4, 55, 0, 0.32609152056665214, 0.32609152056665214, 4.302598697829386, 2], \"116\": [11, 11, 14, 92, 1.347308914406937, 1.347308914406937, 1.7248652343980246, 5.2990817801918215, 1], \"687\": [3, 3, 4, 10, 0.9064059726416132, 0.9064059726416132, 1.2872888373444415, 2.856093274440672, 1], \"100\": [1, 1, 2, 35, 0, 0, 0.02139118998131756, 2.030989158293889, 3], \"461\": [0, 0, 0, 13, 0, 0, 0, 2.048982334195127, 4], \"85\": [0, 0, 0, 28, 0, 0, 0, 3.2880090373840822, 4], \"61\": [0, 0, 2, 12, 0, 0, 0.039105667038836917, 0.890231283295805, 3], \"188\": [1, 1, 2, 18, 0, 0, 0.10239115188879948, 2.275537958670023, 3], \"714\": [0, 0, 0, 12, 0, 0, 0, 1.7496302400106518, 4], \"168\": [0, 1, 3, 16, 0, 0, 0.23607730009877803, 2.1487302273976088, 3], \"217\": [2, 5, 9, 34, 0.011229764277878237, 0.06820204503213358, 0.2059439701929997, 1.450135646020592, 1], \"271\": [2, 2, 6, 23, 0.18924199963852842, 0.18924199963852842, 1.0560526742493137, 3.3517299048349494, 1], \"55\": [1, 3, 7, 62, 0, 0.04130922350877432, 0.20670171820228098, 2.9451293144995763, 2], \"695\": [13, 16, 25, 118, 1.4895184499007081, 1.8250736759120394, 2.617633179301698, 5.649002864798294, 1], \"303\": [5, 5, 7, 32, 0.5462376619892466, 0.5462376619892466, 0.8855917449853484, 3.426457048421393, 1], \"117\": [0, 0, 3, 46, 0, 0, 0.22148929121818325, 4.082474575499329, 3], \"633\": [1, 2, 2, 8, 0, 0.29849298855599654, 0.29849298855599654, 1.8817856208857746, 2], \"268\": [1, 1, 3, 42, 0, 0, 0.04879016416943201, 2.379546134130174, 3], \"48\": [4, 5, 11, 77, 0.10219478371748525, 0.15539881978094985, 0.595379376679575, 3.7104507604509065, 1], \"724\": [3, 6, 18, 85, 0.10438204199854623, 0.36471102760878493, 1.601583183783013, 4.492283456793827, 1], \"135\": [0, 2, 3, 17, 0, 0.05414041967458324, 0.117937559337445, 1.613324646921742, 2], \"374\": [0, 1, 2, 5, 0, 0, 0.06875559541512997, 0.36799849026798687, 3], \"80\": [4, 4, 4, 16, 0.08439375477444573, 0.08439375477444573, 0.08439375477444573, 0.8791767687947242, 1], \"602\": [0, 0, 0, 19, 0, 0, 0, 2.693181944635371, 4], \"516\": [0, 1, 3, 15, 0, 0, 0.25708853309999324, 2.1197422277039895, 3], \"310\": [3, 4, 4, 16, 0.4310822724784647, 0.6719663584804982, 0.6719663584804982, 2.7929635704288334, 1], \"83\": [0, 1, 2, 16, 0, 0, 0.032762963124623665, 1.1415303363903528, 3], \"333\": [1, 1, 3, 33, 0, 0, 1.252762968495368, 5.715381610499553, 3], \"45\": [2, 3, 3, 35, 0.025544173047426025, 0.05658328801532509, 0.05658328801532509, 2.1887077449093644, 1], \"221\": [0, 0, 0, 12, 0, 0, 0, 1.7047480922384253, 4], \"404\": [1, 1, 1, 10, 0, 0, 0, 1.683796479752647, 4], \"40\": [3, 3, 5, 35, 0.09171392769013605, 0.09171392769013605, 0.23650111237124583, 2.6443034925692768, 1], \"198\": [1, 3, 5, 45, 0, 0.04976150955906385, 0.132538836711771, 2.5240946570166005, 2], \"442\": [1, 1, 3, 26, 0, 0, 0.19331931100349597, 2.834327860750016, 3], \"267\": [2, 2, 3, 8, 0.7621400520468967, 0.7621400520468967, 1.2729656758128876, 2.959364629383116, 1], \"367\": [4, 5, 5, 24, 0.3208150073042144, 0.4643731505984498, 0.4643731505984498, 2.6821866905122906, 1], \"410\": [1, 1, 3, 19, 0, 0, 0.2520218920528967, 2.5254738347770003, 3], \"169\": [3, 4, 5, 38, 0.02996229458804513, 0.05266106420759361, 0.08110798870964722, 1.7715613598865065, 1], \"155\": [2, 2, 4, 35, 0.0284919557943062, 0.0284919557943062, 0.1093985944071066, 2.287588815745116, 1], \"70\": [3, 5, 5, 44, 0.03090905396910738, 0.08360481388396726, 0.08360481388396726, 2.0480415792013966, 1], \"260\": [0, 1, 2, 16, 0, 0, 0.18232155679395462, 2.624668592163159, 3], \"219\": [7, 11, 19, 68, 0.38238716082561963, 0.7655562633784105, 1.4887514262980472, 3.805648033685349, 1], \"166\": [1, 1, 2, 35, 0, 0, 0.28978070910870213, 4.64382512826348, 3], \"92\": [2, 5, 9, 65, 0.04292504471703392, 0.24225794733752515, 0.6356016949133447, 3.8570757674270775, 1], \"366\": [0, 0, 2, 9, 0, 0, 0.538996500732687, 2.738533217827286, 3], \"229\": [3, 3, 4, 12, 0.1587834718712885, 0.1587834718712885, 0.2669133955058672, 1.3226477302115383, 1], \"525\": [5, 6, 7, 50, 0.3237220089349778, 0.4385508326939298, 0.5591788204825445, 3.6693474324025974, 1], \"287\": [4, 4, 6, 35, 0.013918109154647444, 0.013918109154647444, 0.03104768181198513, 0.7290235387878318, 1], \"540\": [7, 7, 11, 48, 0.6492888646599129, 0.6492888646599129, 1.1809485753287456, 3.783850363346729, 1], \"388\": [2, 2, 2, 15, 0.325422400434628, 0.325422400434628, 0.325422400434628, 3.1194803886788494, 1], \"16\": [4, 5, 17, 95, 0.19671029424605424, 0.2924262358737592, 1.5946552725859202, 4.817230808780732, 1], \"265\": [0, 0, 0, 5, 0, 0, 0, 2.362304327695668, 4], \"637\": [4, 4, 7, 50, 0.35217936582657083, 0.35217936582657083, 0.8298069201829656, 4.204141134306478, 1], \"448\": [1, 4, 4, 20, 0, 0.22760642132910802, 0.22760642132910802, 2.000097471691286, 2], \"850\": [26, 31, 53, 167, 3.318329163681587, 3.659312777825644, 4.676807090765282, 6.99466443391311, 1], \"25\": [0, 1, 2, 59, 0, 0, 0.04480032475536626, 3.710494108037247, 3], \"274\": [0, 0, 0, 11, 0, 0, 0, 0.8950133334268702, 4], \"275\": [0, 0, 0, 4, 0, 0, 0, 0.8718389693033213, 4], \"535\": [0, 0, 0, 5, 0, 0, 0, 1.3893018821838459, 4], \"578\": [0, 0, 1, 4, 0, 0, 0, 1.5163474893680884, 4], \"746\": [0, 0, 0, 3, 0, 0, 0, 1.2332691738143668, 4], \"751\": [0, 0, 0, 2, 0, 0, 0, 1.9042374526547454, 4], \"769\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"800\": [0, 0, 0, 3, 0, 0, 0, 0.8347976976229722, 4], \"819\": [0, 0, 1, 3, 0, 0, 0, 1.0045833390198333, 4], \"896\": [3, 5, 6, 46, 0.8109302162163288, 1.497885426528353, 1.791759469228055, 5.686598637555933, 1], \"213\": [1, 1, 2, 4, 0, 0, 0.05945286991347217, 0.21915398027137953, 3], \"789\": [1, 1, 4, 33, 0, 0, 0.31137184357418557, 3.252813905557055, 3], \"929\": [0, 0, 1, 2, 0, 0, 0, 1.133098464739279, 4], \"136\": [1, 2, 2, 45, 0, 0.0204506104712908, 0.0204506104712908, 2.4388374704620825, 2], \"766\": [3, 3, 5, 37, 0.5292593254548287, 0.5292593254548287, 1.0777238007207541, 4.673987331441813, 1], \"932\": [1, 1, 8, 127, 0, 0, 1.446620341751487, 6.70149183855556, 3], \"941\": [3, 3, 4, 16, 0.2694761079552085, 0.2694761079552085, 0.43814407233118585, 2.2821018217411795, 1], \"907\": [8, 9, 13, 49, 0.4526354245300778, 0.5449418214554465, 0.9209311114306573, 3.1124413875034382, 1], \"180\": [1, 3, 4, 9, 0, 0.17217983671541567, 0.28820385696661954, 0.9899214055282721, 2], \"118\": [4, 5, 6, 23, 0.13826991637100777, 0.20839209345511067, 0.28791374162923317, 1.775407785113231, 1], \"515\": [6, 7, 9, 68, 1.182999680945657, 1.4065285144838586, 1.8073604096705347, 5.676128984037735, 1], \"882\": [1, 1, 3, 30, 0, 0, 0.1731762239717629, 2.991099711047256, 3], \"148\": [1, 1, 2, 43, 0, 0, 0.05675281659244948, 3.331943787973232, 3], \"226\": [0, 0, 4, 34, 0, 0, 0.09531017980432487, 2.1071782966514356, 3], \"957\": [53, 56, 83, 302, 4.313841929221184, 4.422565124443533, 5.164952963288154, 7.773573054466418, 1], \"480\": [7, 8, 15, 47, 1.674529378014845, 1.8966774090875531, 3.0402994584745673, 5.280594875153236, 1], \"777\": [21, 26, 38, 129, 3.157000421150113, 3.5692452162436563, 4.275095578147091, 6.737788007486284, 1], \"975\": [65, 78, 110, 514, 4.516022988780207, 4.8773200502318605, 5.398977045504229, 8.633394757565929, 1], \"954\": [2, 2, 2, 9, 0.1649822607176458, 0.1649822607176458, 0.1649822607176458, 1.5330506976595197, 1], \"59\": [1, 1, 3, 13, 0, 0, 0.2678623801635787, 1.9121935195027286, 3], \"990\": [7, 10, 18, 756, 1.3608248195794337, 1.934005246548995, 3.0042755572148296, 9.783585506242686, 1], \"998\": [6, 7, 14, 86, 1.2577455398398318, 1.487625791884269, 2.6882755454427927, 6.242882310279364, 1], \"1008\": [2, 2, 2, 6, 0.5245244681241525, 0.5245244681241525, 0.5245244681241525, 1.975038421978337, 1], \"1014\": [55, 66, 108, 800, 3.7807068828971078, 4.138356929508748, 5.075237588376175, 9.081101088086125, 1], \"792\": [0, 0, 3, 29, 0, 0, 0.04567003683318837, 1.6801876336643122, 3], \"1019\": [9, 10, 21, 185, 0.551407807517593, 0.6461945641223205, 1.6105272371605555, 5.742534389801878, 1], \"971\": [3, 3, 6, 43, 0.5897688261061103, 0.5897688261061103, 1.4384801142904609, 5.112525509507318, 1], \"1028\": [29, 31, 38, 240, 3.682754745536119, 3.8129916248219673, 4.174746673725352, 7.876857895546111, 1], \"976\": [0, 0, 3, 36, 0, 0, 0.7102416139192455, 5.0104053826111645, 3], \"1031\": [0, 0, 0, 8, 0, 0, 0, 1.688949975361834, 4], \"908\": [0, 1, 4, 11, 0, 0, 0.08739182211500984, 0.5251067233314073, 3], \"529\": [7, 9, 15, 56, 1.9636097261547143, 2.409194828052304, 3.371596911885865, 5.973809611869261, 1], \"1029\": [26, 32, 59, 291, 2.7312745241585343, 3.124168435748212, 4.27821247161232, 7.487445227992478, 1], \"1040\": [0, 0, 0, 2, 0, 0, 0, 1.209837923778334, 4], \"1046\": [30, 33, 49, 137, 2.381888528480951, 2.5563467911265043, 3.303650349712192, 5.3273990973629415, 1], \"202\": [0, 0, 3, 19, 0, 0, 0.08083393231470648, 1.476360779841171, 3], \"163\": [14, 14, 23, 79, 2.4214147012211003, 2.4214147012211003, 3.3567694169994864, 5.792263103354864, 1], \"727\": [3, 3, 3, 9, 1.1616252564968437, 1.1616252564968437, 1.1616252564968437, 3.0328400618690665, 1], \"1050\": [3, 3, 4, 21, 0.36101334553733055, 0.36101334553733055, 0.5726430547892012, 3.1047816292416197, 1], \"940\": [6, 6, 6, 12, 0.7866435751028106, 0.7866435751028106, 0.7866435751028106, 1.7551046750193133, 1], \"605\": [5, 8, 11, 56, 0.1756428779746495, 0.39981682608275565, 0.6571777048195748, 3.222310778868174, 1], \"803\": [0, 0, 4, 26, 0, 0, 0.28459087988210807, 2.7019962475545287, 3], \"1073\": [0, 1, 2, 6, 0, 0, 0.17904823144898546, 1.0169342576538425, 3], \"530\": [1, 3, 4, 8, 0, 0.2198594761130198, 0.3626678793363436, 1.0111040172583183, 2], \"893\": [18, 20, 27, 140, 2.3595133685856458, 2.552122795903801, 3.116535071237291, 6.357062691544947, 1], \"817\": [2, 2, 3, 20, 0.11153609770197609, 0.11153609770197609, 0.23545681154756673, 2.5493990784179004, 1], \"1103\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1113\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"739\": [5, 7, 12, 69, 0.2173012756899814, 0.38915153261664065, 0.8746593483983415, 3.854887435416367, 1], \"1121\": [0, 0, 1, 4, 0, 0, 0, 0.8023464725249373, 4], \"223\": [2, 3, 4, 17, 0.22567199766756846, 0.4508337131380154, 0.69945634975321, 2.95964588377957, 1], \"1056\": [14, 15, 21, 76, 1.6110725674772959, 1.7229856797882062, 2.304423892163703, 4.78011971442374, 1], \"451\": [3, 3, 6, 19, 0.2115583769789802, 0.2115583769789802, 0.6639286345608053, 2.3466270288247797, 1], \"503\": [1, 2, 5, 31, 0, 0.10084103435079068, 0.5087013531849099, 3.276794338795124, 2], \"1149\": [1, 1, 4, 23, 0, 0, 1.6722858160937641, 4.969625594272775, 3], \"1161\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1162\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1163\": [0, 0, 0, 2, 0, 0, 0, 0.49159426183810306, 4], \"1178\": [13, 15, 22, 55, 2.4364250799737404, 2.700615222614692, 3.42999677620518, 5.234996211115943, 1], \"1205\": [0, 1, 4, 19, 0, 0, 0.35375290706085394, 2.3585491599333444, 3], \"1215\": [0, 0, 0, 11, 0, 0, 0, 3.6587423596936977, 4], \"1184\": [2, 2, 2, 24, 0.30538164955118186, 0.30538164955118186, 0.30538164955118186, 3.959451698999257, 1], \"1218\": [4, 4, 7, 40, 1.1700712526502546, 1.1700712526502546, 2.054835730877636, 5.408167787478715, 1], \"1237\": [0, 0, 0, 10, 0, 0, 0, 3.258096538021482, 4], \"1245\": [0, 0, 3, 14, 0, 0, 0.13024159768843604, 1.3936091194326012, 3], \"1246\": [0, 0, 0, 10, 0, 0, 0, 3.638560343924229, 4], \"299\": [1, 1, 2, 7, 0, 0, 0.30538164955118186, 1.6817585740137266, 3], \"1051\": [1, 1, 3, 12, 0, 0, 1.1616252564968437, 3.586900747563491, 3], \"1275\": [0, 0, 0, 15, 0, 0, 0, 3.3245220140031875, 4], \"328\": [0, 1, 3, 33, 0, 0, 0.1008693132143216, 2.6277060853263765, 3], \"64\": [2, 2, 2, 12, 0.04652001563489285, 0.04652001563489285, 0.04652001563489285, 0.9985288301111271, 1], \"1338\": [0, 0, 0, 3, 0, 0, 0, 0.15629660339753504, 4], \"1059\": [4, 5, 10, 71, 1.1512560221535317, 1.4766784225881597, 2.67508018186464, 6.517862284419014, 1], \"804\": [0, 0, 2, 13, 0, 0, 0.7777045685880084, 3.926041926607477, 3], \"1142\": [2, 2, 3, 58, 0.3746934494414107, 0.3746934494414107, 0.7044467358138786, 5.948746817422828, 1], \"1357\": [0, 0, 0, 3, 0, 0, 0, 1.1291490125281913, 4], \"1171\": [40, 45, 84, 194, 3.5361166995615263, 3.7655511015278886, 4.959182985002625, 6.658305513505329, 1], \"616\": [1, 1, 3, 49, 0, 0, 1.6650077635889111, 7.035093149034244, 3], \"1371\": [166, 190, 299, 1236, 5.945661209875358, 6.073929630760341, 6.699817447116309, 9.789649678328146, 1], \"1128\": [15, 16, 28, 139, 1.9145759928848778, 2.02564206519683, 3.0518404359872666, 6.202480589148233, 1], \"1271\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1368\": [0, 0, 1, 11, 0, 0, 0, 3.517578033035812, 4], \"1374\": [0, 0, 5, 222, 0, 0, 1.5542091544863146, 8.895898819109947, 3], \"1377\": [0, 0, 0, 3, 0, 0, 0, 1.890850371872286, 4], \"1382\": [0, 1, 1, 3, 0, 0, 0, 1.55814461804655, 4], \"768\": [2, 3, 5, 23, 0.1656671218888174, 0.34032580593720296, 0.7543016037132759, 3.212005430821215, 1], \"676\": [2, 3, 4, 12, 0.6466271649250525, 1.11365016603265, 1.5339303599259553, 3.5183067898090647, 1], \"1025\": [2, 2, 4, 44, 0.2856138193877219, 0.2856138193877219, 0.8425641237370047, 5.081404364984463, 1], \"1399\": [0, 1, 1, 8, 0, 0, 0, 2.7227563484919055, 4], \"866\": [0, 1, 3, 10, 0, 0, 0.676886659688165, 2.4640819950232826, 3], \"794\": [1, 1, 3, 36, 0, 0, 0.4700036292457356, 4.470495282661489, 3], \"1092\": [1, 1, 2, 45, 0, 0, 0.3483066942682158, 5.356291419885857, 3], \"35\": [0, 0, 2, 18, 0, 0, 0.016019565645956312, 0.8363960417746117, 3], \"611\": [1, 1, 2, 5, 0, 0, 0.31760375231683013, 1.204906947317733, 3], \"1185\": [1, 2, 2, 5, 0, 0.3393540829961018, 0.3393540829961018, 1.2599520720678372, 2], \"1177\": [3, 3, 3, 12, 0.7537718023763802, 0.7537718023763802, 0.7537718023763802, 2.9444389791664403, 1], \"1427\": [0, 1, 3, 24, 0, 0, 0.734450986701181, 4.254159034757839, 3], \"1453\": [0, 0, 0, 5, 0, 0, 0, 2.02537432040956, 4], \"1459\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1414\": [1, 2, 4, 14, 0, 0.3308542443169896, 0.9433716904768258, 3.006458851292634, 2], \"1035\": [1, 2, 3, 14, 0, 0.29407187055055195, 0.5705448584676129, 2.876505889078356, 2], \"95\": [0, 2, 2, 13, 0, 0.19671029424605424, 0.19671029424605424, 2.320894705189382, 2], \"698\": [2, 2, 4, 18, 0.21019457697340665, 0.21019457697340665, 0.660454818874403, 2.993097225915986, 1], \"1498\": [0, 1, 1, 13, 0, 0, 0, 3.145739040877574, 4], \"1400\": [0, 0, 2, 19, 0, 0, 0.4096756406445079, 3.843662845129654, 3], \"501\": [1, 1, 2, 5, 0, 0, 0.17666954336260812, 0.7919645976288356, 3], \"1536\": [0, 0, 0, 6, 0, 0, 0, 2.772588722239781, 4], \"1550\": [2, 2, 2, 9, 0.8873031950009028, 0.8873031950009028, 0.8873031950009028, 3.398813590306879, 1], \"424\": [7, 8, 11, 24, 0.3994349390815732, 0.49547798810155075, 0.7940891310855219, 1.9127289909627714, 1], \"1554\": [5, 5, 5, 11, 1.0933072364384167, 1.0933072364384167, 1.0933072364384167, 2.3611534471451128, 1], \"1556\": [1, 1, 2, 14, 0, 0, 0.538996500732687, 3.58351893845611, 3], \"1320\": [6, 8, 17, 63, 1.0493065276839557, 1.4583752432954187, 2.766124575619892, 5.325872360885356, 1], \"1539\": [6, 7, 11, 37, 1.2332691738143668, 1.4611260095806748, 2.2165560343545265, 4.537961436294641, 1], \"1563\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"854\": [24, 29, 37, 158, 3.329195983754204, 3.6963282781269267, 4.135926543721832, 7.055171655472773, 1], \"1578\": [0, 0, 0, 5, 0, 0, 0, 1.6982334112172315, 4], \"406\": [1, 1, 2, 23, 0, 0, 0.5108256237659907, 4.490507277667952, 3], \"1404\": [0, 1, 2, 11, 0, 0, 0.9088557533866369, 3.824607506388159, 3], \"1221\": [2, 2, 2, 8, 0.3643378166843015, 0.3643378166843015, 0.3643378166843015, 2.0835539532329284, 1], \"1446\": [1, 2, 4, 42, 0, 0.6257058997644127, 1.499234772300486, 5.951887248646585, 2], \"948\": [0, 1, 2, 7, 0, 0, 0.05436120921888738, 0.5213842103264852, 3], \"889\": [0, 1, 2, 7, 0, 0, 0.245122458032985, 1.4822356548612252, 3], \"955\": [2, 2, 4, 14, 0.7191226669632059, 0.7191226669632059, 1.6506808709681495, 3.962315799482113, 1], \"795\": [1, 1, 5, 9, 0, 0, 0.7357067949787413, 1.508896683212223, 3], \"1207\": [1, 2, 3, 27, 0, 0.21706450523782758, 0.4353180712578455, 3.8106947532982582, 2], \"1256\": [6, 7, 7, 15, 1.3440770366239985, 1.5806819374467964, 1.5806819374467964, 2.9294073809016026, 1], \"1621\": [1, 2, 2, 21, 0, 0.4572413776318843, 0.4572413776318843, 4.173048581610041, 2], \"832\": [0, 0, 2, 11, 0, 0, 0.49159426183810306, 3.005996872165874, 3], \"1095\": [1, 1, 2, 9, 0, 0, 0.44183275227903923, 2.505525936990736, 3], \"1665\": [2, 2, 2, 25, 0.680877087968131, 0.680877087968131, 0.680877087968131, 5.033303252865722, 1], \"1285\": [5, 5, 9, 62, 0.9564971523521957, 0.9564971523521957, 1.823307826962981, 5.511047915890737, 1], \"1648\": [7, 8, 9, 21, 1.5209656148047959, 1.7354594245395225, 1.9333181673579534, 3.5022420279968856, 1], \"1646\": [18, 21, 29, 117, 2.0105021332632815, 2.28262676495438, 2.878435646527855, 5.613980053356753, 1], \"1579\": [0, 1, 2, 5, 0, 0, 1.1700712526502546, 2.700615222614692, 3], \"1713\": [98, 112, 170, 535, 5.375606795849845, 5.6143688900613755, 6.211965876665373, 9.187041037175588, 1], \"1729\": [0, 0, 0, 2, 0, 0, 0, 1.6945957207744073, 4], \"389\": [1, 1, 2, 5, 0, 0, 0.0813456394539524, 0.42504615330727086, 3], \"1116\": [6, 8, 9, 27, 0.8645955889780826, 1.2362700163015268, 1.4089368378696505, 3.3612232040642396, 1], \"1319\": [0, 0, 4, 10, 0, 0, 0.21271903397832567, 0.9088557533866369, 3], \"1091\": [1, 1, 2, 8, 0, 0, 1.2992829841302609, 3.7765850345330416, 3], \"86\": [1, 1, 3, 10, 0, 0, 0.1849516541207089, 1.1809097887287352, 3], \"1781\": [2, 2, 2, 8, 0.09055957704572704, 0.09055957704572704, 0.09055957704572704, 0.9229038877658723, 1], \"1635\": [1, 1, 3, 5, 0, 0, 0.13196276485189606, 0.33063345964738017, 3], \"1790\": [113, 125, 197, 452, 5.5313430231134495, 5.705124131739729, 6.3779480935679365, 8.74497085892109, 1], \"1337\": [2, 2, 4, 9, 1.0986122886681096, 1.0986122886681096, 2.1972245773362196, 3.725693427236653, 1], \"1737\": [1, 1, 2, 15, 0, 0, 0.18232155679395462, 2.505525936990736, 3], \"1801\": [1, 1, 1, 2, 0, 0, 0, 0.05038849241281318, 4], \"1819\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"606\": [0, 0, 2, 5, 0, 0, 0.3746934494414107, 1.3457090810048122, 3], \"1780\": [6, 6, 9, 27, 1.55814461804655, 1.55814461804655, 2.244691114575143, 4.342993403944672, 1], \"1604\": [2, 2, 2, 5, 0.1559573650522073, 0.1559573650522073, 0.1559573650522073, 0.7202039819474586, 1], \"1848\": [0, 0, 0, 8, 0, 0, 0, 1.552005863348225, 4], \"1603\": [0, 0, 3, 13, 0, 0, 0.11595988109486835, 1.196568410151726, 3], \"1842\": [0, 0, 2, 13, 0, 0, 0.8873031950009028, 4.116711592368997, 3], \"1908\": [3, 3, 6, 44, 0.040219898111907335, 0.040219898111907335, 0.15199866882359564, 2.2852445485619257, 1], \"1899\": [0, 0, 0, 3, 0, 0, 0, 0.37948962170490375, 4], \"1909\": [86, 112, 189, 489, 5.054035888484681, 5.553059271354744, 6.362273120914156, 8.969524986730965, 1], \"1915\": [0, 0, 0, 2, 0, 0, 0, 0.3643378166843015, 4], \"1931\": [2, 2, 2, 2, 0.3933437475758196, 0.3933437475758196, 0.3933437475758196, 0.3933437475758196, 1], \"1406\": [0, 0, 2, 6, 0, 0, 0.09958470542943662, 0.6639286345608053, 3], \"1959\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1980\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1231\": [0, 1, 2, 5, 0, 0, 0.13133600206108695, 0.629777566627356, 3], \"978\": [0, 0, 2, 3, 0, 0, 0.17985546429876115, 0.36696662997527996, 3], \"2019\": [8, 8, 8, 39, 2.093234863812172, 2.093234863812172, 2.093234863812172, 5.135798437050262, 1], \"2045\": [1, 2, 11, 52, 0, 0.7328875092094594, 3.517578033035812, 6.588037669624191, 2], \"2046\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2040\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"735\": [5, 5, 10, 29, 0.3057580563761176, 0.3057580563761176, 0.8881443794381217, 2.5673674725109996, 1], \"2048\": [0, 0, 1, 5, 0, 0, 0, 0.40950551764516935, 4], \"1663\": [1, 1, 2, 15, 0, 0, 0.7472144018302211, 4.151039905898646, 3], \"1883\": [1, 1, 3, 7, 0, 0, 1.7047480922384253, 3.2386784521643803, 3], \"2078\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2097\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1305\": [4, 4, 9, 23, 1.0434802179733935, 1.0434802179733935, 2.3331477434042123, 4.123977758155094, 1], \"930\": [1, 3, 3, 5, 0, 0.8187244879431477, 0.8187244879431477, 1.5087612460887005, 2], \"1288\": [1, 3, 3, 6, 0, 1.0169342576538425, 1.0169342576538425, 2.086767581771909, 2], \"2126\": [0, 0, 0, 3, 0, 0, 0, 2.9444389791664403, 4], \"2090\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1894\": [1, 2, 2, 9, 0, 0.021882711249507664, 0.021882711249507664, 0.37018940551772345, 2], \"1765\": [2, 2, 2, 4, 0.026526754333428628, 0.026526754333428628, 0.026526754333428628, 0.10212949507637983, 1], \"2140\": [1, 1, 2, 2, 0, 0, 1.791759469228055, 1.791759469228055, 3], \"595\": [0, 1, 3, 14, 0, 0, 0.0458328688072345, 0.7037731714322673, 3], \"643\": [3, 4, 10, 17, 0.0939167287975245, 0.16131470361466, 0.7391200005587495, 1.425977852211131, 1], \"1243\": [3, 3, 3, 5, 0.24378787889455567, 0.24378787889455567, 0.24378787889455567, 0.5692102793291836, 1], \"2047\": [2, 2, 2, 5, 0.2876820724517809, 0.2876820724517809, 0.2876820724517809, 1.1260112628562242, 1], \"684\": [0, 0, 2, 3, 0, 0, 0.1391128024627178, 0.28954600588984364, 3], \"1477\": [3, 3, 3, 5, 0.7044467358138786, 0.7044467358138786, 0.7044467358138786, 1.3457090810048122, 1], \"2038\": [2, 2, 2, 6, 0.13720112151348504, 0.13720112151348504, 0.13720112151348504, 0.8430873278508602, 1], \"2184\": [5, 5, 13, 32, 1.9597512004671847, 1.9597512004671847, 3.704853199710412, 5.524480743838411, 1], \"1300\": [0, 0, 3, 9, 0, 0, 0.6146755651184501, 2.156577270562063, 3], \"2102\": [1, 1, 4, 5, 0, 0, 0.8979415932059586, 1.1856236656577395, 3], \"2211\": [1, 1, 4, 6, 0, 0, 0.9088557533866369, 1.4663370687934272, 3], \"2095\": [3, 3, 3, 6, 0.6466271649250525, 0.6466271649250525, 0.6466271649250525, 1.5339303599259553, 1], \"1397\": [1, 1, 3, 5, 0, 0, 0.3161972427598021, 0.7095409903356217, 3], \"2232\": [2, 2, 2, 3, 0.44183275227903923, 0.44183275227903923, 0.44183275227903923, 0.8109302162163288, 1], \"2335\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2316\": [3, 3, 5, 5, 0.7958013346200287, 0.7958013346200287, 1.4766784225881597, 1.4766784225881597, 1], \"1951\": [0, 1, 2, 4, 0, 0, 0.2876820724517809, 0.8472978603872036, 3], \"1296\": [0, 0, 2, 2, 0, 0, 0.9315582040049435, 0.9315582040049435, 3], \"1966\": [1, 1, 2, 5, 0, 0, 0.1578069910303688, 0.7267637913589302, 3], \"2383\": [2, 2, 5, 7, 0.06669137449867221, 0.06669137449867221, 0.35839759725017856, 0.6123858239154869, 1], \"2347\": [5, 6, 7, 8, 0.8397506547518208, 1.0628942060660305, 1.2750687260096663, 1.4744016286301573, 1], \"2374\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"583\": [0, 0, 3, 4, 0, 0, 0.4700036292457356, 0.7259370033829362, 3], \"1542\": [0, 1, 2, 2, 0, 0, 0.36772478012531734, 0.36772478012531734, 3], \"1038\": [2, 2, 3, 3, 0.7777045685880084, 0.7777045685880084, 1.2939210409888755, 1.2939210409888755, 1], \"1516\": [0, 1, 2, 2, 0, 0, 1.4663370687934272, 1.4663370687934272, 3], \"1970\": [0, 0, 3, 5, 0, 0, 0.5049690916532777, 1.0384437672016569, 3], \"2473\": [0, 1, 2, 3, 0, 0, 0.7191226669632059, 1.2144441041932312, 3], \"2134\": [0, 0, 2, 4, 0, 0, 0.5042466526679481, 1.2872888373444415, 3], \"2483\": [5, 5, 5, 7, 1.3893018821838459, 1.3893018821838459, 1.3893018821838459, 1.9320451089181416, 1], \"2342\": [0, 0, 2, 2, 0, 0, 0.5968160716215132, 0.5968160716215132, 3], \"2123\": [0, 0, 2, 3, 0, 0, 0.9315582040049435, 1.4954936530848826, 3], \"623\": [0, 0, 2, 2, 0, 0, 0.5705448584676129, 0.5705448584676129, 3], \"1466\": [0, 0, 2, 2, 0, 0, 1.1700712526502546, 1.1700712526502546, 3], \"1549\": [2, 2, 3, 3, 0.39730179746900346, 0.39730179746900346, 0.7407752295491999, 0.7407752295491999, 1], \"2494\": [1, 1, 2, 2, 0, 0, 1.133098464739279, 1.133098464739279, 3], \"711\": [0, 1, 2, 2, 0, 0, 2.1972245773362196, 2.1972245773362196, 3], \"1706\": [0, 1, 2, 4, 0, 0, 0.2016859239757458, 0.6386143015396952, 3], \"2550\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1093\": [2, 2, 3, 4, 0.44183275227903923, 0.44183275227903923, 0.8109302162163288, 1.1700712526502546, 1], \"2639\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2662\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1585\": [0, 2, 2, 2, 0, 0.12247703235966204, 0.12247703235966204, 0.12247703235966204, 2], \"649\": [0, 2, 2, 2, 0, 0.14465605390747982, 0.14465605390747982, 0.14465605390747982, 2], \"2809\": [8, 11, 11, 26, 0.4720044537818786, 0.7610084034915754, 0.7610084034915754, 1.9976005639876282, 1], \"2732\": [1, 3, 3, 7, 0, 0.10763066419236544, 0.10763066419236544, 0.4816152456661895, 2], \"2917\": [0, 0, 0, 2, 0, 0, 0, 0.10161017641078245, 4], \"1777\": [2, 2, 2, 3, 0.0891458495182624, 0.0891458495182624, 0.0891458495182624, 0.19044696423787166, 1], \"1460\": [5, 5, 5, 7, 0.7566953924986649, 0.7566953924986649, 0.7566953924986649, 1.1685097282854882, 1], \"2368\": [2, 2, 2, 2, 0.38946476676172326, 0.38946476676172326, 0.38946476676172326, 0.38946476676172326, 1], \"2696\": [2, 2, 2, 2, 0.5175824062288705, 0.5175824062288705, 0.5175824062288705, 0.5175824062288705, 1], \"2107\": [2, 2, 2, 3, 0.3643378166843015, 0.3643378166843015, 0.3643378166843015, 0.6876375247489758, 1], \"2563\": [2, 2, 2, 3, 0.4369283775639494, 0.4369283775639494, 0.4369283775639494, 0.8032907596583713, 1], \"3206\": [3, 3, 3, 3, 0.29528667183700025, 0.29528667183700025, 0.29528667183700025, 0.29528667183700025, 1], \"2725\": [2, 2, 2, 2, 0.36772478012531734, 0.36772478012531734, 0.36772478012531734, 0.36772478012531734, 1], \"2552\": [3, 3, 3, 4, 0.4353180712578455, 0.4353180712578455, 0.4353180712578455, 0.6778797084291569, 1], \"584\": [2, 2, 2, 7, 0.013624188939543626, 0.013624188939543626, 0.013624188939543626, 0.15532576809408483, 1], \"3315\": [2, 2, 2, 2, 0.9808292530117262, 0.9808292530117262, 0.9808292530117262, 0.9808292530117262, 1]}"
}