{
  "name": "Microsoft",
  "slug": "microsoft",
  "questions": [
    {
      "status": "ac",
      "questionId": "1",
      "questionFrontendId": "1",
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "acRate": "52.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2",
      "questionFrontendId": "2",
      "title": "Add Two Numbers",
      "titleSlug": "add-two-numbers",
      "acRate": "42.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "3",
      "questionFrontendId": "3",
      "title": "Longest Substring Without Repeating Characters",
      "titleSlug": "longest-substring-without-repeating-characters",
      "acRate": "34.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "4",
      "questionFrontendId": "4",
      "title": "Median of Two Sorted Arrays",
      "titleSlug": "median-of-two-sorted-arrays",
      "acRate": "39.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "5",
      "questionFrontendId": "5",
      "title": "Longest Palindromic Substring",
      "titleSlug": "longest-palindromic-substring",
      "acRate": "33.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "6",
      "questionFrontendId": "6",
      "title": "Zigzag Conversion",
      "titleSlug": "zigzag-conversion",
      "acRate": "47.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "7",
      "questionFrontendId": "7",
      "title": "Reverse Integer",
      "titleSlug": "reverse-integer",
      "acRate": "28.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "8",
      "questionFrontendId": "8",
      "title": "String to Integer (atoi)",
      "titleSlug": "string-to-integer-atoi",
      "acRate": "17.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "9",
      "questionFrontendId": "9",
      "title": "Palindrome Number",
      "titleSlug": "palindrome-number",
      "acRate": "56.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "10",
      "questionFrontendId": "10",
      "title": "Regular Expression Matching",
      "titleSlug": "regular-expression-matching",
      "acRate": "28.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "11",
      "questionFrontendId": "11",
      "title": "Container With Most Water",
      "titleSlug": "container-with-most-water",
      "acRate": "55.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "12",
      "questionFrontendId": "12",
      "title": "Integer to Roman",
      "titleSlug": "integer-to-roman",
      "acRate": "64.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "13",
      "questionFrontendId": "13",
      "title": "Roman to Integer",
      "titleSlug": "roman-to-integer",
      "acRate": "60.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "14",
      "questionFrontendId": "14",
      "title": "Longest Common Prefix",
      "titleSlug": "longest-common-prefix",
      "acRate": "42.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "15",
      "questionFrontendId": "15",
      "title": "3Sum",
      "titleSlug": "3sum",
      "acRate": "34.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "16",
      "questionFrontendId": "16",
      "title": "3Sum Closest",
      "titleSlug": "3sum-closest",
      "acRate": "45.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "17",
      "questionFrontendId": "17",
      "title": "Letter Combinations of a Phone Number",
      "titleSlug": "letter-combinations-of-a-phone-number",
      "acRate": "60.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "18",
      "questionFrontendId": "18",
      "title": "4Sum",
      "titleSlug": "4sum",
      "acRate": "36.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "19",
      "questionFrontendId": "19",
      "title": "Remove Nth Node From End of List",
      "titleSlug": "remove-nth-node-from-end-of-list",
      "acRate": "45.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "20",
      "questionFrontendId": "20",
      "title": "Valid Parentheses",
      "titleSlug": "valid-parentheses",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "21",
      "questionFrontendId": "21",
      "title": "Merge Two Sorted Lists",
      "titleSlug": "merge-two-sorted-lists",
      "acRate": "64.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "22",
      "questionFrontendId": "22",
      "title": "Generate Parentheses",
      "titleSlug": "generate-parentheses",
      "acRate": "74.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "23",
      "questionFrontendId": "23",
      "title": "Merge k Sorted Lists",
      "titleSlug": "merge-k-sorted-lists",
      "acRate": "52.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "24",
      "questionFrontendId": "24",
      "title": "Swap Nodes in Pairs",
      "titleSlug": "swap-nodes-in-pairs",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "25",
      "questionFrontendId": "25",
      "title": "Reverse Nodes in k-Group",
      "titleSlug": "reverse-nodes-in-k-group",
      "acRate": "58.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "26",
      "questionFrontendId": "26",
      "title": "Remove Duplicates from Sorted Array",
      "titleSlug": "remove-duplicates-from-sorted-array",
      "acRate": "55.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "27",
      "questionFrontendId": "27",
      "title": "Remove Element",
      "titleSlug": "remove-element",
      "acRate": "56.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "28",
      "questionFrontendId": "28",
      "title": "Find the Index of the First Occurrence in a String",
      "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
      "acRate": "42.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "29",
      "questionFrontendId": "29",
      "title": "Divide Two Integers",
      "titleSlug": "divide-two-integers",
      "acRate": "17.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "30",
      "questionFrontendId": "30",
      "title": "Substring with Concatenation of All Words",
      "titleSlug": "substring-with-concatenation-of-all-words",
      "acRate": "32.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "31",
      "questionFrontendId": "31",
      "title": "Next Permutation",
      "titleSlug": "next-permutation",
      "acRate": "39.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "32",
      "questionFrontendId": "32",
      "title": "Longest Valid Parentheses",
      "titleSlug": "longest-valid-parentheses",
      "acRate": "34.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "33",
      "questionFrontendId": "33",
      "title": "Search in Rotated Sorted Array",
      "titleSlug": "search-in-rotated-sorted-array",
      "acRate": "40.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "34",
      "questionFrontendId": "34",
      "title": "Find First and Last Position of Element in Sorted Array",
      "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
      "acRate": "44.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "35",
      "questionFrontendId": "35",
      "title": "Search Insert Position",
      "titleSlug": "search-insert-position",
      "acRate": "45.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "36",
      "questionFrontendId": "36",
      "title": "Valid Sudoku",
      "titleSlug": "valid-sudoku",
      "acRate": "59.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "37",
      "questionFrontendId": "37",
      "title": "Sudoku Solver",
      "titleSlug": "sudoku-solver",
      "acRate": "60.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "38",
      "questionFrontendId": "38",
      "title": "Count and Say",
      "titleSlug": "count-and-say",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "39",
      "questionFrontendId": "39",
      "title": "Combination Sum",
      "titleSlug": "combination-sum",
      "acRate": "71.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "41",
      "questionFrontendId": "41",
      "title": "First Missing Positive",
      "titleSlug": "first-missing-positive",
      "acRate": "37.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "42",
      "questionFrontendId": "42",
      "title": "Trapping Rain Water",
      "titleSlug": "trapping-rain-water",
      "acRate": "60.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "43",
      "questionFrontendId": "43",
      "title": "Multiply Strings",
      "titleSlug": "multiply-strings",
      "acRate": "40.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "44",
      "questionFrontendId": "44",
      "title": "Wildcard Matching",
      "titleSlug": "wildcard-matching",
      "acRate": "27.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "45",
      "questionFrontendId": "45",
      "title": "Jump Game II",
      "titleSlug": "jump-game-ii",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "46",
      "questionFrontendId": "46",
      "title": "Permutations",
      "titleSlug": "permutations",
      "acRate": "78.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "47",
      "questionFrontendId": "47",
      "title": "Permutations II",
      "titleSlug": "permutations-ii",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "48",
      "questionFrontendId": "48",
      "title": "Rotate Image",
      "titleSlug": "rotate-image",
      "acRate": "74.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "49",
      "questionFrontendId": "49",
      "title": "Group Anagrams",
      "titleSlug": "group-anagrams",
      "acRate": "68.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "50",
      "questionFrontendId": "50",
      "title": "Pow(x, n)",
      "titleSlug": "powx-n",
      "acRate": "34.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "51",
      "questionFrontendId": "51",
      "title": "N-Queens",
      "titleSlug": "n-queens",
      "acRate": "67.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "52",
      "questionFrontendId": "52",
      "title": "N-Queens II",
      "titleSlug": "n-queens-ii",
      "acRate": "73.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "53",
      "questionFrontendId": "53",
      "title": "Maximum Subarray",
      "titleSlug": "maximum-subarray",
      "acRate": "50.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "54",
      "questionFrontendId": "54",
      "title": "Spiral Matrix",
      "titleSlug": "spiral-matrix",
      "acRate": "49.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "55",
      "questionFrontendId": "55",
      "title": "Jump Game",
      "titleSlug": "jump-game",
      "acRate": "38.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "56",
      "questionFrontendId": "56",
      "title": "Merge Intervals",
      "titleSlug": "merge-intervals",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "57",
      "questionFrontendId": "57",
      "title": "Insert Interval",
      "titleSlug": "insert-interval",
      "acRate": "41.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "59",
      "questionFrontendId": "59",
      "title": "Spiral Matrix II",
      "titleSlug": "spiral-matrix-ii",
      "acRate": "70.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "61",
      "questionFrontendId": "61",
      "title": "Rotate List",
      "titleSlug": "rotate-list",
      "acRate": "37.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "62",
      "questionFrontendId": "62",
      "title": "Unique Paths",
      "titleSlug": "unique-paths",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "63",
      "questionFrontendId": "63",
      "title": "Unique Paths II",
      "titleSlug": "unique-paths-ii",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "64",
      "questionFrontendId": "64",
      "title": "Minimum Path Sum",
      "titleSlug": "minimum-path-sum",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "66",
      "questionFrontendId": "66",
      "title": "Plus One",
      "titleSlug": "plus-one",
      "acRate": "45.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "67",
      "questionFrontendId": "67",
      "title": "Add Binary",
      "titleSlug": "add-binary",
      "acRate": "53.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "68",
      "questionFrontendId": "68",
      "title": "Text Justification",
      "titleSlug": "text-justification",
      "acRate": "43.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "69",
      "questionFrontendId": "69",
      "title": "Sqrt(x)",
      "titleSlug": "sqrtx",
      "acRate": "38.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "70",
      "questionFrontendId": "70",
      "title": "Climbing Stairs",
      "titleSlug": "climbing-stairs",
      "acRate": "52.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "71",
      "questionFrontendId": "71",
      "title": "Simplify Path",
      "titleSlug": "simplify-path",
      "acRate": "42.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "72",
      "questionFrontendId": "72",
      "title": "Edit Distance",
      "titleSlug": "edit-distance",
      "acRate": "56.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "73",
      "questionFrontendId": "73",
      "title": "Set Matrix Zeroes",
      "titleSlug": "set-matrix-zeroes",
      "acRate": "55.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "74",
      "questionFrontendId": "74",
      "title": "Search a 2D Matrix",
      "titleSlug": "search-a-2d-matrix",
      "acRate": "49.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "75",
      "questionFrontendId": "75",
      "title": "Sort Colors",
      "titleSlug": "sort-colors",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "76",
      "questionFrontendId": "76",
      "title": "Minimum Window Substring",
      "titleSlug": "minimum-window-substring",
      "acRate": "42.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "77",
      "questionFrontendId": "77",
      "title": "Combinations",
      "titleSlug": "combinations",
      "acRate": "70.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "78",
      "questionFrontendId": "78",
      "title": "Subsets",
      "titleSlug": "subsets",
      "acRate": "77.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "79",
      "questionFrontendId": "79",
      "title": "Word Search",
      "titleSlug": "word-search",
      "acRate": "41.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "80",
      "questionFrontendId": "80",
      "title": "Remove Duplicates from Sorted Array II",
      "titleSlug": "remove-duplicates-from-sorted-array-ii",
      "acRate": "57.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "81",
      "questionFrontendId": "81",
      "title": "Search in Rotated Sorted Array II",
      "titleSlug": "search-in-rotated-sorted-array-ii",
      "acRate": "37.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "82",
      "questionFrontendId": "82",
      "title": "Remove Duplicates from Sorted List II",
      "titleSlug": "remove-duplicates-from-sorted-list-ii",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "83",
      "questionFrontendId": "83",
      "title": "Remove Duplicates from Sorted List",
      "titleSlug": "remove-duplicates-from-sorted-list",
      "acRate": "52.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "84",
      "questionFrontendId": "84",
      "title": "Largest Rectangle in Histogram",
      "titleSlug": "largest-rectangle-in-histogram",
      "acRate": "44.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "85",
      "questionFrontendId": "85",
      "title": "Maximal Rectangle",
      "titleSlug": "maximal-rectangle",
      "acRate": "46.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "86",
      "questionFrontendId": "86",
      "title": "Partition List",
      "titleSlug": "partition-list",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "88",
      "questionFrontendId": "88",
      "title": "Merge Sorted Array",
      "titleSlug": "merge-sorted-array",
      "acRate": "49.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "90",
      "questionFrontendId": "90",
      "title": "Subsets II",
      "titleSlug": "subsets-ii",
      "acRate": "57.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "91",
      "questionFrontendId": "91",
      "title": "Decode Ways",
      "titleSlug": "decode-ways",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "92",
      "questionFrontendId": "92",
      "title": "Reverse Linked List II",
      "titleSlug": "reverse-linked-list-ii",
      "acRate": "47.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "93",
      "questionFrontendId": "93",
      "title": "Restore IP Addresses",
      "titleSlug": "restore-ip-addresses",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "94",
      "questionFrontendId": "94",
      "title": "Binary Tree Inorder Traversal",
      "titleSlug": "binary-tree-inorder-traversal",
      "acRate": "75.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "95",
      "questionFrontendId": "95",
      "title": "Unique Binary Search Trees II",
      "titleSlug": "unique-binary-search-trees-ii",
      "acRate": "57.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "96",
      "questionFrontendId": "96",
      "title": "Unique Binary Search Trees",
      "titleSlug": "unique-binary-search-trees",
      "acRate": "60.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "97",
      "questionFrontendId": "97",
      "title": "Interleaving String",
      "titleSlug": "interleaving-string",
      "acRate": "39.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "98",
      "questionFrontendId": "98",
      "title": "Validate Binary Search Tree",
      "titleSlug": "validate-binary-search-tree",
      "acRate": "32.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "99",
      "questionFrontendId": "99",
      "title": "Recover Binary Search Tree",
      "titleSlug": "recover-binary-search-tree",
      "acRate": "52.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "100",
      "questionFrontendId": "100",
      "title": "Same Tree",
      "titleSlug": "same-tree",
      "acRate": "61.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "101",
      "questionFrontendId": "101",
      "title": "Symmetric Tree",
      "titleSlug": "symmetric-tree",
      "acRate": "56.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "102",
      "questionFrontendId": "102",
      "title": "Binary Tree Level Order Traversal",
      "titleSlug": "binary-tree-level-order-traversal",
      "acRate": "66.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "103",
      "questionFrontendId": "103",
      "title": "Binary Tree Zigzag Level Order Traversal",
      "titleSlug": "binary-tree-zigzag-level-order-traversal",
      "acRate": "58.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "104",
      "questionFrontendId": "104",
      "title": "Maximum Depth of Binary Tree",
      "titleSlug": "maximum-depth-of-binary-tree",
      "acRate": "75.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "105",
      "questionFrontendId": "105",
      "title": "Construct Binary Tree from Preorder and Inorder Traversal",
      "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "106",
      "questionFrontendId": "106",
      "title": "Construct Binary Tree from Inorder and Postorder Traversal",
      "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
      "acRate": "62.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "108",
      "questionFrontendId": "108",
      "title": "Convert Sorted Array to Binary Search Tree",
      "titleSlug": "convert-sorted-array-to-binary-search-tree",
      "acRate": "71.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "109",
      "questionFrontendId": "109",
      "title": "Convert Sorted List to Binary Search Tree",
      "titleSlug": "convert-sorted-list-to-binary-search-tree",
      "acRate": "61.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "110",
      "questionFrontendId": "110",
      "title": "Balanced Binary Tree",
      "titleSlug": "balanced-binary-tree",
      "acRate": "51.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "111",
      "questionFrontendId": "111",
      "title": "Minimum Depth of Binary Tree",
      "titleSlug": "minimum-depth-of-binary-tree",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "112",
      "questionFrontendId": "112",
      "title": "Path Sum",
      "titleSlug": "path-sum",
      "acRate": "50.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "114",
      "questionFrontendId": "114",
      "title": "Flatten Binary Tree to Linked List",
      "titleSlug": "flatten-binary-tree-to-linked-list",
      "acRate": "64.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "115",
      "questionFrontendId": "115",
      "title": "Distinct Subsequences",
      "titleSlug": "distinct-subsequences",
      "acRate": "46.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "116",
      "questionFrontendId": "116",
      "title": "Populating Next Right Pointers in Each Node",
      "titleSlug": "populating-next-right-pointers-in-each-node",
      "acRate": "62.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "117",
      "questionFrontendId": "117",
      "title": "Populating Next Right Pointers in Each Node II",
      "titleSlug": "populating-next-right-pointers-in-each-node-ii",
      "acRate": "52.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "118",
      "questionFrontendId": "118",
      "title": "Pascal's Triangle",
      "titleSlug": "pascals-triangle",
      "acRate": "74.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "120",
      "questionFrontendId": "120",
      "title": "Triangle",
      "titleSlug": "triangle",
      "acRate": "56.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "121",
      "questionFrontendId": "121",
      "title": "Best Time to Buy and Sell Stock",
      "titleSlug": "best-time-to-buy-and-sell-stock",
      "acRate": "53.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "122",
      "questionFrontendId": "122",
      "title": "Best Time to Buy and Sell Stock II",
      "titleSlug": "best-time-to-buy-and-sell-stock-ii",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "124",
      "questionFrontendId": "124",
      "title": "Binary Tree Maximum Path Sum",
      "titleSlug": "binary-tree-maximum-path-sum",
      "acRate": "40.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "125",
      "questionFrontendId": "125",
      "title": "Valid Palindrome",
      "titleSlug": "valid-palindrome",
      "acRate": "47.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "126",
      "questionFrontendId": "126",
      "title": "Word Ladder II",
      "titleSlug": "word-ladder-ii",
      "acRate": "27.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "127",
      "questionFrontendId": "127",
      "title": "Word Ladder",
      "titleSlug": "word-ladder",
      "acRate": "38.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "128",
      "questionFrontendId": "128",
      "title": "Longest Consecutive Sequence",
      "titleSlug": "longest-consecutive-sequence",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "129",
      "questionFrontendId": "129",
      "title": "Sum Root to Leaf Numbers",
      "titleSlug": "sum-root-to-leaf-numbers",
      "acRate": "63.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "130",
      "questionFrontendId": "130",
      "title": "Surrounded Regions",
      "titleSlug": "surrounded-regions",
      "acRate": "39.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "133",
      "questionFrontendId": "133",
      "title": "Clone Graph",
      "titleSlug": "clone-graph",
      "acRate": "56.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "134",
      "questionFrontendId": "134",
      "title": "Gas Station",
      "titleSlug": "gas-station",
      "acRate": "45.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "135",
      "questionFrontendId": "135",
      "title": "Candy",
      "titleSlug": "candy",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "136",
      "questionFrontendId": "136",
      "title": "Single Number",
      "titleSlug": "single-number",
      "acRate": "72.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "138",
      "questionFrontendId": "138",
      "title": "Copy List with Random Pointer",
      "titleSlug": "copy-list-with-random-pointer",
      "acRate": "55.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "139",
      "questionFrontendId": "139",
      "title": "Word Break",
      "titleSlug": "word-break",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "140",
      "questionFrontendId": "140",
      "title": "Word Break II",
      "titleSlug": "word-break-ii",
      "acRate": "47.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "141",
      "questionFrontendId": "141",
      "title": "Linked List Cycle",
      "titleSlug": "linked-list-cycle",
      "acRate": "50.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "142",
      "questionFrontendId": "142",
      "title": "Linked List Cycle II",
      "titleSlug": "linked-list-cycle-ii",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "143",
      "questionFrontendId": "143",
      "title": "Reorder List",
      "titleSlug": "reorder-list",
      "acRate": "58.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "144",
      "questionFrontendId": "144",
      "title": "Binary Tree Preorder Traversal",
      "titleSlug": "binary-tree-preorder-traversal",
      "acRate": "69.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "146",
      "questionFrontendId": "146",
      "title": "LRU Cache",
      "titleSlug": "lru-cache",
      "acRate": "42.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "147",
      "questionFrontendId": "147",
      "title": "Insertion Sort List",
      "titleSlug": "insertion-sort-list",
      "acRate": "53.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "148",
      "questionFrontendId": "148",
      "title": "Sort List",
      "titleSlug": "sort-list",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "149",
      "questionFrontendId": "149",
      "title": "Max Points on a Line",
      "titleSlug": "max-points-on-a-line",
      "acRate": "26.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "150",
      "questionFrontendId": "150",
      "title": "Evaluate Reverse Polish Notation",
      "titleSlug": "evaluate-reverse-polish-notation",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "151",
      "questionFrontendId": "151",
      "title": "Reverse Words in a String",
      "titleSlug": "reverse-words-in-a-string",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "152",
      "questionFrontendId": "152",
      "title": "Maximum Product Subarray",
      "titleSlug": "maximum-product-subarray",
      "acRate": "35.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "153",
      "questionFrontendId": "153",
      "title": "Find Minimum in Rotated Sorted Array",
      "titleSlug": "find-minimum-in-rotated-sorted-array",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "154",
      "questionFrontendId": "154",
      "title": "Find Minimum in Rotated Sorted Array II",
      "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
      "acRate": "43.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "155",
      "questionFrontendId": "155",
      "title": "Min Stack",
      "titleSlug": "min-stack",
      "acRate": "54.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "158",
      "questionFrontendId": "158",
      "title": "Read N Characters Given read4 II - Call Multiple Times",
      "titleSlug": "read-n-characters-given-read4-ii-call-multiple-times",
      "acRate": "42.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "160",
      "questionFrontendId": "160",
      "title": "Intersection of Two Linked Lists",
      "titleSlug": "intersection-of-two-linked-lists",
      "acRate": "57.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "162",
      "questionFrontendId": "162",
      "title": "Find Peak Element",
      "titleSlug": "find-peak-element",
      "acRate": "45.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "163",
      "questionFrontendId": "163",
      "title": "Missing Ranges",
      "titleSlug": "missing-ranges",
      "acRate": "33.5%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "165",
      "questionFrontendId": "165",
      "title": "Compare Version Numbers",
      "titleSlug": "compare-version-numbers",
      "acRate": "36.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "166",
      "questionFrontendId": "166",
      "title": "Fraction to Recurring Decimal",
      "titleSlug": "fraction-to-recurring-decimal",
      "acRate": "24.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "167",
      "questionFrontendId": "167",
      "title": "Two Sum II - Input Array Is Sorted",
      "titleSlug": "two-sum-ii-input-array-is-sorted",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "168",
      "questionFrontendId": "168",
      "title": "Excel Sheet Column Title",
      "titleSlug": "excel-sheet-column-title",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "169",
      "questionFrontendId": "169",
      "title": "Majority Element",
      "titleSlug": "majority-element",
      "acRate": "64.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "171",
      "questionFrontendId": "171",
      "title": "Excel Sheet Column Number",
      "titleSlug": "excel-sheet-column-number",
      "acRate": "63.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "172",
      "questionFrontendId": "172",
      "title": "Factorial Trailing Zeroes",
      "titleSlug": "factorial-trailing-zeroes",
      "acRate": "43.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "173",
      "questionFrontendId": "173",
      "title": "Binary Search Tree Iterator",
      "titleSlug": "binary-search-tree-iterator",
      "acRate": "71.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "174",
      "questionFrontendId": "174",
      "title": "Dungeon Game",
      "titleSlug": "dungeon-game",
      "acRate": "38.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "175",
      "questionFrontendId": "175",
      "title": "Combine Two Tables",
      "titleSlug": "combine-two-tables",
      "acRate": "75.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "176",
      "questionFrontendId": "176",
      "title": "Second Highest Salary",
      "titleSlug": "second-highest-salary",
      "acRate": "40.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "179",
      "questionFrontendId": "179",
      "title": "Largest Number",
      "titleSlug": "largest-number",
      "acRate": "36.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "181",
      "questionFrontendId": "181",
      "title": "Employees Earning More Than Their Managers",
      "titleSlug": "employees-earning-more-than-their-managers",
      "acRate": "69.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "185",
      "questionFrontendId": "185",
      "title": "Department Top Three Salaries",
      "titleSlug": "department-top-three-salaries",
      "acRate": "52.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "186",
      "questionFrontendId": "186",
      "title": "Reverse Words in a String II",
      "titleSlug": "reverse-words-in-a-string-ii",
      "acRate": "54.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "189",
      "questionFrontendId": "189",
      "title": "Rotate Array",
      "titleSlug": "rotate-array",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "191",
      "questionFrontendId": "191",
      "title": "Number of 1 Bits",
      "titleSlug": "number-of-1-bits",
      "acRate": "70.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "192",
      "questionFrontendId": "192",
      "title": "Word Frequency",
      "titleSlug": "word-frequency",
      "acRate": "25.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Shell",
          "slug": "shell"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "198",
      "questionFrontendId": "198",
      "title": "House Robber",
      "titleSlug": "house-robber",
      "acRate": "50.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "199",
      "questionFrontendId": "199",
      "title": "Binary Tree Right Side View",
      "titleSlug": "binary-tree-right-side-view",
      "acRate": "62.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "200",
      "questionFrontendId": "200",
      "title": "Number of Islands",
      "titleSlug": "number-of-islands",
      "acRate": "58.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "204",
      "questionFrontendId": "204",
      "title": "Count Primes",
      "titleSlug": "count-primes",
      "acRate": "33.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "205",
      "questionFrontendId": "205",
      "title": "Isomorphic Strings",
      "titleSlug": "isomorphic-strings",
      "acRate": "43.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "206",
      "questionFrontendId": "206",
      "title": "Reverse Linked List",
      "titleSlug": "reverse-linked-list",
      "acRate": "76.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "207",
      "questionFrontendId": "207",
      "title": "Course Schedule",
      "titleSlug": "course-schedule",
      "acRate": "46.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "208",
      "questionFrontendId": "208",
      "title": "Implement Trie (Prefix Tree)",
      "titleSlug": "implement-trie-prefix-tree",
      "acRate": "64.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "209",
      "questionFrontendId": "209",
      "title": "Minimum Size Subarray Sum",
      "titleSlug": "minimum-size-subarray-sum",
      "acRate": "46.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "210",
      "questionFrontendId": "210",
      "title": "Course Schedule II",
      "titleSlug": "course-schedule-ii",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "211",
      "questionFrontendId": "211",
      "title": "Design Add and Search Words Data Structure",
      "titleSlug": "design-add-and-search-words-data-structure",
      "acRate": "45.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "212",
      "questionFrontendId": "212",
      "title": "Word Search II",
      "titleSlug": "word-search-ii",
      "acRate": "36.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "213",
      "questionFrontendId": "213",
      "title": "House Robber II",
      "titleSlug": "house-robber-ii",
      "acRate": "41.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "214",
      "questionFrontendId": "214",
      "title": "Shortest Palindrome",
      "titleSlug": "shortest-palindrome",
      "acRate": "33.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "215",
      "questionFrontendId": "215",
      "title": "Kth Largest Element in an Array",
      "titleSlug": "kth-largest-element-in-an-array",
      "acRate": "66.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "216",
      "questionFrontendId": "216",
      "title": "Combination Sum III",
      "titleSlug": "combination-sum-iii",
      "acRate": "69.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "217",
      "questionFrontendId": "217",
      "title": "Contains Duplicate",
      "titleSlug": "contains-duplicate",
      "acRate": "61.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "218",
      "questionFrontendId": "218",
      "title": "The Skyline Problem",
      "titleSlug": "the-skyline-problem",
      "acRate": "42.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Line Sweep",
          "slug": "line-sweep"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "219",
      "questionFrontendId": "219",
      "title": "Contains Duplicate II",
      "titleSlug": "contains-duplicate-ii",
      "acRate": "44.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "221",
      "questionFrontendId": "221",
      "title": "Maximal Square",
      "titleSlug": "maximal-square",
      "acRate": "46.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "222",
      "questionFrontendId": "222",
      "title": "Count Complete Tree Nodes",
      "titleSlug": "count-complete-tree-nodes",
      "acRate": "64.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "224",
      "questionFrontendId": "224",
      "title": "Basic Calculator",
      "titleSlug": "basic-calculator",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "225",
      "questionFrontendId": "225",
      "title": "Implement Stack using Queues",
      "titleSlug": "implement-stack-using-queues",
      "acRate": "63.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "226",
      "questionFrontendId": "226",
      "title": "Invert Binary Tree",
      "titleSlug": "invert-binary-tree",
      "acRate": "76.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "227",
      "questionFrontendId": "227",
      "title": "Basic Calculator II",
      "titleSlug": "basic-calculator-ii",
      "acRate": "43.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "228",
      "questionFrontendId": "228",
      "title": "Summary Ranges",
      "titleSlug": "summary-ranges",
      "acRate": "50.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "229",
      "questionFrontendId": "229",
      "title": "Majority Element II",
      "titleSlug": "majority-element-ii",
      "acRate": "51.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "230",
      "questionFrontendId": "230",
      "title": "Kth Smallest Element in a BST",
      "titleSlug": "kth-smallest-element-in-a-bst",
      "acRate": "72.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "231",
      "questionFrontendId": "231",
      "title": "Power of Two",
      "titleSlug": "power-of-two",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "232",
      "questionFrontendId": "232",
      "title": "Implement Queue using Stacks",
      "titleSlug": "implement-queue-using-stacks",
      "acRate": "66.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "234",
      "questionFrontendId": "234",
      "title": "Palindrome Linked List",
      "titleSlug": "palindrome-linked-list",
      "acRate": "53.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "235",
      "questionFrontendId": "235",
      "title": "Lowest Common Ancestor of a Binary Search Tree",
      "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
      "acRate": "64.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "236",
      "questionFrontendId": "236",
      "title": "Lowest Common Ancestor of a Binary Tree",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "237",
      "questionFrontendId": "237",
      "title": "Delete Node in a Linked List",
      "titleSlug": "delete-node-in-a-linked-list",
      "acRate": "78.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "238",
      "questionFrontendId": "238",
      "title": "Product of Array Except Self",
      "titleSlug": "product-of-array-except-self",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "239",
      "questionFrontendId": "239",
      "title": "Sliding Window Maximum",
      "titleSlug": "sliding-window-maximum",
      "acRate": "46.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "240",
      "questionFrontendId": "240",
      "title": "Search a 2D Matrix II",
      "titleSlug": "search-a-2d-matrix-ii",
      "acRate": "52.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "242",
      "questionFrontendId": "242",
      "title": "Valid Anagram",
      "titleSlug": "valid-anagram",
      "acRate": "64.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "250",
      "questionFrontendId": "250",
      "title": "Count Univalue Subtrees",
      "titleSlug": "count-univalue-subtrees",
      "acRate": "56.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "253",
      "questionFrontendId": "253",
      "title": "Meeting Rooms II",
      "titleSlug": "meeting-rooms-ii",
      "acRate": "51.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "258",
      "questionFrontendId": "258",
      "title": "Add Digits",
      "titleSlug": "add-digits",
      "acRate": "66.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "261",
      "questionFrontendId": "261",
      "title": "Graph Valid Tree",
      "titleSlug": "graph-valid-tree",
      "acRate": "48.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "268",
      "questionFrontendId": "268",
      "title": "Missing Number",
      "titleSlug": "missing-number",
      "acRate": "66.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "269",
      "questionFrontendId": "269",
      "title": "Alien Dictionary",
      "titleSlug": "alien-dictionary",
      "acRate": "35.7%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "270",
      "questionFrontendId": "270",
      "title": "Closest Binary Search Tree Value",
      "titleSlug": "closest-binary-search-tree-value",
      "acRate": "51.9%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "273",
      "questionFrontendId": "273",
      "title": "Integer to English Words",
      "titleSlug": "integer-to-english-words",
      "acRate": "30.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "274",
      "questionFrontendId": "274",
      "title": "H-Index",
      "titleSlug": "h-index",
      "acRate": "38.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "277",
      "questionFrontendId": "277",
      "title": "Find the Celebrity",
      "titleSlug": "find-the-celebrity",
      "acRate": "47.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "278",
      "questionFrontendId": "278",
      "title": "First Bad Version",
      "titleSlug": "first-bad-version",
      "acRate": "44.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "279",
      "questionFrontendId": "279",
      "title": "Perfect Squares",
      "titleSlug": "perfect-squares",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "280",
      "questionFrontendId": "280",
      "title": "Wiggle Sort",
      "titleSlug": "wiggle-sort",
      "acRate": "67.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "283",
      "questionFrontendId": "283",
      "title": "Move Zeroes",
      "titleSlug": "move-zeroes",
      "acRate": "61.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "284",
      "questionFrontendId": "284",
      "title": "Peeking Iterator",
      "titleSlug": "peeking-iterator",
      "acRate": "59.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "285",
      "questionFrontendId": "285",
      "title": "Inorder Successor in BST",
      "titleSlug": "inorder-successor-in-bst",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "287",
      "questionFrontendId": "287",
      "title": "Find the Duplicate Number",
      "titleSlug": "find-the-duplicate-number",
      "acRate": "60.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "289",
      "questionFrontendId": "289",
      "title": "Game of Life",
      "titleSlug": "game-of-life",
      "acRate": "68.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "295",
      "questionFrontendId": "295",
      "title": "Find Median from Data Stream",
      "titleSlug": "find-median-from-data-stream",
      "acRate": "51.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "297",
      "questionFrontendId": "297",
      "title": "Serialize and Deserialize Binary Tree",
      "titleSlug": "serialize-and-deserialize-binary-tree",
      "acRate": "56.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "299",
      "questionFrontendId": "299",
      "title": "Bulls and Cows",
      "titleSlug": "bulls-and-cows",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "300",
      "questionFrontendId": "300",
      "title": "Longest Increasing Subsequence",
      "titleSlug": "longest-increasing-subsequence",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "312",
      "questionFrontendId": "312",
      "title": "Burst Balloons",
      "titleSlug": "burst-balloons",
      "acRate": "58.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "314",
      "questionFrontendId": "314",
      "title": "Binary Tree Vertical Order Traversal",
      "titleSlug": "binary-tree-vertical-order-traversal",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "315",
      "questionFrontendId": "315",
      "title": "Count of Smaller Numbers After Self",
      "titleSlug": "count-of-smaller-numbers-after-self",
      "acRate": "42.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "316",
      "questionFrontendId": "316",
      "title": "Remove Duplicate Letters",
      "titleSlug": "remove-duplicate-letters",
      "acRate": "49.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "317",
      "questionFrontendId": "317",
      "title": "Shortest Distance from All Buildings",
      "titleSlug": "shortest-distance-from-all-buildings",
      "acRate": "43.1%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "319",
      "questionFrontendId": "319",
      "title": "Bulb Switcher",
      "titleSlug": "bulb-switcher",
      "acRate": "52.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "322",
      "questionFrontendId": "322",
      "title": "Coin Change",
      "titleSlug": "coin-change",
      "acRate": "43.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "324",
      "questionFrontendId": "324",
      "title": "Wiggle Sort II",
      "titleSlug": "wiggle-sort-ii",
      "acRate": "34.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "328",
      "questionFrontendId": "328",
      "title": "Odd Even Linked List",
      "titleSlug": "odd-even-linked-list",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "329",
      "questionFrontendId": "329",
      "title": "Longest Increasing Path in a Matrix",
      "titleSlug": "longest-increasing-path-in-a-matrix",
      "acRate": "53.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "333",
      "questionFrontendId": "333",
      "title": "Largest BST Subtree",
      "titleSlug": "largest-bst-subtree",
      "acRate": "43.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "337",
      "questionFrontendId": "337",
      "title": "House Robber III",
      "titleSlug": "house-robber-iii",
      "acRate": "54.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "338",
      "questionFrontendId": "338",
      "title": "Counting Bits",
      "titleSlug": "counting-bits",
      "acRate": "78.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "340",
      "questionFrontendId": "340",
      "title": "Longest Substring with At Most K Distinct Characters",
      "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
      "acRate": "48.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "341",
      "questionFrontendId": "341",
      "title": "Flatten Nested List Iterator",
      "titleSlug": "flatten-nested-list-iterator",
      "acRate": "64.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "344",
      "questionFrontendId": "344",
      "title": "Reverse String",
      "titleSlug": "reverse-string",
      "acRate": "77.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "347",
      "questionFrontendId": "347",
      "title": "Top K Frequent Elements",
      "titleSlug": "top-k-frequent-elements",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "348",
      "questionFrontendId": "348",
      "title": "Design Tic-Tac-Toe",
      "titleSlug": "design-tic-tac-toe",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "349",
      "questionFrontendId": "349",
      "title": "Intersection of Two Arrays",
      "titleSlug": "intersection-of-two-arrays",
      "acRate": "74.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "354",
      "questionFrontendId": "354",
      "title": "Russian Doll Envelopes",
      "titleSlug": "russian-doll-envelopes",
      "acRate": "37.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "355",
      "questionFrontendId": "355",
      "title": "Design Twitter",
      "titleSlug": "design-twitter",
      "acRate": "39.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "359",
      "questionFrontendId": "359",
      "title": "Logger Rate Limiter",
      "titleSlug": "logger-rate-limiter",
      "acRate": "75.8%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "362",
      "questionFrontendId": "362",
      "title": "Design Hit Counter",
      "titleSlug": "design-hit-counter",
      "acRate": "68.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "365",
      "questionFrontendId": "365",
      "title": "Water and Jug Problem",
      "titleSlug": "water-and-jug-problem",
      "acRate": "40.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "367",
      "questionFrontendId": "367",
      "title": "Valid Perfect Square",
      "titleSlug": "valid-perfect-square",
      "acRate": "43.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "368",
      "questionFrontendId": "368",
      "title": "Largest Divisible Subset",
      "titleSlug": "largest-divisible-subset",
      "acRate": "45.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "371",
      "questionFrontendId": "371",
      "title": "Sum of Two Integers",
      "titleSlug": "sum-of-two-integers",
      "acRate": "51.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "373",
      "questionFrontendId": "373",
      "title": "Find K Pairs with Smallest Sums",
      "titleSlug": "find-k-pairs-with-smallest-sums",
      "acRate": "40.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "377",
      "questionFrontendId": "377",
      "title": "Combination Sum IV",
      "titleSlug": "combination-sum-iv",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "378",
      "questionFrontendId": "378",
      "title": "Kth Smallest Element in a Sorted Matrix",
      "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
      "acRate": "62.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "380",
      "questionFrontendId": "380",
      "title": "Insert Delete GetRandom O(1)",
      "titleSlug": "insert-delete-getrandom-o1",
      "acRate": "54.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "387",
      "questionFrontendId": "387",
      "title": "First Unique Character in a String",
      "titleSlug": "first-unique-character-in-a-string",
      "acRate": "62.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "392",
      "questionFrontendId": "392",
      "title": "Is Subsequence",
      "titleSlug": "is-subsequence",
      "acRate": "47.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "394",
      "questionFrontendId": "394",
      "title": "Decode String",
      "titleSlug": "decode-string",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "395",
      "questionFrontendId": "395",
      "title": "Longest Substring with At Least K Repeating Characters",
      "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
      "acRate": "45.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "399",
      "questionFrontendId": "399",
      "title": "Evaluate Division",
      "titleSlug": "evaluate-division",
      "acRate": "61.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "400",
      "questionFrontendId": "400",
      "title": "Nth Digit",
      "titleSlug": "nth-digit",
      "acRate": "34.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "402",
      "questionFrontendId": "402",
      "title": "Remove K Digits",
      "titleSlug": "remove-k-digits",
      "acRate": "31.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "403",
      "questionFrontendId": "403",
      "title": "Frog Jump",
      "titleSlug": "frog-jump",
      "acRate": "46.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "412",
      "questionFrontendId": "412",
      "title": "Fizz Buzz",
      "titleSlug": "fizz-buzz",
      "acRate": "71.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "414",
      "questionFrontendId": "414",
      "title": "Third Maximum Number",
      "titleSlug": "third-maximum-number",
      "acRate": "34.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "415",
      "questionFrontendId": "415",
      "title": "Add Strings",
      "titleSlug": "add-strings",
      "acRate": "51.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "416",
      "questionFrontendId": "416",
      "title": "Partition Equal Subset Sum",
      "titleSlug": "partition-equal-subset-sum",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "417",
      "questionFrontendId": "417",
      "title": "Pacific Atlantic Water Flow",
      "titleSlug": "pacific-atlantic-water-flow",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "419",
      "questionFrontendId": "419",
      "title": "Battleships in a Board",
      "titleSlug": "battleships-in-a-board",
      "acRate": "75.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "435",
      "questionFrontendId": "435",
      "title": "Non-overlapping Intervals",
      "titleSlug": "non-overlapping-intervals",
      "acRate": "53.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "437",
      "questionFrontendId": "437",
      "title": "Path Sum III",
      "titleSlug": "path-sum-iii",
      "acRate": "46.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "438",
      "questionFrontendId": "438",
      "title": "Find All Anagrams in a String",
      "titleSlug": "find-all-anagrams-in-a-string",
      "acRate": "50.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "442",
      "questionFrontendId": "442",
      "title": "Find All Duplicates in an Array",
      "titleSlug": "find-all-duplicates-in-an-array",
      "acRate": "75.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "443",
      "questionFrontendId": "443",
      "title": "String Compression",
      "titleSlug": "string-compression",
      "acRate": "54.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "445",
      "questionFrontendId": "445",
      "title": "Add Two Numbers II",
      "titleSlug": "add-two-numbers-ii",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "449",
      "questionFrontendId": "449",
      "title": "Serialize and Deserialize BST",
      "titleSlug": "serialize-and-deserialize-bst",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "450",
      "questionFrontendId": "450",
      "title": "Delete Node in a BST",
      "titleSlug": "delete-node-in-a-bst",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "451",
      "questionFrontendId": "451",
      "title": "Sort Characters By Frequency",
      "titleSlug": "sort-characters-by-frequency",
      "acRate": "72.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "452",
      "questionFrontendId": "452",
      "title": "Minimum Number of Arrows to Burst Balloons",
      "titleSlug": "minimum-number-of-arrows-to-burst-balloons",
      "acRate": "58.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "453",
      "questionFrontendId": "453",
      "title": "Minimum Moves to Equal Array Elements",
      "titleSlug": "minimum-moves-to-equal-array-elements",
      "acRate": "56.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "456",
      "questionFrontendId": "456",
      "title": "132 Pattern",
      "titleSlug": "132-pattern",
      "acRate": "33.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "460",
      "questionFrontendId": "460",
      "title": "LFU Cache",
      "titleSlug": "lfu-cache",
      "acRate": "44.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "462",
      "questionFrontendId": "462",
      "title": "Minimum Moves to Equal Array Elements II",
      "titleSlug": "minimum-moves-to-equal-array-elements-ii",
      "acRate": "60.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "465",
      "questionFrontendId": "465",
      "title": "Optimal Account Balancing",
      "titleSlug": "optimal-account-balancing",
      "acRate": "49.5%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "468",
      "questionFrontendId": "468",
      "title": "Validate IP Address",
      "titleSlug": "validate-ip-address",
      "acRate": "26.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "472",
      "questionFrontendId": "472",
      "title": "Concatenated Words",
      "titleSlug": "concatenated-words",
      "acRate": "49.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "473",
      "questionFrontendId": "473",
      "title": "Matchsticks to Square",
      "titleSlug": "matchsticks-to-square",
      "acRate": "40.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "485",
      "questionFrontendId": "485",
      "title": "Max Consecutive Ones",
      "titleSlug": "max-consecutive-ones",
      "acRate": "58.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "486",
      "questionFrontendId": "486",
      "title": "Predict the Winner",
      "titleSlug": "predict-the-winner",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "493",
      "questionFrontendId": "493",
      "title": "Reverse Pairs",
      "titleSlug": "reverse-pairs",
      "acRate": "30.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "496",
      "questionFrontendId": "496",
      "title": "Next Greater Element I",
      "titleSlug": "next-greater-element-i",
      "acRate": "72.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "498",
      "questionFrontendId": "498",
      "title": "Diagonal Traverse",
      "titleSlug": "diagonal-traverse",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "503",
      "questionFrontendId": "503",
      "title": "Next Greater Element II",
      "titleSlug": "next-greater-element-ii",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "506",
      "questionFrontendId": "506",
      "title": "Relative Ranks",
      "titleSlug": "relative-ranks",
      "acRate": "63.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "509",
      "questionFrontendId": "510",
      "title": "Inorder Successor in BST II",
      "titleSlug": "inorder-successor-in-bst-ii",
      "acRate": "60.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "513",
      "questionFrontendId": "513",
      "title": "Find Bottom Left Tree Value",
      "titleSlug": "find-bottom-left-tree-value",
      "acRate": "71.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "518",
      "questionFrontendId": "518",
      "title": "Coin Change II",
      "titleSlug": "coin-change-ii",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "519",
      "questionFrontendId": "1983",
      "title": "Widest Pair of Indices With Equal Range Sum",
      "titleSlug": "widest-pair-of-indices-with-equal-range-sum",
      "acRate": "53.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "525",
      "questionFrontendId": "525",
      "title": "Contiguous Array",
      "titleSlug": "contiguous-array",
      "acRate": "48.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "540",
      "questionFrontendId": "540",
      "title": "Single Element in a Sorted Array",
      "titleSlug": "single-element-in-a-sorted-array",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "541",
      "questionFrontendId": "541",
      "title": "Reverse String II",
      "titleSlug": "reverse-string-ii",
      "acRate": "50.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "542",
      "questionFrontendId": "542",
      "title": "01 Matrix",
      "titleSlug": "01-matrix",
      "acRate": "48.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "543",
      "questionFrontendId": "543",
      "title": "Diameter of Binary Tree",
      "titleSlug": "diameter-of-binary-tree",
      "acRate": "60.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "545",
      "questionFrontendId": "545",
      "title": "Boundary of Binary Tree",
      "titleSlug": "boundary-of-binary-tree",
      "acRate": "45.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "556",
      "questionFrontendId": "556",
      "title": "Next Greater Element III",
      "titleSlug": "next-greater-element-iii",
      "acRate": "34.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "557",
      "questionFrontendId": "557",
      "title": "Reverse Words in a String III",
      "titleSlug": "reverse-words-in-a-string-iii",
      "acRate": "83.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "560",
      "questionFrontendId": "560",
      "title": "Subarray Sum Equals K",
      "titleSlug": "subarray-sum-equals-k",
      "acRate": "43.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "567",
      "questionFrontendId": "567",
      "title": "Permutation in String",
      "titleSlug": "permutation-in-string",
      "acRate": "44.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "570",
      "questionFrontendId": "570",
      "title": "Managers with at Least 5 Direct Reports",
      "titleSlug": "managers-with-at-least-5-direct-reports",
      "acRate": "51.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "572",
      "questionFrontendId": "572",
      "title": "Subtree of Another Tree",
      "titleSlug": "subtree-of-another-tree",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "581",
      "questionFrontendId": "581",
      "title": "Shortest Unsorted Continuous Subarray",
      "titleSlug": "shortest-unsorted-continuous-subarray",
      "acRate": "36.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "583",
      "questionFrontendId": "583",
      "title": "Delete Operation for Two Strings",
      "titleSlug": "delete-operation-for-two-strings",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "588",
      "questionFrontendId": "588",
      "title": "Design In-Memory File System",
      "titleSlug": "design-in-memory-file-system",
      "acRate": "48.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "591",
      "questionFrontendId": "591",
      "title": "Tag Validator",
      "titleSlug": "tag-validator",
      "acRate": "38.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "605",
      "questionFrontendId": "605",
      "title": "Can Place Flowers",
      "titleSlug": "can-place-flowers",
      "acRate": "29.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "608",
      "questionFrontendId": "608",
      "title": "Tree Node",
      "titleSlug": "tree-node",
      "acRate": "72.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "611",
      "questionFrontendId": "611",
      "title": "Valid Triangle Number",
      "titleSlug": "valid-triangle-number",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "621",
      "questionFrontendId": "621",
      "title": "Task Scheduler",
      "titleSlug": "task-scheduler",
      "acRate": "59.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "628",
      "questionFrontendId": "628",
      "title": "Maximum Product of Three Numbers",
      "titleSlug": "maximum-product-of-three-numbers",
      "acRate": "45.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "631",
      "questionFrontendId": "631",
      "title": "Design Excel Sum Formula",
      "titleSlug": "design-excel-sum-formula",
      "acRate": "43.7%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "633",
      "questionFrontendId": "633",
      "title": "Sum of Square Numbers",
      "titleSlug": "sum-of-square-numbers",
      "acRate": "34.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "642",
      "questionFrontendId": "642",
      "title": "Design Search Autocomplete System",
      "titleSlug": "design-search-autocomplete-system",
      "acRate": "48.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "647",
      "questionFrontendId": "647",
      "title": "Palindromic Substrings",
      "titleSlug": "palindromic-substrings",
      "acRate": "70.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "650",
      "questionFrontendId": "650",
      "title": "2 Keys Keyboard",
      "titleSlug": "2-keys-keyboard",
      "acRate": "54.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "651",
      "questionFrontendId": "651",
      "title": "4 Keys Keyboard",
      "titleSlug": "4-keys-keyboard",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "652",
      "questionFrontendId": "652",
      "title": "Find Duplicate Subtrees",
      "titleSlug": "find-duplicate-subtrees",
      "acRate": "59.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "653",
      "questionFrontendId": "653",
      "title": "Two Sum IV - Input is a BST",
      "titleSlug": "two-sum-iv-input-is-a-bst",
      "acRate": "61.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "654",
      "questionFrontendId": "654",
      "title": "Maximum Binary Tree",
      "titleSlug": "maximum-binary-tree",
      "acRate": "85.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "662",
      "questionFrontendId": "662",
      "title": "Maximum Width of Binary Tree",
      "titleSlug": "maximum-width-of-binary-tree",
      "acRate": "42.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "669",
      "questionFrontendId": "669",
      "title": "Trim a Binary Search Tree",
      "titleSlug": "trim-a-binary-search-tree",
      "acRate": "66.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "672",
      "questionFrontendId": "672",
      "title": "Bulb Switcher II",
      "titleSlug": "bulb-switcher-ii",
      "acRate": "50.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "678",
      "questionFrontendId": "678",
      "title": "Valid Parenthesis String",
      "titleSlug": "valid-parenthesis-string",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "680",
      "questionFrontendId": "680",
      "title": "Valid Palindrome II",
      "titleSlug": "valid-palindrome-ii",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "684",
      "questionFrontendId": "684",
      "title": "Redundant Connection",
      "titleSlug": "redundant-connection",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "688",
      "questionFrontendId": "688",
      "title": "Knight Probability in Chessboard",
      "titleSlug": "knight-probability-in-chessboard",
      "acRate": "56.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "692",
      "questionFrontendId": "692",
      "title": "Top K Frequent Words",
      "titleSlug": "top-k-frequent-words",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "694",
      "questionFrontendId": "694",
      "title": "Number of Distinct Islands",
      "titleSlug": "number-of-distinct-islands",
      "acRate": "61.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "695",
      "questionFrontendId": "695",
      "title": "Max Area of Island",
      "titleSlug": "max-area-of-island",
      "acRate": "71.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "698",
      "questionFrontendId": "698",
      "title": "Partition to K Equal Sum Subsets",
      "titleSlug": "partition-to-k-equal-sum-subsets",
      "acRate": "38.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "718",
      "questionFrontendId": "718",
      "title": "Maximum Length of Repeated Subarray",
      "titleSlug": "maximum-length-of-repeated-subarray",
      "acRate": "51.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "721",
      "questionFrontendId": "721",
      "title": "Accounts Merge",
      "titleSlug": "accounts-merge",
      "acRate": "57.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "722",
      "questionFrontendId": "722",
      "title": "Remove Comments",
      "titleSlug": "remove-comments",
      "acRate": "38.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "724",
      "questionFrontendId": "724",
      "title": "Find Pivot Index",
      "titleSlug": "find-pivot-index",
      "acRate": "57.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "726",
      "questionFrontendId": "726",
      "title": "Number of Atoms",
      "titleSlug": "number-of-atoms",
      "acRate": "52.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "729",
      "questionFrontendId": "729",
      "title": "My Calendar I",
      "titleSlug": "my-calendar-i",
      "acRate": "56.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "733",
      "questionFrontendId": "733",
      "title": "Flood Fill",
      "titleSlug": "flood-fill",
      "acRate": "63.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "735",
      "questionFrontendId": "735",
      "title": "Asteroid Collision",
      "titleSlug": "asteroid-collision",
      "acRate": "44.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "739",
      "questionFrontendId": "739",
      "title": "Daily Temperatures",
      "titleSlug": "daily-temperatures",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "744",
      "questionFrontendId": "743",
      "title": "Network Delay Time",
      "titleSlug": "network-delay-time",
      "acRate": "53.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "747",
      "questionFrontendId": "746",
      "title": "Min Cost Climbing Stairs",
      "titleSlug": "min-cost-climbing-stairs",
      "acRate": "65.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "758",
      "questionFrontendId": "426",
      "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
      "titleSlug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
      "acRate": "64.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "761",
      "questionFrontendId": "759",
      "title": "Employee Free Time",
      "titleSlug": "employee-free-time",
      "acRate": "72.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "765",
      "questionFrontendId": "428",
      "title": "Serialize and Deserialize N-ary Tree",
      "titleSlug": "serialize-and-deserialize-n-ary-tree",
      "acRate": "66.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "768",
      "questionFrontendId": "763",
      "title": "Partition Labels",
      "titleSlug": "partition-labels",
      "acRate": "79.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "774",
      "questionFrontendId": "559",
      "title": "Maximum Depth of N-ary Tree",
      "titleSlug": "maximum-depth-of-n-ary-tree",
      "acRate": "72.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "778",
      "questionFrontendId": "767",
      "title": "Reorganize String",
      "titleSlug": "reorganize-string",
      "acRate": "54.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "779",
      "questionFrontendId": "768",
      "title": "Max Chunks To Make Sorted II",
      "titleSlug": "max-chunks-to-make-sorted-ii",
      "acRate": "53.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "782",
      "questionFrontendId": "771",
      "title": "Jewels and Stones",
      "titleSlug": "jewels-and-stones",
      "acRate": "88.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "783",
      "questionFrontendId": "700",
      "title": "Search in a Binary Search Tree",
      "titleSlug": "search-in-a-binary-search-tree",
      "acRate": "79.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "784",
      "questionFrontendId": "701",
      "title": "Insert into a Binary Search Tree",
      "titleSlug": "insert-into-a-binary-search-tree",
      "acRate": "73.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "785",
      "questionFrontendId": "772",
      "title": "Basic Calculator III",
      "titleSlug": "basic-calculator-iii",
      "acRate": "50.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "789",
      "questionFrontendId": "703",
      "title": "Kth Largest Element in a Stream",
      "titleSlug": "kth-largest-element-in-a-stream",
      "acRate": "56.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "792",
      "questionFrontendId": "704",
      "title": "Binary Search",
      "titleSlug": "binary-search",
      "acRate": "57.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "800",
      "questionFrontendId": "784",
      "title": "Letter Case Permutation",
      "titleSlug": "letter-case-permutation",
      "acRate": "74.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "801",
      "questionFrontendId": "785",
      "title": "Is Graph Bipartite?",
      "titleSlug": "is-graph-bipartite",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "803",
      "questionFrontendId": "787",
      "title": "Cheapest Flights Within K Stops",
      "titleSlug": "cheapest-flights-within-k-stops",
      "acRate": "39.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "808",
      "questionFrontendId": "792",
      "title": "Number of Matching Subsequences",
      "titleSlug": "number-of-matching-subsequences",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "810",
      "questionFrontendId": "794",
      "title": "Valid Tic-Tac-Toe State",
      "titleSlug": "valid-tic-tac-toe-state",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "812",
      "questionFrontendId": "796",
      "title": "Rotate String",
      "titleSlug": "rotate-string",
      "acRate": "57.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "816",
      "questionFrontendId": "705",
      "title": "Design HashSet",
      "titleSlug": "design-hashset",
      "acRate": "66.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "817",
      "questionFrontendId": "706",
      "title": "Design HashMap",
      "titleSlug": "design-hashmap",
      "acRate": "65.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "823",
      "questionFrontendId": "805",
      "title": "Split Array With Same Average",
      "titleSlug": "split-array-with-same-average",
      "acRate": "25.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "833",
      "questionFrontendId": "815",
      "title": "Bus Routes",
      "titleSlug": "bus-routes",
      "acRate": "48.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "838",
      "questionFrontendId": "707",
      "title": "Design Linked List",
      "titleSlug": "design-linked-list",
      "acRate": "28.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "854",
      "questionFrontendId": "827",
      "title": "Making A Large Island",
      "titleSlug": "making-a-large-island",
      "acRate": "46.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "855",
      "questionFrontendId": "828",
      "title": "Count Unique Characters of All Substrings of a Given String",
      "titleSlug": "count-unique-characters-of-all-substrings-of-a-given-string",
      "acRate": "52.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "860",
      "questionFrontendId": "622",
      "title": "Design Circular Queue",
      "titleSlug": "design-circular-queue",
      "acRate": "51.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "862",
      "questionFrontendId": "833",
      "title": "Find And Replace in String",
      "titleSlug": "find-and-replace-in-string",
      "acRate": "52.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "864",
      "questionFrontendId": "835",
      "title": "Image Overlap",
      "titleSlug": "image-overlap",
      "acRate": "63.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "865",
      "questionFrontendId": "489",
      "title": "Robot Room Cleaner",
      "titleSlug": "robot-room-cleaner",
      "acRate": "76.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "866",
      "questionFrontendId": "836",
      "title": "Rectangle Overlap",
      "titleSlug": "rectangle-overlap",
      "acRate": "44.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "871",
      "questionFrontendId": "841",
      "title": "Keys and Rooms",
      "titleSlug": "keys-and-rooms",
      "acRate": "72.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "874",
      "questionFrontendId": "844",
      "title": "Backspace String Compare",
      "titleSlug": "backspace-string-compare",
      "acRate": "49.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "879",
      "questionFrontendId": "849",
      "title": "Maximize Distance to Closest Person",
      "titleSlug": "maximize-distance-to-closest-person",
      "acRate": "48.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "883",
      "questionFrontendId": "853",
      "title": "Car Fleet",
      "titleSlug": "car-fleet",
      "acRate": "50.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "886",
      "questionFrontendId": "856",
      "title": "Score of Parentheses",
      "titleSlug": "score-of-parentheses",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "889",
      "questionFrontendId": "859",
      "title": "Buddy Strings",
      "titleSlug": "buddy-strings",
      "acRate": "33.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "893",
      "questionFrontendId": "863",
      "title": "All Nodes Distance K in Binary Tree",
      "titleSlug": "all-nodes-distance-k-in-binary-tree",
      "acRate": "64.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "900",
      "questionFrontendId": "869",
      "title": "Reordered Power of 2",
      "titleSlug": "reordered-power-of-2",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "902",
      "questionFrontendId": "871",
      "title": "Minimum Number of Refueling Stops",
      "titleSlug": "minimum-number-of-refueling-stops",
      "acRate": "40.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "912",
      "questionFrontendId": "528",
      "title": "Random Pick with Weight",
      "titleSlug": "random-pick-with-weight",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "917",
      "questionFrontendId": "881",
      "title": "Boats to Save People",
      "titleSlug": "boats-to-save-people",
      "acRate": "56.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "921",
      "questionFrontendId": "885",
      "title": "Spiral Matrix III",
      "titleSlug": "spiral-matrix-iii",
      "acRate": "74.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "922",
      "questionFrontendId": "886",
      "title": "Possible Bipartition",
      "titleSlug": "possible-bipartition",
      "acRate": "50.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "931",
      "questionFrontendId": "895",
      "title": "Maximum Frequency Stack",
      "titleSlug": "maximum-frequency-stack",
      "acRate": "66.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "937",
      "questionFrontendId": "901",
      "title": "Online Stock Span",
      "titleSlug": "online-stock-span",
      "acRate": "65.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "941",
      "questionFrontendId": "905",
      "title": "Sort Array By Parity",
      "titleSlug": "sort-array-by-parity",
      "acRate": "76.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "943",
      "questionFrontendId": "907",
      "title": "Sum of Subarray Minimums",
      "titleSlug": "sum-of-subarray-minimums",
      "acRate": "37.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "notac",
      "questionId": "945",
      "questionFrontendId": "909",
      "title": "Snakes and Ladders",
      "titleSlug": "snakes-and-ladders",
      "acRate": "43.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "948",
      "questionFrontendId": "912",
      "title": "Sort an Array",
      "titleSlug": "sort-an-array",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Radix Sort",
          "slug": "radix-sort"
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "957",
      "questionFrontendId": "921",
      "title": "Minimum Add to Make Parentheses Valid",
      "titleSlug": "minimum-add-to-make-parentheses-valid",
      "acRate": "75.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "971",
      "questionFrontendId": "934",
      "title": "Shortest Bridge",
      "titleSlug": "shortest-bridge",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "986",
      "questionFrontendId": "949",
      "title": "Largest Time for Given Digits",
      "titleSlug": "largest-time-for-given-digits",
      "acRate": "35.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "988",
      "questionFrontendId": "951",
      "title": "Flip Equivalent Binary Trees",
      "titleSlug": "flip-equivalent-binary-trees",
      "acRate": "66.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "990",
      "questionFrontendId": "953",
      "title": "Verifying an Alien Dictionary",
      "titleSlug": "verifying-an-alien-dictionary",
      "acRate": "54.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1007",
      "questionFrontendId": "967",
      "title": "Numbers With Same Consecutive Differences",
      "titleSlug": "numbers-with-same-consecutive-differences",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1012",
      "questionFrontendId": "972",
      "title": "Equal Rational Numbers",
      "titleSlug": "equal-rational-numbers",
      "acRate": "43.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1013",
      "questionFrontendId": "509",
      "title": "Fibonacci Number",
      "titleSlug": "fibonacci-number",
      "acRate": "70.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1014",
      "questionFrontendId": "973",
      "title": "K Closest Points to Origin",
      "titleSlug": "k-closest-points-to-origin",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1016",
      "questionFrontendId": "974",
      "title": "Subarray Sums Divisible by K",
      "titleSlug": "subarray-sums-divisible-by-k",
      "acRate": "54.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1019",
      "questionFrontendId": "977",
      "title": "Squares of a Sorted Array",
      "titleSlug": "squares-of-a-sorted-array",
      "acRate": "72.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1021",
      "questionFrontendId": "979",
      "title": "Distribute Coins in Binary Tree",
      "titleSlug": "distribute-coins-in-binary-tree",
      "acRate": "72.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1023",
      "questionFrontendId": "981",
      "title": "Time Based Key-Value Store",
      "titleSlug": "time-based-key-value-store",
      "acRate": "49.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1029",
      "questionFrontendId": "987",
      "title": "Vertical Order Traversal of a Binary Tree",
      "titleSlug": "vertical-order-traversal-of-a-binary-tree",
      "acRate": "47.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1032",
      "questionFrontendId": "990",
      "title": "Satisfiability of Equality Equations",
      "titleSlug": "satisfiability-of-equality-equations",
      "acRate": "50.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1036",
      "questionFrontendId": "994",
      "title": "Rotting Oranges",
      "titleSlug": "rotting-oranges",
      "acRate": "53.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1046",
      "questionFrontendId": "1004",
      "title": "Max Consecutive Ones III",
      "titleSlug": "max-consecutive-ones-iii",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1048",
      "questionFrontendId": "1006",
      "title": "Clumsy Factorial",
      "titleSlug": "clumsy-factorial",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1050",
      "questionFrontendId": "1008",
      "title": "Construct Binary Search Tree from Preorder Traversal",
      "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
      "acRate": "81.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1056",
      "questionFrontendId": "1011",
      "title": "Capacity To Ship Packages Within D Days",
      "titleSlug": "capacity-to-ship-packages-within-d-days",
      "acRate": "69.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1062",
      "questionFrontendId": "1013",
      "title": "Partition Array Into Three Parts With Equal Sum",
      "titleSlug": "partition-array-into-three-parts-with-equal-sum",
      "acRate": "42.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1072",
      "questionFrontendId": "1019",
      "title": "Next Greater Node In Linked List",
      "titleSlug": "next-greater-node-in-linked-list",
      "acRate": "60.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1078",
      "questionFrontendId": "1021",
      "title": "Remove Outermost Parentheses",
      "titleSlug": "remove-outermost-parentheses",
      "acRate": "82.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1086",
      "questionFrontendId": "1025",
      "title": "Divisor Game",
      "titleSlug": "divisor-game",
      "acRate": "68.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1087",
      "questionFrontendId": "1027",
      "title": "Longest Arithmetic Subsequence",
      "titleSlug": "longest-arithmetic-subsequence",
      "acRate": "49.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1093",
      "questionFrontendId": "1028",
      "title": "Recover a Tree From Preorder Traversal",
      "titleSlug": "recover-a-tree-from-preorder-traversal",
      "acRate": "74.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1095",
      "questionFrontendId": "1029",
      "title": "Two City Scheduling",
      "titleSlug": "two-city-scheduling",
      "acRate": "66.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1096",
      "questionFrontendId": "1031",
      "title": "Maximum Sum of Two Non-Overlapping Subarrays",
      "titleSlug": "maximum-sum-of-two-non-overlapping-subarrays",
      "acRate": "59.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1097",
      "questionFrontendId": "1032",
      "title": "Stream of Characters",
      "titleSlug": "stream-of-characters",
      "acRate": "51.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1101",
      "questionFrontendId": "1136",
      "title": "Parallel Courses",
      "titleSlug": "parallel-courses",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1116",
      "questionFrontendId": "1161",
      "title": "Maximum Level Sum of a Binary Tree",
      "titleSlug": "maximum-level-sum-of-a-binary-tree",
      "acRate": "67.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1117",
      "questionFrontendId": "1162",
      "title": "As Far from Land as Possible",
      "titleSlug": "as-far-from-land-as-possible",
      "acRate": "51.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1122",
      "questionFrontendId": "1044",
      "title": "Longest Duplicate Substring",
      "titleSlug": "longest-duplicate-substring",
      "acRate": "30.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Suffix Array",
          "slug": "suffix-array"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1125",
      "questionFrontendId": "1166",
      "title": "Design File System",
      "titleSlug": "design-file-system",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1128",
      "questionFrontendId": "1047",
      "title": "Remove All Adjacent Duplicates In String",
      "titleSlug": "remove-all-adjacent-duplicates-in-string",
      "acRate": "69.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1139",
      "questionFrontendId": "1053",
      "title": "Previous Permutation With One Swap",
      "titleSlug": "previous-permutation-with-one-swap",
      "acRate": "49.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1142",
      "questionFrontendId": "1197",
      "title": "Minimum Knight Moves",
      "titleSlug": "minimum-knight-moves",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1143",
      "questionFrontendId": "1198",
      "title": "Find Smallest Common Element in All Rows",
      "titleSlug": "find-smallest-common-element-in-all-rows",
      "acRate": "76.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1146",
      "questionFrontendId": "1071",
      "title": "Greatest Common Divisor of Strings",
      "titleSlug": "greatest-common-divisor-of-strings",
      "acRate": "51.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1170",
      "questionFrontendId": "1092",
      "title": "Shortest Common Supersequence ",
      "titleSlug": "shortest-common-supersequence",
      "acRate": "59.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1171",
      "questionFrontendId": "1091",
      "title": "Shortest Path in Binary Matrix",
      "titleSlug": "shortest-path-in-binary-matrix",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1177",
      "questionFrontendId": "1245",
      "title": "Tree Diameter",
      "titleSlug": "tree-diameter",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1183",
      "questionFrontendId": "1093",
      "title": "Statistics from a Large Sample",
      "titleSlug": "statistics-from-a-large-sample",
      "acRate": "42.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Probability and Statistics",
          "slug": "probability-and-statistics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1201",
      "questionFrontendId": "1273",
      "title": "Delete Tree Nodes",
      "titleSlug": "delete-tree-nodes",
      "acRate": "61.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1202",
      "questionFrontendId": "1246",
      "title": "Palindrome Removal",
      "titleSlug": "palindrome-removal",
      "acRate": "46.5%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1203",
      "questionFrontendId": "1114",
      "title": "Print in Order",
      "titleSlug": "print-in-order",
      "acRate": "69.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Concurrency",
          "slug": "concurrency"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1230",
      "questionFrontendId": "1131",
      "title": "Maximum of Absolute Value Expression",
      "titleSlug": "maximum-of-absolute-value-expression",
      "acRate": "48.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1249",
      "questionFrontendId": "1146",
      "title": "Snapshot Array",
      "titleSlug": "snapshot-array",
      "acRate": "37.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1250",
      "questionFrontendId": "1143",
      "title": "Longest Common Subsequence",
      "titleSlug": "longest-common-subsequence",
      "acRate": "57.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1254",
      "questionFrontendId": "1302",
      "title": "Deepest Leaves Sum",
      "titleSlug": "deepest-leaves-sum",
      "acRate": "86.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1261",
      "questionFrontendId": "1156",
      "title": "Swap For Longest Repeated Character Substring",
      "titleSlug": "swap-for-longest-repeated-character-substring",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1289",
      "questionFrontendId": "1185",
      "title": "Day of the Week",
      "titleSlug": "day-of-the-week",
      "acRate": "57.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1297",
      "questionFrontendId": "1189",
      "title": "Maximum Number of Balloons",
      "titleSlug": "maximum-number-of-balloons",
      "acRate": "59.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1298",
      "questionFrontendId": "1190",
      "title": "Reverse Substrings Between Each Pair of Parentheses",
      "titleSlug": "reverse-substrings-between-each-pair-of-parentheses",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1300",
      "questionFrontendId": "1192",
      "title": "Critical Connections in a Network",
      "titleSlug": "critical-connections-in-a-network",
      "acRate": "55.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Biconnected Component",
          "slug": "biconnected-component"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1304",
      "questionFrontendId": "1405",
      "title": "Longest Happy String",
      "titleSlug": "longest-happy-string",
      "acRate": "57.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1308",
      "questionFrontendId": "1202",
      "title": "Smallest String With Swaps",
      "titleSlug": "smallest-string-with-swaps",
      "acRate": "58.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1320",
      "questionFrontendId": "1209",
      "title": "Remove All Adjacent Duplicates in String II",
      "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
      "acRate": "57.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1337",
      "questionFrontendId": "1206",
      "title": "Design Skiplist",
      "titleSlug": "design-skiplist",
      "acRate": "60.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1348",
      "questionFrontendId": "2321",
      "title": "Maximum Score Of Spliced Array",
      "titleSlug": "maximum-score-of-spliced-array",
      "acRate": "56.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1355",
      "questionFrontendId": "2216",
      "title": "Minimum Deletions to Make Array Beautiful",
      "titleSlug": "minimum-deletions-to-make-array-beautiful",
      "acRate": "48.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1356",
      "questionFrontendId": "2193",
      "title": "Minimum Number of Moves to Make Palindrome",
      "titleSlug": "minimum-number-of-moves-to-make-palindrome",
      "acRate": "51.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1360",
      "questionFrontendId": "1239",
      "title": "Maximum Length of a Concatenated String with Unique Characters",
      "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1363",
      "questionFrontendId": "2309",
      "title": "Greatest English Letter in Upper and Lower Case",
      "titleSlug": "greatest-english-letter-in-upper-and-lower-case",
      "acRate": "69.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1386",
      "questionFrontendId": "1260",
      "title": "Shift 2D Grid",
      "titleSlug": "shift-2d-grid",
      "acRate": "67.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1393",
      "questionFrontendId": "2218",
      "title": "Maximum Value of K Coins From Piles",
      "titleSlug": "maximum-value-of-k-coins-from-piles",
      "acRate": "60.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1396",
      "questionFrontendId": "1267",
      "title": "Count Servers that Communicate",
      "titleSlug": "count-servers-that-communicate",
      "acRate": "60.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1397",
      "questionFrontendId": "1268",
      "title": "Search Suggestions System",
      "titleSlug": "search-suggestions-system",
      "acRate": "65.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1400",
      "questionFrontendId": "1275",
      "title": "Find Winner on a Tic Tac Toe Game",
      "titleSlug": "find-winner-on-a-tic-tac-toe-game",
      "acRate": "53.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1402",
      "questionFrontendId": "1277",
      "title": "Count Square Submatrices with All Ones",
      "titleSlug": "count-square-submatrices-with-all-ones",
      "acRate": "75.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1414",
      "questionFrontendId": "1293",
      "title": "Shortest Path in a Grid with Obstacles Elimination",
      "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
      "acRate": "45.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1420",
      "questionFrontendId": "1285",
      "title": "Find the Start and End Number of Continuous Ranges",
      "titleSlug": "find-the-start-and-end-number-of-continuous-ranges",
      "acRate": "82.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1426",
      "questionFrontendId": "1304",
      "title": "Find N Unique Integers Sum up to Zero",
      "titleSlug": "find-n-unique-integers-sum-up-to-zero",
      "acRate": "76.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1428",
      "questionFrontendId": "1306",
      "title": "Jump Game III",
      "titleSlug": "jump-game-iii",
      "acRate": "64.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1441",
      "questionFrontendId": "1318",
      "title": "Minimum Flips to Make a OR b Equal to c",
      "titleSlug": "minimum-flips-to-make-a-or-b-equal-to-c",
      "acRate": "71.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1442",
      "questionFrontendId": "1319",
      "title": "Number of Operations to Make Network Connected",
      "titleSlug": "number-of-operations-to-make-network-connected",
      "acRate": "62.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1444",
      "questionFrontendId": "1342",
      "title": "Number of Steps to Reduce a Number to Zero",
      "titleSlug": "number-of-steps-to-reduce-a-number-to-zero",
      "acRate": "85.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1446",
      "questionFrontendId": "1344",
      "title": "Angle Between Hands of a Clock",
      "titleSlug": "angle-between-hands-of-a-clock",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1449",
      "questionFrontendId": "1324",
      "title": "Print Words Vertically",
      "titleSlug": "print-words-vertically",
      "acRate": "63.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1451",
      "questionFrontendId": "1326",
      "title": "Minimum Number of Taps to Open to Water a Garden",
      "titleSlug": "minimum-number-of-taps-to-open-to-water-a-garden",
      "acRate": "51.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1465",
      "questionFrontendId": "1339",
      "title": "Maximum Product of Splitted Binary Tree",
      "titleSlug": "maximum-product-of-splitted-binary-tree",
      "acRate": "47.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1473",
      "questionFrontendId": "1371",
      "title": "Find the Longest Substring Containing Vowels in Even Counts",
      "titleSlug": "find-the-longest-substring-containing-vowels-in-even-counts",
      "acRate": "63.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1476",
      "questionFrontendId": "1351",
      "title": "Count Negative Numbers in a Sorted Matrix",
      "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
      "acRate": "77.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1487",
      "questionFrontendId": "1386",
      "title": "Cinema Seat Allocation",
      "titleSlug": "cinema-seat-allocation",
      "acRate": "41.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1491",
      "questionFrontendId": "1375",
      "title": "Number of Times Binary String Is Prefix-Aligned",
      "titleSlug": "number-of-times-binary-string-is-prefix-aligned",
      "acRate": "65.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1492",
      "questionFrontendId": "1376",
      "title": "Time Needed to Inform All Employees",
      "titleSlug": "time-needed-to-inform-all-employees",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1504",
      "questionFrontendId": "1369",
      "title": "Get the Second Most Recent Activity",
      "titleSlug": "get-the-second-most-recent-activity",
      "acRate": "67.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1510",
      "questionFrontendId": "1394",
      "title": "Find Lucky Integer in an Array",
      "titleSlug": "find-lucky-integer-in-an-array",
      "acRate": "66.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1516",
      "questionFrontendId": "1415",
      "title": "The k-th Lexicographical String of All Happy Strings of Length n",
      "titleSlug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
      "acRate": "74.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1520",
      "questionFrontendId": "1404",
      "title": "Number of Steps to Reduce a Number in Binary Representation to One",
      "titleSlug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
      "acRate": "52.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1532",
      "questionFrontendId": "1417",
      "title": "Reformat The String",
      "titleSlug": "reformat-the-string",
      "acRate": "53.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1544",
      "questionFrontendId": "1448",
      "title": "Count Good Nodes in Binary Tree",
      "titleSlug": "count-good-nodes-in-binary-tree",
      "acRate": "73.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1549",
      "questionFrontendId": "1438",
      "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
      "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
      "acRate": "49.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1569",
      "questionFrontendId": "1458",
      "title": "Max Dot Product of Two Subsequences",
      "titleSlug": "max-dot-product-of-two-subsequences",
      "acRate": "62.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1580",
      "questionFrontendId": "1470",
      "title": "Shuffle the Array",
      "titleSlug": "shuffle-the-array",
      "acRate": "88.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1582",
      "questionFrontendId": "1472",
      "title": "Design Browser History",
      "titleSlug": "design-browser-history",
      "acRate": "77.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1585",
      "questionFrontendId": "1492",
      "title": "The kth Factor of n",
      "titleSlug": "the-kth-factor-of-n",
      "acRate": "67.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1587",
      "questionFrontendId": "1494",
      "title": "Parallel Courses II",
      "titleSlug": "parallel-courses-ii",
      "acRate": "29.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1603",
      "questionFrontendId": "1480",
      "title": "Running Sum of 1d Array",
      "titleSlug": "running-sum-of-1d-array",
      "acRate": "86.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1609",
      "questionFrontendId": "1469",
      "title": "Find All The Lonely Nodes",
      "titleSlug": "find-all-the-lonely-nodes",
      "acRate": "82.7%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1611",
      "questionFrontendId": "1487",
      "title": "Making File Names Unique",
      "titleSlug": "making-file-names-unique",
      "acRate": "36.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1617",
      "questionFrontendId": "1510",
      "title": "Stone Game IV",
      "titleSlug": "stone-game-iv",
      "acRate": "59.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1618",
      "questionFrontendId": "1474",
      "title": "Delete N Nodes After M Nodes of a Linked List",
      "titleSlug": "delete-n-nodes-after-m-nodes-of-a-linked-list",
      "acRate": "73.1%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1630",
      "questionFrontendId": "1523",
      "title": "Count Odd Numbers in an Interval Range",
      "titleSlug": "count-odd-numbers-in-an-interval-range",
      "acRate": "49.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1642",
      "questionFrontendId": "1518",
      "title": "Water Bottles",
      "titleSlug": "water-bottles",
      "acRate": "60.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1646",
      "questionFrontendId": "1539",
      "title": "Kth Missing Positive Number",
      "titleSlug": "kth-missing-positive-number",
      "acRate": "59.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1648",
      "questionFrontendId": "1541",
      "title": "Minimum Insertions to Balance a Parentheses String",
      "titleSlug": "minimum-insertions-to-balance-a-parentheses-string",
      "acRate": "51.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1649",
      "questionFrontendId": "1546",
      "title": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",
      "titleSlug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
      "acRate": "47.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1651",
      "questionFrontendId": "1528",
      "title": "Shuffle String",
      "titleSlug": "shuffle-string",
      "acRate": "84.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1669",
      "questionFrontendId": "1547",
      "title": "Minimum Cost to Cut a Stick",
      "titleSlug": "minimum-cost-to-cut-a-stick",
      "acRate": "61.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1674",
      "questionFrontendId": "1551",
      "title": "Minimum Operations to Make Array Equal",
      "titleSlug": "minimum-operations-to-make-array-equal",
      "acRate": "82.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1678",
      "questionFrontendId": "1573",
      "title": "Number of Ways to Split a String",
      "titleSlug": "number-of-ways-to-split-a-string",
      "acRate": "33.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1698",
      "questionFrontendId": "1576",
      "title": "Replace All ?'s to Avoid Consecutive Repeating Characters",
      "titleSlug": "replace-all-s-to-avoid-consecutive-repeating-characters",
      "acRate": "46.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1700",
      "questionFrontendId": "1578",
      "title": "Minimum Time to Make Rope Colorful",
      "titleSlug": "minimum-time-to-make-rope-colorful",
      "acRate": "63.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1701",
      "questionFrontendId": "1579",
      "title": "Remove Max Number of Edges to Keep Graph Fully Traversable",
      "titleSlug": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
      "acRate": "64.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1706",
      "questionFrontendId": "1584",
      "title": "Min Cost to Connect All Points",
      "titleSlug": "min-cost-to-connect-all-points",
      "acRate": "66.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Minimum Spanning Tree",
          "slug": "minimum-spanning-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1708",
      "questionFrontendId": "1603",
      "title": "Design Parking System",
      "titleSlug": "design-parking-system",
      "acRate": "88.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1714",
      "questionFrontendId": "1592",
      "title": "Rearrange Spaces Between Words",
      "titleSlug": "rearrange-spaces-between-words",
      "acRate": "43.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1738",
      "questionFrontendId": "1615",
      "title": "Maximal Network Rank",
      "titleSlug": "maximal-network-rank",
      "acRate": "65.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1742",
      "questionFrontendId": "1637",
      "title": "Widest Vertical Area Between Two Points Containing No Points",
      "titleSlug": "widest-vertical-area-between-two-points-containing-no-points",
      "acRate": "87.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1743",
      "questionFrontendId": "1638",
      "title": "Count Substrings That Differ by One Character",
      "titleSlug": "count-substrings-that-differ-by-one-character",
      "acRate": "71.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1753",
      "questionFrontendId": "1631",
      "title": "Path With Minimum Effort",
      "titleSlug": "path-with-minimum-effort",
      "acRate": "59.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1756",
      "questionFrontendId": "1653",
      "title": "Minimum Deletions to Make String Balanced",
      "titleSlug": "minimum-deletions-to-make-string-balanced",
      "acRate": "58.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1762",
      "questionFrontendId": "1642",
      "title": "Furthest Building You Can Reach",
      "titleSlug": "furthest-building-you-can-reach",
      "acRate": "49.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1766",
      "questionFrontendId": "1671",
      "title": "Minimum Number of Removals to Make Mountain Array",
      "titleSlug": "minimum-number-of-removals-to-make-mountain-array",
      "acRate": "41.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1770",
      "questionFrontendId": "1647",
      "title": "Minimum Deletions to Make Character Frequencies Unique",
      "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
      "acRate": "61.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1780",
      "questionFrontendId": "1644",
      "title": "Lowest Common Ancestor of a Binary Tree II",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree-ii",
      "acRate": "63.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1790",
      "questionFrontendId": "1650",
      "title": "Lowest Common Ancestor of a Binary Tree III",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iii",
      "acRate": "79.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1799",
      "questionFrontendId": "1681",
      "title": "Minimum Incompatibility",
      "titleSlug": "minimum-incompatibility",
      "acRate": "38.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1801",
      "questionFrontendId": "1661",
      "title": "Average Time of Process per Machine",
      "titleSlug": "average-time-of-process-per-machine",
      "acRate": "66.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1802",
      "questionFrontendId": "1700",
      "title": "Number of Students Unable to Eat Lunch",
      "titleSlug": "number-of-students-unable-to-eat-lunch",
      "acRate": "71.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1805",
      "questionFrontendId": "1703",
      "title": "Minimum Adjacent Swaps for K Consecutive Ones",
      "titleSlug": "minimum-adjacent-swaps-for-k-consecutive-ones",
      "acRate": "42.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1831",
      "questionFrontendId": "1712",
      "title": "Ways to Split Array Into Three Subarrays",
      "titleSlug": "ways-to-split-array-into-three-subarrays",
      "acRate": "32.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1833",
      "questionFrontendId": "1732",
      "title": "Find the Highest Altitude",
      "titleSlug": "find-the-highest-altitude",
      "acRate": "82.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1873",
      "questionFrontendId": "1763",
      "title": "Longest Nice Substring",
      "titleSlug": "longest-nice-substring",
      "acRate": "60.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1883",
      "questionFrontendId": "1740",
      "title": "Find Distance in a Binary Tree",
      "titleSlug": "find-distance-in-a-binary-tree",
      "acRate": "70.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1894",
      "questionFrontendId": "1768",
      "title": "Merge Strings Alternately",
      "titleSlug": "merge-strings-alternately",
      "acRate": "79.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1900",
      "questionFrontendId": "1774",
      "title": "Closest Dessert Cost",
      "titleSlug": "closest-dessert-cost",
      "acRate": "47.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1901",
      "questionFrontendId": "1775",
      "title": "Equal Sum Arrays With Minimum Number of Operations",
      "titleSlug": "equal-sum-arrays-with-minimum-number-of-operations",
      "acRate": "53.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1908",
      "questionFrontendId": "1757",
      "title": "Recyclable and Low Fat Products",
      "titleSlug": "recyclable-and-low-fat-products",
      "acRate": "89.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1909",
      "questionFrontendId": "1762",
      "title": "Buildings With an Ocean View",
      "titleSlug": "buildings-with-an-ocean-view",
      "acRate": "79.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1915",
      "questionFrontendId": "1790",
      "title": "Check if One String Swap Can Make Strings Equal",
      "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
      "acRate": "45.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1916",
      "questionFrontendId": "1791",
      "title": "Find Center of Star Graph",
      "titleSlug": "find-center-of-star-graph",
      "acRate": "83.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1929",
      "questionFrontendId": "1802",
      "title": "Maximum Value at a Given Index in a Bounded Array",
      "titleSlug": "maximum-value-at-a-given-index-in-a-bounded-array",
      "acRate": "39.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1936",
      "questionFrontendId": "1808",
      "title": "Maximize Number of Nice Divisors",
      "titleSlug": "maximize-number-of-nice-divisors",
      "acRate": "32.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1950",
      "questionFrontendId": "1822",
      "title": "Sign of the Product of an Array",
      "titleSlug": "sign-of-the-product-of-an-array",
      "acRate": "65.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1951",
      "questionFrontendId": "1823",
      "title": "Find the Winner of the Circular Game",
      "titleSlug": "find-the-winner-of-the-circular-game",
      "acRate": "78.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1966",
      "questionFrontendId": "1838",
      "title": "Frequency of the Most Frequent Element",
      "titleSlug": "frequency-of-the-most-frequent-element",
      "acRate": "45.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1982",
      "questionFrontendId": "1836",
      "title": "Remove Duplicates From an Unsorted Linked List",
      "titleSlug": "remove-duplicates-from-an-unsorted-linked-list",
      "acRate": "71.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1983",
      "questionFrontendId": "1854",
      "title": "Maximum Population Year",
      "titleSlug": "maximum-population-year",
      "acRate": "60.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2016",
      "questionFrontendId": "1887",
      "title": "Reduction Operations to Make the Array Elements Equal",
      "titleSlug": "reduction-operations-to-make-the-array-elements-equal",
      "acRate": "73.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2031",
      "questionFrontendId": "1884",
      "title": "Egg Drop With 2 Eggs and N Floors",
      "titleSlug": "egg-drop-with-2-eggs-and-n-floors",
      "acRate": "72.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2033",
      "questionFrontendId": "1904",
      "title": "The Number of Full Rounds You Have Played",
      "titleSlug": "the-number-of-full-rounds-you-have-played",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2076",
      "questionFrontendId": "1945",
      "title": "Sum of Digits of String After Convert",
      "titleSlug": "sum-of-digits-of-string-after-convert",
      "acRate": "62.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2082",
      "questionFrontendId": "2052",
      "title": "Minimum Cost to Separate Sentence Into Rows",
      "titleSlug": "minimum-cost-to-separate-sentence-into-rows",
      "acRate": "49.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2083",
      "questionFrontendId": "1952",
      "title": "Three Divisors",
      "titleSlug": "three-divisors",
      "acRate": "60.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2117",
      "questionFrontendId": "2007",
      "title": "Find Original Array From Doubled Array",
      "titleSlug": "find-original-array-from-doubled-array",
      "acRate": "40.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2121",
      "questionFrontendId": "1971",
      "title": "Find if Path Exists in Graph",
      "titleSlug": "find-if-path-exists-in-graph",
      "acRate": "51.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2130",
      "questionFrontendId": "2002",
      "title": "Maximum Product of the Length of Two Palindromic Subsequences",
      "titleSlug": "maximum-product-of-the-length-of-two-palindromic-subsequences",
      "acRate": "58.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2142",
      "questionFrontendId": "2015",
      "title": "Average Height of Buildings in Each Segment",
      "titleSlug": "average-height-of-buildings-in-each-segment",
      "acRate": "59.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2155",
      "questionFrontendId": "2028",
      "title": "Find Missing Observations",
      "titleSlug": "find-missing-observations",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2162",
      "questionFrontendId": "2035",
      "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
      "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
      "acRate": "20.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2176",
      "questionFrontendId": "2050",
      "title": "Parallel Courses III",
      "titleSlug": "parallel-courses-iii",
      "acRate": "67.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2191",
      "questionFrontendId": "2086",
      "title": "Minimum Number of Food Buckets to Feed the Hamsters",
      "titleSlug": "minimum-number-of-food-buckets-to-feed-the-hamsters",
      "acRate": "45.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2217",
      "questionFrontendId": "2096",
      "title": "Step-By-Step Directions From a Binary Tree Node to Another",
      "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
      "acRate": "48.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2220",
      "questionFrontendId": "2115",
      "title": "Find All Possible Recipes from Given Supplies",
      "titleSlug": "find-all-possible-recipes-from-given-supplies",
      "acRate": "49.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2236",
      "questionFrontendId": "2130",
      "title": "Maximum Twin Sum of a Linked List",
      "titleSlug": "maximum-twin-sum-of-a-linked-list",
      "acRate": "81.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2242",
      "questionFrontendId": "2098",
      "title": "Subsequence of Size K With the Largest Even Sum",
      "titleSlug": "subsequence-of-size-k-with-the-largest-even-sum",
      "acRate": "36.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2243",
      "questionFrontendId": "2124",
      "title": "Check if All A's Appears Before All B's",
      "titleSlug": "check-if-all-as-appears-before-all-bs",
      "acRate": "71.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2246",
      "questionFrontendId": "2127",
      "title": "Maximum Employees to Be Invited to a Meeting",
      "titleSlug": "maximum-employees-to-be-invited-to-a-meeting",
      "acRate": "36.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2247",
      "questionFrontendId": "2107",
      "title": "Number of Unique Flavors After Sharing K Candies",
      "titleSlug": "number-of-unique-flavors-after-sharing-k-candies",
      "acRate": "55.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2255",
      "questionFrontendId": "2134",
      "title": "Minimum Swaps to Group All 1's Together II",
      "titleSlug": "minimum-swaps-to-group-all-1s-together-ii",
      "acRate": "52.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2292",
      "questionFrontendId": "2185",
      "title": "Counting Words With a Given Prefix",
      "titleSlug": "counting-words-with-a-given-prefix",
      "acRate": "77.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2299",
      "questionFrontendId": "2181",
      "title": "Merge Nodes in Between Zeros",
      "titleSlug": "merge-nodes-in-between-zeros",
      "acRate": "85.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2308",
      "questionFrontendId": "2206",
      "title": "Divide Array Into Equal Pairs",
      "titleSlug": "divide-array-into-equal-pairs",
      "acRate": "73.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2310",
      "questionFrontendId": "2208",
      "title": "Minimum Operations to Halve Array Sum",
      "titleSlug": "minimum-operations-to-halve-array-sum",
      "acRate": "46.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2334",
      "questionFrontendId": "2251",
      "title": "Number of Flowers in Full Bloom",
      "titleSlug": "number-of-flowers-in-full-bloom",
      "acRate": "56.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2337",
      "questionFrontendId": "2259",
      "title": "Remove Digit From Number to Maximize Result",
      "titleSlug": "remove-digit-from-number-to-maximize-result",
      "acRate": "44.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2350",
      "questionFrontendId": "2239",
      "title": "Find Closest Number to Zero",
      "titleSlug": "find-closest-number-to-zero",
      "acRate": "44.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2364",
      "questionFrontendId": "2246",
      "title": "Longest Path With Different Adjacent Characters",
      "titleSlug": "longest-path-with-different-adjacent-characters",
      "acRate": "54.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2383",
      "questionFrontendId": "2235",
      "title": "Add Two Integers",
      "titleSlug": "add-two-integers",
      "acRate": "87.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2384",
      "questionFrontendId": "2236",
      "title": "Root Equals Sum of Children",
      "titleSlug": "root-equals-sum-of-children",
      "acRate": "84.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2418",
      "questionFrontendId": "2333",
      "title": "Minimum Sum of Squared Difference",
      "titleSlug": "minimum-sum-of-squared-difference",
      "acRate": "25.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2439",
      "questionFrontendId": "2360",
      "title": "Longest Cycle in a Graph",
      "titleSlug": "longest-cycle-in-a-graph",
      "acRate": "50.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2453",
      "questionFrontendId": "2339",
      "title": "All the Matches of the League",
      "titleSlug": "all-the-matches-of-the-league",
      "acRate": "87.2%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2461",
      "questionFrontendId": "2385",
      "title": "Amount of Time for Binary Tree to Be Infected",
      "titleSlug": "amount-of-time-for-binary-tree-to-be-infected",
      "acRate": "63.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2471",
      "questionFrontendId": "2391",
      "title": "Minimum Amount of Time to Collect Garbage",
      "titleSlug": "minimum-amount-of-time-to-collect-garbage",
      "acRate": "85.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2473",
      "questionFrontendId": "2342",
      "title": "Max Sum of a Pair With Equal Sum of Digits",
      "titleSlug": "max-sum-of-a-pair-with-equal-sum-of-digits",
      "acRate": "54.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2475",
      "questionFrontendId": "2384",
      "title": "Largest Palindromic Number",
      "titleSlug": "largest-palindromic-number",
      "acRate": "33.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2487",
      "questionFrontendId": "2405",
      "title": "Optimal Partition of String",
      "titleSlug": "optimal-partition-of-string",
      "acRate": "78.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2524",
      "questionFrontendId": "2441",
      "title": "Largest Positive Integer That Exists With Its Negative",
      "titleSlug": "largest-positive-integer-that-exists-with-its-negative",
      "acRate": "68.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2568",
      "questionFrontendId": "2477",
      "title": "Minimum Fuel Cost to Report to the Capital",
      "titleSlug": "minimum-fuel-cost-to-report-to-the-capital",
      "acRate": "64.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2593",
      "questionFrontendId": "2450",
      "title": "Number of Distinct Binary Strings After Applying Operations",
      "titleSlug": "number-of-distinct-binary-strings-after-applying-operations",
      "acRate": "64.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2634",
      "questionFrontendId": "2540",
      "title": "Minimum Common Value",
      "titleSlug": "minimum-common-value",
      "acRate": "59.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2674",
      "questionFrontendId": "2599",
      "title": "Make the Prefix Sum Non-negative",
      "titleSlug": "make-the-prefix-sum-non-negative",
      "acRate": "52.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2693",
      "questionFrontendId": "2548",
      "title": "Maximum Price to Fill a Bag",
      "titleSlug": "maximum-price-to-fill-a-bag",
      "acRate": "65.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2720",
      "questionFrontendId": "2616",
      "title": "Minimize the Maximum Difference of Pairs",
      "titleSlug": "minimize-the-maximum-difference-of-pairs",
      "acRate": "43.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2756",
      "questionFrontendId": "2706",
      "title": "Buy Two Chocolates",
      "titleSlug": "buy-two-chocolates",
      "acRate": "69.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2809",
      "questionFrontendId": "2667",
      "title": "Create Hello World Function",
      "titleSlug": "create-hello-world-function",
      "acRate": "81.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2823",
      "questionFrontendId": "2664",
      "title": "The Knight\u2019s Tour",
      "titleSlug": "the-knights-tour",
      "acRate": "69.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2902",
      "questionFrontendId": "2815",
      "title": "Max Pair Sum in an Array",
      "titleSlug": "max-pair-sum-in-an-array",
      "acRate": "57.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3000",
      "questionFrontendId": "2817",
      "title": "Minimum Absolute Difference Between Elements With Constraint",
      "titleSlug": "minimum-absolute-difference-between-elements-with-constraint",
      "acRate": "32.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3062",
      "questionFrontendId": "2877",
      "title": "Create a DataFrame from List",
      "titleSlug": "create-a-dataframe-from-list",
      "acRate": "80.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3092",
      "questionFrontendId": "2850",
      "title": "Minimum Moves to Spread Stones Over Grid",
      "titleSlug": "minimum-moves-to-spread-stones-over-grid",
      "acRate": "42.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3111",
      "questionFrontendId": "2847",
      "title": "Smallest Number With Given Digit Product",
      "titleSlug": "smallest-number-with-given-digit-product",
      "acRate": "43.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3228",
      "questionFrontendId": "3002",
      "title": "Maximum Size of a Set After Removals",
      "titleSlug": "maximum-size-of-a-set-after-removals",
      "acRate": "44.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3236",
      "questionFrontendId": "2996",
      "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum",
      "titleSlug": "smallest-missing-integer-greater-than-sequential-prefix-sum",
      "acRate": "31.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3239",
      "questionFrontendId": "2998",
      "title": "Minimum Number of Operations to Make X and Y Equal",
      "titleSlug": "minimum-number-of-operations-to-make-x-and-y-equal",
      "acRate": "43.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3260",
      "questionFrontendId": "3013",
      "title": "Divide an Array Into Subarrays With Minimum Cost II",
      "titleSlug": "divide-an-array-into-subarrays-with-minimum-cost-ii",
      "acRate": "31.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3304",
      "questionFrontendId": "3004",
      "title": "Maximum Subtree of the Same Color",
      "titleSlug": "maximum-subtree-of-the-same-color",
      "acRate": "65.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3315",
      "questionFrontendId": "3009",
      "title": "Maximum Number of Intersections on the Chart",
      "titleSlug": "maximum-number-of-intersections-on-the-chart",
      "acRate": "46.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3318",
      "questionFrontendId": "3040",
      "title": "Maximum Number of Operations With the Same Score II",
      "titleSlug": "maximum-number-of-operations-with-the-same-score-ii",
      "acRate": "31.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3320",
      "questionFrontendId": "3038",
      "title": "Maximum Number of Operations With the Same Score I",
      "titleSlug": "maximum-number-of-operations-with-the-same-score-i",
      "acRate": "50.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    }
  ],
  "frequencies": "{\"103\": [3, 4, 15, 201, 0.09801091895501016, 0.16810967941283897, 1.2737891353040411, 6.030032112551838, 1], \"33\": [6, 8, 22, 281, 0.13626487952018312, 0.23073831998434274, 1.0860985236309382, 5.742355246319579, 1], \"75\": [5, 8, 17, 159, 0.14277339081142018, 0.3313728761777966, 1.0203244008092345, 5.051094791983318, 1], \"445\": [2, 2, 6, 100, 0.22825865198098017, 0.22825865198098017, 1.1962507582320256, 6.35638484508244, 1], \"13\": [5, 14, 35, 247, 0.08590443756380055, 0.5325470910693699, 1.6855480820403719, 5.39319851477444, 1], \"23\": [5, 8, 19, 208, 0.16772812838918624, 0.38355653952648555, 1.291148521353734, 5.72928002916144, 1], \"695\": [3, 3, 7, 67, 0.1679917312391297, 0.1679917312391297, 0.6911125918621578, 4.524392113148907, 1], \"8\": [3, 3, 17, 213, 0.05543290940619299, 0.05543290940619299, 1.0403729346778094, 5.634392022028761, 1], \"133\": [0, 0, 2, 66, 0, 0, 0.04908961019652358, 4.021638606300355, 3], \"402\": [5, 5, 7, 72, 0.5786893313414864, 0.5786893313414864, 0.9306078142736471, 5.096860921852768, 1], \"19\": [8, 10, 14, 112, 0.25091823176225275, 0.3685471485927166, 0.6277764653542548, 4.041298473871129, 1], \"7\": [2, 5, 9, 119, 0.017167803622365422, 0.10275973395776894, 0.3005854772876888, 4.132010065108576, 1], \"138\": [5, 7, 13, 333, 0.24225794733752515, 0.43001507752020396, 1.0483956689981193, 6.89245228930535, 1], \"1\": [25, 44, 80, 869, 0.46627794452334, 1.0438495670805934, 1.9577077050335179, 6.469291650831836, 1], \"12\": [4, 5, 8, 93, 0.1360328151909099, 0.20513166940277638, 0.45924468375586147, 4.379153659170156, 1], \"43\": [3, 3, 18, 107, 0.12062798778861472, 0.12062798778861472, 1.7255100836868542, 5.1004221763622954, 1], \"415\": [0, 0, 4, 45, 0, 0, 0.3195226783074397, 3.8845913509674754, 3], \"678\": [3, 4, 5, 17, 0.25562013999211797, 0.41726149154853387, 0.5928081962573537, 2.3372522630517727, 1], \"230\": [1, 2, 7, 39, 0, 0.03603993648319687, 0.3712471507978231, 2.7049874115716643, 2], \"127\": [2, 3, 13, 96, 0.0628149945792227, 0.13616164199118494, 1.3188342342683659, 5.0130850193227126, 1], \"38\": [1, 2, 4, 49, 0, 0.06959329179919525, 0.25331442894757317, 3.790109830856314, 2], \"5\": [7, 17, 31, 360, 0.18529455998627847, 0.7887594637614547, 1.6079411551282279, 6.18226885153344, 1], \"557\": [0, 0, 2, 76, 0, 0, 0.11060987154397002, 5.135144628592843, 3], \"54\": [8, 13, 30, 351, 0.4286066366698587, 0.8808888048232392, 2.1288631726476046, 6.729590772886357, 1], \"17\": [3, 4, 32, 270, 0.0638061886258959, 0.11076317171366694, 2.1254857862819936, 6.173415620110733, 1], \"628\": [2, 2, 5, 29, 0.10508346897368827, 0.10508346897368827, 0.5262190008387144, 3.190328145618501, 1], \"2\": [6, 13, 28, 410, 0.09094877965463441, 0.36947289017289303, 1.1228252813319408, 5.991158942002138, 1], \"443\": [5, 7, 12, 110, 0.28276805764935187, 0.4950150177393484, 1.0586069540544105, 5.06997240281482, 1], \"53\": [13, 20, 33, 341, 0.48952411586177014, 0.9141958635336066, 1.6232435202579056, 5.968326907023429, 1], \"207\": [4, 6, 12, 87, 0.11053338064061342, 0.2334626603948416, 0.7187480018157948, 4.030490815906383, 1], \"168\": [3, 5, 8, 80, 0.23607730009877803, 0.5536810524156082, 1.0624637745517984, 5.2488598199651815, 1], \"42\": [5, 9, 30, 290, 0.12343063006821355, 0.35462344536278223, 1.7456063924102323, 5.985176900721907, 1], \"142\": [1, 1, 2, 64, 0, 0, 0.021517774809144227, 3.147292792206632, 3], \"273\": [3, 7, 19, 182, 0.4578330936254804, 1.425825199876526, 3.0846432085631865, 7.07201463914463, 1], \"146\": [33, 43, 71, 496, 1.6500335438654417, 1.9995849498823755, 3.4738017571891127, 6.98223346422499, 1], \"277\": [3, 3, 7, 101, 0.6716409753389817, 0.6716409753389817, 1.826606200558223, 6.781653265416307, 1], \"692\": [1, 1, 7, 54, 0, 0, 1.1973471293537987, 4.931210843899488, 3], \"122\": [5, 9, 17, 60, 0.15348688956060175, 0.43015232580588075, 1.0708015705543148, 3.214406662578619, 1], \"253\": [7, 7, 16, 166, 0.7152883064371588, 0.7152883064371588, 1.865385042580958, 6.269415046094807, 1], \"206\": [6, 13, 17, 276, 0.05664562791683043, 0.24184407863334334, 0.38380873195015697, 4.822874981819163, 1], \"24\": [2, 2, 10, 124, 0.04357988070402507, 0.04357988070402507, 0.7483859108676736, 5.148801438185334, 1], \"21\": [7, 12, 21, 273, 0.13244698984339762, 0.34796661604694806, 0.8217894733596789, 5.377136560360026, 1], \"72\": [2, 3, 9, 83, 0.046574191217970816, 0.10189803234663233, 0.6757136160923928, 4.42016087261533, 1], \"56\": [18, 19, 34, 236, 1.0022193870441178, 1.0720063691364239, 1.9674212071335988, 5.665417001183586, 1], \"268\": [2, 3, 12, 93, 0.021978906718775244, 0.04879016416943201, 0.5877866649021191, 3.892840186011372, 1], \"229\": [0, 0, 2, 33, 0, 0, 0.07369816407476748, 3.0829268714886773, 3], \"283\": [0, 0, 6, 98, 0, 0, 0.12944435724435854, 3.6340948717416026, 3], \"82\": [1, 2, 5, 33, 0, 0.04357988070402507, 0.24560650857731212, 2.574667275555386, 2], \"212\": [6, 6, 14, 117, 0.5998896870733627, 0.5998896870733627, 1.7001714252110136, 5.7182038978367284, 1], \"88\": [15, 23, 35, 257, 0.4238270417811912, 0.806882103504798, 1.3541748116977779, 5.049442405304675, 1], \"14\": [1, 2, 11, 89, 0, 0.012759343753760014, 0.32818298814442615, 3.2744456760230114, 2], \"328\": [2, 5, 6, 56, 0.046091107200267, 0.2583649862775729, 0.3538407427028572, 3.6370895120876696, 1], \"68\": [4, 4, 7, 41, 0.34008234884531263, 0.34008234884531263, 0.8067018801068077, 3.774069553330459, 1], \"270\": [0, 0, 0, 15, 0, 0, 0, 2.426668322236189, 4], \"171\": [1, 3, 3, 93, 0, 0.27276297168838964, 0.27276297168838964, 5.681909977072871, 2], \"11\": [3, 13, 18, 132, 0.027077466561904618, 0.4156801147576723, 0.687182492079891, 3.991539147577867, 1], \"136\": [1, 1, 2, 55, 0, 0, 0.0204506104712908, 2.810907586541918, 3], \"124\": [2, 2, 10, 85, 0.03728297604256306, 0.03728297604256306, 0.667658904884958, 4.242958302597659, 1], \"46\": [1, 2, 8, 113, 0, 0.02819073222188664, 0.376701795908974, 4.524744393271843, 2], \"200\": [14, 18, 44, 438, 0.7571981478537894, 1.0549217509184634, 2.444550807202255, 6.80267111438571, 1], \"102\": [2, 3, 7, 111, 0.023981964686485415, 0.05317259535592034, 0.26030838111557353, 4.327614660077937, 1], \"15\": [7, 10, 31, 227, 0.12926293213538578, 0.24811773507355406, 1.3100286568912358, 4.984368223886119, 1], \"79\": [4, 7, 24, 162, 0.1263507915496621, 0.34533138710456124, 1.7661826274384054, 5.40226779759459, 1], \"105\": [1, 3, 9, 128, 0, 0.09758549364146035, 0.6536530815207857, 5.234343606176426, 2], \"49\": [6, 14, 29, 194, 0.12702040005460358, 0.55238775064125, 1.4264841016336258, 4.960009737067291, 1], \"59\": [0, 0, 2, 47, 0, 0, 0.12796988096337653, 4.335884412122557, 3], \"210\": [2, 4, 17, 91, 0.047514875607513184, 0.17785091329828598, 1.5075856988499112, 4.622441105896523, 1], \"4\": [10, 13, 29, 272, 0.3777006259661828, 0.5741300197558931, 1.5809496704858346, 5.800804097601233, 1], \"3\": [19, 25, 49, 313, 0.5773913095953309, 0.8556119960394706, 1.8240604140163763, 5.361546182994127, 1], \"78\": [3, 3, 5, 63, 0.06326775760085701, 0.06326775760085701, 0.1667190949888817, 3.3945960568452516, 1], \"468\": [1, 1, 6, 47, 0, 0, 1.2577455398398318, 5.046488320359561, 3], \"151\": [1, 2, 16, 282, 0, 0.020101179321087244, 0.8326883967450455, 5.894841192311487, 2], \"785\": [2, 4, 5, 26, 0.4321333551903257, 1.1512560221535317, 1.4766784225881597, 4.525600339471067, 1], \"235\": [1, 1, 2, 81, 0, 0, 0.040780370344928096, 4.238049917293214, 3], \"236\": [3, 3, 11, 181, 0.07509782623107988, 0.07509782623107988, 0.717120931457944, 5.622401304305832, 1], \"329\": [0, 1, 2, 28, 0, 0, 0.11030454201470608, 3.172083663361442, 3], \"165\": [0, 0, 4, 86, 0, 0, 0.6257058997644127, 5.890585272520873, 3], \"117\": [1, 1, 4, 90, 0, 0, 0.36517862980007215, 5.412273068934135, 3], \"20\": [5, 10, 25, 282, 0.05363790972854513, 0.1991868371590033, 0.8660757047114652, 5.172066938128098, 1], \"722\": [2, 2, 3, 55, 0.5705448584676129, 0.5705448584676129, 1.0045833390198333, 6.259481880236109, 1], \"121\": [11, 17, 37, 298, 0.22535543377600073, 0.47232493543538945, 1.3506228049626439, 5.22848892269488, 1], \"204\": [2, 2, 4, 61, 0.04495138786226632, 0.04495138786226632, 0.16882086957505205, 3.778951277256672, 1], \"25\": [3, 10, 28, 201, 0.09811785595852335, 0.7633611466044863, 2.2864862280538603, 6.031174462521507, 1], \"36\": [4, 5, 8, 91, 0.10109611687136877, 0.15377066842234322, 0.35454501768090746, 4.026419699238334, 1], \"71\": [1, 2, 5, 58, 0, 0.04593229889743518, 0.2575620081493058, 3.702041570848476, 2], \"160\": [2, 2, 8, 97, 0.04020642047804053, 0.04020642047804053, 0.5046527646589097, 4.57987867614584, 1], \"800\": [0, 1, 2, 14, 0, 0, 0.4572413776318843, 3.3811918352285555, 3], \"10\": [1, 4, 16, 157, 0, 0.18528577662267173, 1.4485640891175626, 5.721598912506308, 2], \"642\": [0, 0, 4, 45, 0, 0, 1.499234772300486, 5.9812943076877785, 3], \"234\": [1, 5, 13, 122, 0, 0.004185087131625397, 0.02795603522291155, 1.251863880828905, 2], \"112\": [4, 5, 10, 41, 0.1443945048818936, 0.2173012756899814, 0.6784769908121515, 2.8518843249103187, 1], \"139\": [8, 9, 15, 129, 0.45924468375586147, 0.5525652299387559, 1.1148728095398899, 5.027540768231282, 1], \"134\": [6, 7, 14, 96, 0.3093489641256154, 0.4010916780927595, 1.08984621769875, 4.5412679175851185, 1], \"240\": [1, 1, 10, 146, 0, 0, 1.2266062898466399, 6.135221420686877, 3], \"348\": [3, 3, 7, 101, 0.5742859776832164, 0.5742859776832164, 1.65328979496295, 6.571573299953448, 1], \"191\": [0, 1, 5, 47, 0, 0, 0.3507752218115441, 3.6408977865524346, 3], \"237\": [1, 2, 2, 53, 0, 0.05051579013690178, 0.05051579013690178, 3.621296579971247, 2], \"50\": [1, 1, 5, 80, 0, 0, 0.13705045783971834, 3.6533253362763567, 3], \"179\": [2, 2, 5, 55, 0.12247703235966204, 0.12247703235966204, 0.5957174923400869, 4.600501323335244, 1], \"287\": [1, 4, 9, 113, 0, 0.013918109154647444, 0.06854895143199836, 2.5002203522602566, 2], \"242\": [4, 8, 12, 85, 0.044390089377067954, 0.16683583935457405, 0.34253286123290394, 3.0678879866796347, 1], \"322\": [5, 5, 15, 131, 0.15358136583522308, 0.15358136583522308, 0.9138974319683146, 4.744504760653038, 1], \"801\": [1, 3, 3, 15, 0, 0.27276297168838964, 0.27276297168838964, 2.1792553438396607, 2], \"92\": [1, 5, 9, 75, 0, 0.24225794733752515, 0.6356016949133447, 4.138004630860503, 2], \"437\": [1, 1, 6, 30, 0, 0, 0.6576404921030354, 3.18865633930721, 3], \"28\": [3, 6, 9, 71, 0.03636764417087485, 0.13815033848081718, 0.2876820724517809, 3.0793772223016673, 1], \"66\": [3, 3, 3, 26, 0.03731776300719518, 0.03731776300719518, 0.03731776300719518, 1.3496137230028933, 1], \"152\": [1, 4, 11, 70, 0, 0.12399764165657076, 0.6923217574837778, 3.723982154308839, 2], \"186\": [1, 2, 5, 57, 0, 0.5623075796011341, 1.7434408919572473, 6.311782260091532, 2], \"153\": [3, 7, 12, 101, 0.05221603708224446, 0.25606785374933355, 0.6193140595302624, 4.123197656296732, 1], \"367\": [2, 3, 3, 16, 0.0903548750399561, 0.19290366612449156, 0.19290366612449156, 1.9533126054684704, 1], \"125\": [1, 2, 5, 92, 0, 0.011799546931155066, 0.07156128147340933, 3.2625377000214497, 2], \"108\": [2, 2, 5, 40, 0.03416216063341746, 0.03416216063341746, 0.19655513761512436, 2.7014253512101982, 1], \"98\": [2, 4, 14, 184, 0.022702450618306516, 0.08787208569288751, 0.7538393357209947, 5.2747995802264835, 1], \"289\": [1, 1, 2, 32, 0, 0, 0.09055957704572704, 3.2294359833466943, 3], \"44\": [0, 1, 7, 96, 0, 0, 0.6772105882971327, 5.2102202404467155, 3], \"126\": [2, 2, 5, 39, 0.18924199963852842, 0.18924199963852842, 0.8338145100499166, 4.3847572780714135, 1], \"37\": [1, 3, 7, 73, 0, 0.17351092711179975, 0.7088132973043447, 4.729063172789986, 2], \"224\": [1, 5, 13, 87, 0, 0.5045064874145122, 1.6929874862688834, 5.2966230185650165, 2], \"141\": [2, 3, 4, 132, 0.010280224177866015, 0.022983647044268543, 0.04050161253951768, 3.8288940798473097, 1], \"48\": [3, 7, 16, 182, 0.05876364050288331, 0.28481987671046183, 1.0012151984157105, 5.410561666446556, 1], \"22\": [2, 8, 20, 169, 0.025253867321203414, 0.3430272491675487, 1.2690706319380771, 5.212841661705019, 1], \"57\": [3, 4, 7, 26, 0.0658613976415558, 0.1142467854444006, 0.31528546619129305, 1.8104936252267874, 1], \"238\": [11, 12, 22, 150, 0.3245418551441243, 0.37588095700288143, 0.9296360136545259, 4.280724202531822, 1], \"218\": [1, 1, 2, 70, 0, 0, 0.325422400434628, 6.0490614806159, 3], \"172\": [1, 1, 2, 23, 0, 0, 0.07786032177227234, 2.460315246650678, 3], \"280\": [0, 0, 2, 10, 0, 0, 0.6576404921030354, 3.18865633930721, 3], \"297\": [7, 7, 20, 179, 0.6993263969259035, 0.6993263969259035, 2.212036219137594, 6.388537825690749, 1], \"232\": [3, 4, 5, 78, 0.08760462248353192, 0.15080254364764412, 0.22659638301717777, 4.141421622345967, 1], \"148\": [1, 1, 3, 45, 0, 0, 0.12344419109112172, 3.4197588401910184, 3], \"106\": [1, 2, 2, 39, 0, 0.06053284922884233, 0.06053284922884233, 3.2079584118772226, 2], \"392\": [1, 2, 2, 14, 0, 0.022548869686613078, 0.022548869686613078, 0.7502105689805227, 2], \"116\": [3, 3, 7, 142, 0.1920777317393193, 0.1920777317393193, 0.7668348963511045, 6.056012140774117, 1], \"647\": [1, 1, 3, 38, 0, 0, 0.16582008790006805, 3.3991244262907987, 3], \"347\": [5, 9, 17, 86, 0.10913566861520116, 0.31744685068441747, 0.8471660646703737, 3.5586110505431474, 1], \"41\": [7, 10, 18, 134, 0.4017582799378108, 0.6976777697342083, 1.4514791163900795, 5.205054030992236, 1], \"295\": [4, 4, 12, 125, 0.2077295483017759, 0.2077295483017759, 1.1242547192814474, 5.4226079618944345, 1], \"129\": [1, 2, 7, 25, 0, 0.06242275791820752, 0.5816847077061512, 2.4037338530975974, 2], \"688\": [1, 1, 2, 17, 0, 0, 0.4795730802618863, 3.8168666599445613, 3], \"140\": [3, 4, 9, 66, 0.2972515234679316, 0.4795730802618863, 1.414732296440424, 5.12716398213393, 1], \"349\": [4, 5, 5, 36, 0.17473517582938092, 0.2610783269338049, 0.2610783269338049, 2.8012608326239707, 1], \"225\": [1, 2, 4, 34, 0, 0.05149142535276627, 0.19174421881901607, 2.7893724475040353, 2], \"338\": [0, 1, 3, 12, 0, 0, 0.11778303565638346, 1.0986122886681096, 3], \"269\": [2, 2, 6, 48, 0.19014428247516366, 0.19014428247516366, 1.0594613811062845, 4.800969444574335, 1], \"380\": [1, 2, 12, 86, 0, 0.052992530140510315, 1.0849134443099477, 4.621297935263581, 2], \"84\": [3, 5, 9, 74, 0.08544093405001241, 0.2213580136907382, 0.5893271581645133, 4.01225841808207, 1], \"285\": [8, 8, 14, 67, 1.434095491591667, 1.7438310026561041, 2.88257541270852, 5.961650130285827, 1], \"94\": [1, 1, 3, 75, 0, 0, 0.061960627359177074, 3.7123587477819515, 3], \"51\": [1, 1, 5, 69, 0, 0, 0.3288778288900482, 4.319604252995314, 3], \"669\": [0, 0, 2, 27, 0, 0, 0.3483066942682158, 4.342993403944672, 3], \"76\": [0, 1, 6, 90, 0, 0, 0.2419764996473019, 4.136716685470257, 3], \"735\": [0, 3, 4, 22, 0, 0.12111557861206398, 0.2061181797504451, 2.069918515799294, 2], \"64\": [3, 3, 7, 89, 0.10178269430994231, 0.10178269430994231, 0.4595323293784402, 4.557004826587502, 1], \"169\": [1, 2, 5, 79, 0, 0.013427526348799438, 0.08110798870964722, 3.0951967665524607, 2], \"135\": [1, 2, 5, 27, 0, 0.05414041967458324, 0.2984032541697195, 2.4104598306026355, 2], \"173\": [0, 0, 6, 82, 0, 0, 0.6371529112053704, 5.120599059908425, 3], \"215\": [3, 8, 17, 130, 0.05279818556697082, 0.32609152056665214, 1.0083096305944073, 4.632855670739987, 1], \"67\": [0, 2, 3, 28, 0, 0.032897703507059034, 0.07255397028698765, 2.0222339430773166, 2], \"91\": [2, 3, 8, 70, 0.06035013533317068, 0.13100097764903212, 0.6908116403780171, 4.346467948387752, 1], \"344\": [0, 1, 4, 115, 0, 0, 0.12238323318830895, 4.687743331512147, 3], \"450\": [2, 3, 4, 61, 0.08607460877124298, 0.18419246472976633, 0.30715417586460125, 4.438146744369212, 1], \"300\": [2, 5, 11, 69, 0.033588379955374906, 0.19350276449938328, 0.7096624828891455, 3.7294828081670697, 1], \"572\": [0, 0, 3, 39, 0, 0, 0.12226878492764151, 3.1346142108437594, 3], \"144\": [1, 1, 2, 16, 0, 0, 0.02817087696669632, 1.0397717886451763, 3], \"208\": [3, 4, 7, 86, 0.1117787707116883, 0.190826678393621, 0.4970651526052253, 4.586883098249127, 1], \"61\": [0, 1, 5, 61, 0, 0, 0.2225451669341328, 3.6401802628751354, 3], \"81\": [1, 2, 3, 31, 0, 0.0628149945792227, 0.13616164199118494, 2.807917536900625, 2], \"69\": [0, 0, 5, 69, 0, 0, 0.13504845991927522, 3.351171636663253, 3], \"189\": [2, 3, 9, 94, 0.015735965931814686, 0.03506397387145681, 0.27852048676186847, 3.5845097242302155, 1], \"205\": [0, 1, 5, 20, 0, 0, 0.1246009767253903, 1.1388396265850198, 3], \"114\": [0, 2, 5, 66, 0, 0.06495789627477239, 0.3502786925408735, 4.305243430072893, 2], \"167\": [0, 0, 2, 38, 0, 0, 0.02149464806795253, 2.1796898814984367, 3], \"110\": [1, 1, 2, 42, 0, 0, 0.030962225603966897, 2.6992061763057573, 3], \"163\": [0, 0, 2, 3, 0, 0, 0.19014428247516366, 0.3860812412871159, 3], \"226\": [1, 1, 4, 53, 0, 0, 0.09531017980432487, 2.9208066595299327, 3], \"31\": [6, 11, 14, 130, 0.2619802153044784, 0.6964694427519231, 0.9672179026742644, 4.952999130838533, 1], \"417\": [0, 0, 3, 27, 0, 0, 0.20479441264601322, 2.9657415598703087, 3], \"73\": [2, 4, 10, 130, 0.02753098863445842, 0.10584888208187668, 0.5293549149553507, 4.778572108770953, 1], \"150\": [0, 1, 5, 34, 0, 0, 0.22846815942973628, 2.5547889271420856, 3], \"453\": [0, 0, 7, 17, 0, 0, 1.791759469228055, 3.417392067582136, 3], \"9\": [6, 8, 8, 86, 0.08650924290928251, 0.14897379164772453, 0.14897379164772453, 2.973704280400688, 1], \"518\": [0, 0, 2, 34, 0, 0, 0.09531017980432487, 3.3978584803966405, 3], \"239\": [6, 11, 15, 90, 0.33647223662121295, 0.8520484631458014, 1.252762968495368, 4.51085950651685, 1], \"104\": [0, 1, 4, 43, 0, 0, 0.06186742602372088, 2.125292751199356, 3], \"866\": [2, 2, 5, 54, 0.35774963506849783, 0.35774963506849783, 1.3051309540126839, 5.721433222605146, 1], \"162\": [2, 4, 6, 48, 0.03028240476917325, 0.1159879332381942, 0.24428663110078958, 2.929028971819409, 1], \"86\": [2, 4, 6, 38, 0.08644688360743705, 0.3083474266820498, 0.5947849439016261, 3.5144051309240227, 1], \"26\": [3, 4, 10, 90, 0.02044132042585312, 0.0360561815233834, 0.20657753459998884, 2.9748409400185096, 1], \"414\": [0, 1, 2, 13, 0, 0, 0.06402185876493102, 1.3332596644638042, 3], \"227\": [2, 5, 8, 80, 0.07550755250814514, 0.3989077075620053, 0.8131064956389242, 4.840164803807916, 1], \"314\": [3, 4, 6, 26, 0.17384692980298241, 0.2908416327421494, 0.5650260806636703, 2.725340090816967, 1], \"176\": [0, 2, 2, 19, 0, 0.03568621313939568, 0.03568621313939568, 1.453681341977361, 2], \"155\": [4, 5, 15, 113, 0.1093985944071066, 0.16605313924233334, 0.9653561127785016, 4.535408026106561, 1], \"118\": [4, 5, 9, 64, 0.13826991637100777, 0.20839209345511067, 0.5600129022433749, 3.6625630725801925, 1], \"85\": [0, 1, 2, 40, 0, 0, 0.12361395596717664, 3.9821380540562843, 3], \"97\": [3, 3, 5, 23, 0.21562875481172333, 0.21562875481172333, 0.5118945709548958, 2.7176298379590236, 1], \"279\": [0, 0, 2, 16, 0, 0, 0.11990392722552108, 2.214067080730717, 3], \"93\": [2, 3, 6, 58, 0.15123096972392353, 0.3128723212803395, 0.9039702474861145, 4.929469507025487, 1], \"228\": [1, 1, 2, 15, 0, 0, 0.04808618666763778, 1.327323236055951, 3], \"143\": [2, 2, 6, 67, 0.0006417249787060122, 0.0006417249787060122, 0.005760753305828087, 0.5425608815614378, 1], \"387\": [1, 2, 4, 67, 0, 0.06301296782873406, 0.23124076154682915, 4.303955221204938, 2], \"62\": [3, 4, 13, 78, 0.07267119029735908, 0.1257541595196729, 0.8818692044522923, 3.950373606862201, 1], \"74\": [2, 4, 9, 95, 0.02358599900587924, 0.09117929013840742, 0.39426499102862805, 4.004573903501781, 1], \"378\": [3, 3, 7, 48, 0.29048712337938953, 0.29048712337938953, 1.0421145950371993, 4.469260365218281, 1], \"694\": [0, 0, 2, 22, 0, 0, 0.3856624808119847, 4.059428297115873, 3], \"130\": [1, 2, 3, 19, 0, 0.05588045839445659, 0.12160713209478691, 1.8224150175898888, 2], \"460\": [3, 3, 8, 57, 0.47505839990735965, 0.47505839990735965, 1.6722858160937641, 5.3960202589267645, 1], \"34\": [1, 1, 6, 62, 0, 0, 0.20632564417289329, 3.237442057034883, 3], \"765\": [0, 0, 3, 49, 0, 0, 1.2939210409888755, 6.453036842440647, 3], \"174\": [1, 1, 2, 25, 0, 0, 0.27570588140506525, 3.924014313518573, 3], \"810\": [0, 0, 0, 24, 0, 0, 0, 5.405099947514598, 4], \"543\": [1, 1, 3, 52, 0, 0, 0.06693948267510934, 3.0819099697950434, 3], \"128\": [5, 6, 15, 107, 0.1187351233203619, 0.16682130998799968, 0.7583001120011277, 4.073048636951024, 1], \"32\": [1, 5, 9, 57, 0, 0.3065136824255544, 0.7710907878659716, 3.863128101196908, 2], \"149\": [1, 1, 5, 45, 0, 0, 0.794616640724805, 4.598155348181441, 3], \"438\": [1, 1, 6, 54, 0, 0, 0.6551596398987732, 4.330225837695633, 3], \"214\": [1, 2, 2, 34, 0, 0.19290366612449156, 0.19290366612449156, 4.134996329488562, 2], \"662\": [0, 0, 2, 26, 0, 0, 0.13534134786976212, 3.2383942401402988, 3], \"486\": [0, 0, 3, 13, 0, 0, 0.682218110027755, 2.9637030309817143, 3], \"545\": [1, 1, 6, 74, 0, 0, 1.71505156060815, 6.4344656490756655, 3], \"299\": [1, 1, 2, 17, 0, 0, 0.30538164955118186, 3.2885351408983126, 3], \"542\": [0, 4, 6, 23, 0, 0.35375290706085394, 0.6703427047413258, 2.7101699687216083, 2], \"368\": [2, 2, 5, 12, 0.27380672595816385, 0.27380672595816385, 1.0880581009894195, 2.5127311558974297, 1], \"209\": [2, 2, 7, 23, 0.0344861760711693, 0.0344861760711693, 0.3575517524122669, 1.7299462758431239, 1], \"442\": [2, 2, 6, 49, 0.09055957704572704, 0.09055957704572704, 0.6168494265092993, 4.058643713422402, 1], \"449\": [0, 0, 2, 40, 0, 0, 0.38193461069797024, 5.231357311210506, 3], \"403\": [0, 0, 3, 39, 0, 0, 0.6190392084062234, 4.982627669109352, 3], \"29\": [0, 0, 2, 52, 0, 0, 0.03984590854719967, 3.349190667825069, 3], \"70\": [8, 9, 14, 103, 0.20149478425680828, 0.24883101541790215, 0.5209589697771231, 3.6376871220812808, 1], \"567\": [0, 0, 8, 42, 0, 0, 0.6327380527643853, 3.232030303399093, 3], \"650\": [0, 0, 0, 7, 0, 0, 0, 1.9529400549835714, 4], \"175\": [0, 2, 2, 21, 0, 0.03724825388061888, 0.03724825388061888, 1.6455886721493183, 2], \"560\": [2, 8, 18, 100, 0.03149866705937099, 0.4134332777573413, 1.2787091504399533, 4.394449154672439, 1], \"416\": [0, 0, 4, 32, 0, 0, 0.21158957890851005, 2.77763854245537, 3], \"55\": [2, 5, 11, 59, 0.018570635819456074, 0.1107815963235417, 0.4491695423428935, 2.851405099732578, 1], \"581\": [2, 2, 4, 26, 0.2629424662760252, 0.2629424662760252, 0.7898234807953135, 3.947912554663898, 1], \"198\": [6, 6, 10, 72, 0.18571714579509285, 0.18571714579509285, 0.4490949483208239, 3.4140397345733824, 1], \"394\": [1, 2, 12, 85, 0, 0.06603058152308591, 1.240498895231616, 4.822645827874721, 2], \"217\": [3, 10, 17, 70, 0.025091921378405064, 0.2486759043227249, 0.5965939925160235, 2.6969213104075007, 1], \"525\": [3, 3, 6, 21, 0.12893368337589317, 0.12893368337589317, 0.4385508326939298, 2.0468046123668135, 1], \"412\": [2, 2, 3, 50, 0.057569851821477835, 0.057569851821477835, 0.12516314295400602, 3.638560343924229, 1], \"231\": [1, 1, 2, 18, 0, 0, 0.029306126585499394, 1.2263960926546258, 3], \"101\": [0, 3, 5, 60, 0, 0.06941876587158327, 0.18205528066403623, 3.3929633619815047, 2], \"340\": [1, 1, 4, 43, 0, 0, 1.0216512475319814, 5.3300313420375645, 3], \"451\": [1, 3, 6, 25, 0, 0.2115583769789802, 0.6639286345608053, 2.8542410882085556, 2], \"419\": [1, 3, 5, 55, 0, 0.6279612006752497, 1.231739068703661, 5.6562169544156395, 2], \"680\": [0, 1, 4, 27, 0, 0, 0.188348264660815, 2.345932393652335, 3], \"99\": [0, 1, 9, 67, 0, 0, 1.1505720275988207, 4.79336335993913, 3], \"591\": [0, 0, 2, 11, 0, 0, 1.6945957207744073, 4.908561552145052, 3], \"362\": [1, 1, 4, 44, 0, 0, 1.007640510462383, 5.3539165944746365, 3], \"258\": [0, 0, 0, 11, 0, 0, 0, 1.0260203871504388, 4], \"95\": [0, 0, 3, 18, 0, 0, 0.3981923487790846, 2.9236289796526473, 3], \"222\": [0, 1, 2, 21, 0, 0, 0.04362742017962607, 1.7777261207690989, 3], \"365\": [0, 0, 0, 8, 0, 0, 0, 1.7599299203656682, 4], \"27\": [2, 2, 3, 30, 0.010587711398820563, 0.010587711398820563, 0.023666631812186485, 1.22227162482849, 1], \"359\": [0, 0, 5, 23, 0, 0, 0.7402651035370152, 3.1864251258227907, 3], \"154\": [1, 1, 3, 19, 0, 0, 0.2204000653684589, 2.3878826735059406, 3], \"395\": [0, 1, 4, 18, 0, 0, 0.6749095930101644, 3.0213060728660905, 3], \"6\": [1, 3, 3, 33, 0, 0.0751605712416521, 0.0751605712416521, 2.346116336991421, 2], \"109\": [1, 1, 2, 26, 0, 0, 0.15355773584309076, 3.3690113414865426, 3], \"435\": [1, 1, 3, 20, 0, 0, 0.14310084364067333, 2.0589335374587088, 3], \"371\": [1, 1, 3, 34, 0, 0, 0.14041717882974725, 3.013743301163192, 3], \"261\": [0, 0, 2, 13, 0, 0, 0.18232155679395462, 2.2460147415056513, 3], \"63\": [1, 2, 3, 30, 0, 0.05901417143705527, 0.12819804664916004, 2.68633693510817, 2], \"373\": [0, 1, 2, 13, 0, 0, 0.12438371968773553, 1.8864674207696739, 3], \"216\": [0, 0, 3, 16, 0, 0, 0.16222534433150315, 1.7933889302371178, 3], \"219\": [1, 1, 4, 16, 0, 0, 0.1415787733316046, 1.233568521239221, 3], \"45\": [1, 2, 6, 52, 0, 0.025544173047426025, 0.20933585506678015, 2.917246137321693, 2], \"18\": [2, 3, 5, 28, 0.042650387350370085, 0.09352605801082346, 0.2408507727676819, 2.255525456740853, 1], \"39\": [8, 10, 16, 78, 0.34433190055061186, 0.4960738034571883, 0.9723638499359064, 3.6907563044447116, 1], \"90\": [2, 2, 3, 14, 0.050707947552847715, 0.050707947552847715, 0.1106779524786114, 1.2665995512026944, 1], \"77\": [1, 4, 5, 28, 0, 0.2537182755923006, 0.37243458243168254, 2.718107757146252, 2], \"221\": [0, 0, 3, 34, 0, 0, 0.24783616390458124, 3.6142905971228636, 3], \"540\": [1, 2, 5, 41, 0, 0.07197349962508924, 0.38282263135840455, 3.476983050173599, 2], \"166\": [0, 0, 4, 22, 0, 0, 0.8520882887098363, 3.7298358933776044, 3], \"158\": [0, 0, 2, 17, 0, 0, 0.7777045685880084, 4.454347296253507, 3], \"115\": [1, 2, 2, 7, 0, 0.11122563511022437, 0.11122563511022437, 0.8924800831804365, 2], \"284\": [1, 1, 2, 10, 0, 0, 0.5543107357057295, 2.9713636825370333, 3], \"456\": [2, 2, 4, 18, 0.13862989729590636, 0.13862989729590636, 0.4667455393261779, 2.568374995981376, 1], \"319\": [0, 2, 2, 24, 0, 0.2578291093020998, 0.2578291093020998, 3.7693745481331207, 2], \"341\": [0, 0, 3, 22, 0, 0, 0.3811160790978779, 3.256112016631933, 3], \"250\": [0, 0, 2, 5, 0, 0, 0.6157605169445252, 1.843584537092641, 3], \"611\": [0, 0, 2, 15, 0, 0, 0.31760375231683013, 3.092316068474225, 3], \"758\": [4, 4, 7, 35, 0.4795730802618863, 0.4795730802618863, 1.0593915755148284, 3.873601972445429, 1], \"817\": [6, 7, 12, 89, 0.72365063485336, 0.8942200477548448, 1.657806580285385, 5.458128355596226, 1], \"47\": [0, 0, 0, 13, 0, 0, 0, 1.4770487243883548, 4], \"213\": [2, 3, 5, 16, 0.05945286991347217, 0.12911891544132809, 0.32414542414055436, 1.5933832298394275, 1], \"333\": [1, 1, 3, 12, 0, 0, 1.252762968495368, 3.713572066704308, 3], \"452\": [0, 0, 2, 10, 0, 0, 0.04535924939893056, 0.7701511871733193, 3], \"513\": [0, 0, 0, 2, 0, 0, 0, 0.13862989729590636, 4], \"631\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"651\": [0, 0, 0, 7, 0, 0, 0, 3.58351893845611, 4], \"654\": [0, 0, 0, 3, 0, 0, 0, 0.4602156228795727, 4], \"672\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"823\": [0, 1, 1, 7, 0, 0, 0, 2.607426785728653, 4], \"902\": [0, 0, 0, 5, 0, 0, 0, 2.0724728723637424, 4], \"784\": [2, 2, 2, 14, 0.07522342123758753, 0.07522342123758753, 0.07522342123758753, 1.5744581935380735, 1], \"922\": [0, 0, 2, 12, 0, 0, 0.41397579777607296, 2.9684401312659836, 3], \"739\": [3, 4, 8, 32, 0.08376988306545878, 0.1443945048818936, 0.4832648241871193, 2.3925855258101403, 1], \"16\": [1, 1, 3, 24, 0, 0, 0.11536465479210183, 2.1777117631126375, 3], \"199\": [2, 2, 6, 51, 0.02730545069026746, 0.02730545069026746, 0.22245127022044875, 2.9444389791664403, 1], \"355\": [1, 1, 3, 10, 0, 0, 0.34967374847974886, 1.731861327646986, 3], \"729\": [2, 2, 3, 17, 0.2646925542270822, 0.2646925542270822, 0.5198754592859085, 3.130872220246314, 1], \"761\": [0, 0, 2, 21, 0, 0, 0.3856624808119847, 3.9680696904154042, 3], \"937\": [0, 0, 0, 6, 0, 0, 0, 0.772442783230483, 4], \"111\": [1, 2, 2, 12, 0, 0.06080900459560568, 0.06080900459560568, 1.1808228883143828, 2], \"803\": [0, 0, 2, 11, 0, 0, 0.0790925888372161, 1.2498191924513546, 3], \"621\": [2, 3, 7, 41, 0.032897703507059034, 0.07255397028698765, 0.3433762040512237, 2.711722380157845, 1], \"541\": [0, 0, 2, 5, 0, 0, 0.17135825199668508, 0.7739085372044038, 3], \"503\": [1, 1, 2, 13, 0, 0, 0.10084103435079068, 1.7016083722337574, 3], \"860\": [0, 0, 6, 45, 0, 0, 1.0594613811062845, 4.673024538753348, 3], \"684\": [0, 0, 2, 8, 0, 0, 0.1391128024627178, 1.2202573980904365, 3], \"874\": [0, 1, 5, 23, 0, 0, 0.5262190008387144, 2.7507098412969624, 3], \"893\": [1, 3, 7, 42, 0, 0.23607730009877803, 0.8959672589022409, 3.973858171650326, 2], \"941\": [1, 1, 2, 12, 0, 0, 0.12879510820557039, 1.7831312880047168, 3], \"744\": [0, 0, 2, 13, 0, 0, 0.10763066419236544, 1.7580538231265137, 3], \"147\": [2, 2, 4, 14, 0.10508346897368827, 0.10508346897368827, 0.366872083420486, 1.8608754479415561, 1], \"377\": [0, 0, 2, 13, 0, 0, 0.18658595558041216, 2.268683541318364, 3], \"652\": [1, 1, 2, 15, 0, 0, 0.23922968906583414, 2.7851780618233444, 3], \"865\": [2, 2, 5, 23, 0.38946476676172326, 0.38946476676172326, 1.3803241941333868, 4.158510990332123, 1], \"493\": [0, 0, 2, 19, 0, 0, 0.11918851726511835, 2.519634161249494, 3], \"496\": [1, 3, 7, 20, 0, 0.13274243794849044, 0.5726000760164105, 1.9891267505550956, 2], \"778\": [2, 2, 2, 34, 0.10734155493596446, 0.10734155493596446, 0.10734155493596446, 3.518917462866064, 1], \"316\": [2, 3, 5, 19, 0.21357410029805904, 0.42899560551835847, 0.9115174531214973, 3.112986068658196, 1], \"485\": [1, 1, 2, 12, 0, 0, 0.02785695450296621, 0.7015860492058099, 3], \"986\": [1, 1, 2, 7, 0, 0, 0.6257058997644127, 2.455492764581707, 3], \"185\": [2, 2, 2, 8, 0.08515780834030685, 0.08515780834030685, 0.08515780834030685, 0.8846853924588239, 1], \"838\": [1, 1, 4, 27, 0, 0, 0.24625998517191192, 2.6190377752767766, 3], \"83\": [0, 1, 4, 37, 0, 0, 0.12506518057148253, 2.5176024605102216, 3], \"1012\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"100\": [2, 2, 4, 26, 0.02139118998131756, 0.02139118998131756, 0.08294908298075093, 1.537738679349406, 1], \"812\": [0, 0, 3, 15, 0, 0, 0.16460422889798626, 1.6998563350428681, 3], \"80\": [1, 2, 3, 18, 0, 0.02177549295653461, 0.04834453720424788, 1.023586632683812, 2], \"1013\": [6, 7, 10, 46, 0.24991141156531438, 0.3267359432479511, 0.5814575298504714, 2.872869322246392, 1], \"912\": [0, 1, 7, 31, 0, 0, 0.8403614163905465, 3.2896448957564077, 3], \"782\": [0, 1, 2, 11, 0, 0, 0.05236798551731598, 0.9655927977696362, 3], \"1036\": [2, 3, 9, 78, 0.046412041764464576, 0.10155280044326445, 0.6739619398385966, 4.293967418890722, 1], \"120\": [0, 1, 2, 17, 0, 0, 0.04470017891790688, 1.4592792538763795, 3], \"1048\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"721\": [1, 1, 2, 24, 0, 0, 0.11607217125275403, 2.92975682309189, 3], \"1050\": [0, 0, 2, 18, 0, 0, 0.17666954336260812, 2.8125407732514964, 3], \"724\": [0, 0, 3, 26, 0, 0, 0.10438204199854623, 2.226142254975799, 3], \"1062\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"35\": [0, 0, 6, 26, 0, 0, 0.1356990053194918, 1.3161690071032506, 3], \"317\": [0, 0, 3, 17, 0, 0, 0.5138062519041285, 3.116495937348512, 3], \"816\": [0, 0, 4, 17, 0, 0, 0.44558510189758965, 2.4105737310581414, 3], \"1014\": [0, 0, 2, 28, 0, 0, 0.05511036271051877, 2.4936033787107283, 3], \"1072\": [0, 0, 0, 6, 0, 0, 0, 1.0986122886681096, 4], \"498\": [0, 0, 6, 28, 0, 0, 0.9088557533866369, 3.504456926393296, 3], \"733\": [0, 4, 8, 53, 0, 0.2574120081490246, 0.7767122589059875, 3.9615992301647136, 2], \"792\": [4, 6, 12, 45, 0.07980304320264689, 0.17135825199668508, 0.5582797823926804, 2.443565309631559, 1], \"1021\": [1, 2, 2, 29, 0, 0.4737843520856416, 0.4737843520856416, 4.855339177361764, 2], \"1087\": [1, 4, 7, 20, 0, 1.0586069540544105, 1.911718784307034, 3.872425750803787, 2], \"354\": [0, 2, 3, 19, 0, 0.325422400434628, 0.6234672599219555, 3.575473842771278, 2], \"698\": [0, 0, 3, 31, 0, 0, 0.42285685082003355, 4.046533450787833, 3], \"931\": [0, 1, 3, 23, 0, 0, 0.661398482245365, 4.027210081903708, 3], \"957\": [0, 0, 2, 9, 0, 0, 0.09983345855568045, 1.139749194228599, 3], \"1019\": [0, 0, 4, 26, 0, 0, 0.1356861992422396, 1.9656949670710766, 3], \"1023\": [0, 1, 5, 21, 0, 0, 0.3995537608451072, 2.268412520244817, 3], \"948\": [0, 3, 7, 15, 0, 0.11840357554598269, 0.5213842103264852, 1.4212893557372317, 2], \"990\": [1, 1, 3, 12, 0, 0, 0.4269293467764643, 2.25346943206931, 3], \"1139\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"1143\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"30\": [1, 1, 3, 20, 0, 0, 0.10933207939464377, 1.81397555270741, 3], \"921\": [0, 0, 2, 9, 0, 0, 0.8109302162163288, 3.2700441114426, 3], \"1029\": [1, 1, 5, 34, 0, 0, 0.42578104326853133, 3.2403838370171067, 3], \"509\": [0, 0, 3, 22, 0, 0, 1.7047480922384253, 5.493061443340548, 3], \"211\": [2, 2, 4, 21, 0.09835932019884275, 0.09835932019884275, 0.3460241093921994, 2.5173213084722823, 1], \"886\": [1, 3, 3, 8, 0, 0.6279612006752497, 0.6279612006752497, 1.9759670564881233, 2], \"96\": [1, 1, 3, 22, 0, 0, 0.26007680635989205, 2.831659040265547, 3], \"1170\": [0, 1, 1, 6, 0, 0, 0, 1.2429300475791292, 4], \"1183\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1201\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1202\": [0, 0, 0, 7, 0, 0, 0, 4.816241156068032, 4], \"1128\": [1, 3, 4, 18, 0, 0.20812125379246896, 0.34451909789108437, 2.233133063594624, 2], \"312\": [0, 0, 2, 19, 0, 0, 0.19478832555908462, 3.0159564860166173, 3], \"1203\": [0, 0, 0, 8, 0, 0, 0, 1.785278565143972, 4], \"768\": [0, 1, 2, 10, 0, 0, 0.1656671218888174, 1.7055667578592613, 3], \"1230\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"324\": [0, 0, 2, 7, 0, 0, 0.28978070910870213, 1.6326947745983675, 3], \"278\": [1, 1, 7, 26, 0, 0, 0.5408249890826854, 2.3885344127891206, 3], \"779\": [0, 0, 5, 21, 0, 0, 1.9597512004671847, 4.687312002311547, 3], \"1096\": [1, 1, 4, 11, 0, 0, 1.589732841354768, 3.418126443762603, 3], \"1095\": [0, 0, 3, 6, 0, 0, 0.8109302162163288, 1.791759469228055, 3], \"862\": [1, 1, 3, 12, 0, 0, 0.6103748942760823, 2.67124401611116, 3], \"1337\": [0, 0, 0, 3, 0, 0, 0, 1.7047480922384253, 4], \"472\": [1, 1, 4, 11, 0, 0, 0.9873866535578852, 2.620081428156253, 3], \"556\": [0, 0, 6, 23, 0, 0, 1.2833463918674481, 3.672072335797555, 3], \"917\": [1, 1, 2, 6, 0, 0, 0.18924199963852842, 1.0560526742493137, 3], \"1348\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"653\": [0, 0, 2, 18, 0, 0, 0.15656906069153992, 2.6898056813596725, 3], \"774\": [0, 0, 2, 6, 0, 0, 0.23361485118150516, 1.2144441041932312, 3], \"789\": [0, 0, 3, 17, 0, 0, 0.18687737332981533, 2.027907891564653, 3], \"1146\": [2, 2, 2, 13, 0.023725905324836427, 0.023725905324836427, 0.023725905324836427, 0.7003242448603089, 1], \"1289\": [0, 1, 2, 13, 0, 0, 0.6576404921030354, 3.696409174022044, 3], \"1355\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1356\": [1, 1, 3, 9, 0, 0, 1.33828514193353, 3.2700441114426, 3], \"315\": [0, 0, 2, 27, 0, 0, 0.18400364297693944, 3.6327899874628926, 3], \"1363\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1261\": [1, 1, 2, 11, 0, 0, 0.7777045685880084, 3.599726748682963, 3], \"462\": [1, 1, 3, 22, 0, 0, 0.7472144018302211, 4.106817886193539, 3], \"1250\": [3, 3, 6, 29, 0.08820601831269737, 0.08820601831269737, 0.3139727676834986, 2.26351190994127, 1], \"1360\": [1, 4, 10, 93, 0, 0.8520882887098363, 2.2269175568625714, 6.481792125033808, 2], \"1122\": [0, 0, 2, 15, 0, 0, 0.7621400520468967, 4.178773241838892, 3], \"1300\": [0, 1, 3, 9, 0, 0, 0.6146755651184501, 2.156577270562063, 3], \"945\": [1, 1, 2, 21, 0, 0, 0.1263507915496621, 2.7630739025984425, 3], \"1171\": [0, 1, 2, 19, 0, 0, 0.08004270767353643, 2.1425141451349106, 3], \"1420\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1426\": [0, 0, 26, 89, 0, 0, 3.5838300895739654, 6.143106225168936, 3], \"1428\": [0, 0, 2, 13, 0, 0, 0.3393540829961018, 2.894292233374129, 3], \"1101\": [0, 0, 2, 11, 0, 0, 0.27193371548364176, 2.3469009767685565, 3], \"1441\": [0, 0, 0, 2, 0, 0, 0, 0.2664662333015083, 4], \"1449\": [0, 0, 0, 3, 0, 0, 0, 1.3156767939059373, 4], \"1046\": [1, 1, 3, 18, 0, 0, 0.09372098598555424, 1.5122919875449878, 3], \"1465\": [0, 0, 0, 3, 0, 0, 0, 1.1786549963416462, 4], \"1473\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1142\": [2, 3, 3, 25, 0.3746934494414107, 0.7044467358138786, 0.7044467358138786, 4.27698172577266, 1], \"855\": [2, 2, 2, 6, 0.6257058997644127, 0.6257058997644127, 0.6257058997644127, 2.1777117631126375, 1], \"1298\": [1, 2, 3, 11, 0, 0.3643378166843015, 0.6876375247489758, 2.660028971995655, 2], \"1446\": [1, 1, 3, 37, 0, 0, 1.084013489246957, 5.66942931034339, 3], \"1487\": [0, 0, 24, 50, 0, 0, 4.0107886883245145, 6.191584619532638, 3], \"971\": [0, 2, 6, 26, 0, 0.30538164955118186, 1.4384801142904609, 4.116711592368997, 2], \"1491\": [0, 0, 1, 10, 0, 0, 0, 3.9318256327243257, 4], \"883\": [1, 3, 3, 10, 0, 0.1980128865886302, 0.1980128865886302, 1.2334607373565794, 2], \"1504\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"879\": [0, 0, 4, 16, 0, 0, 0.8472978603872036, 3.106080330722856, 3], \"1510\": [0, 0, 0, 2, 0, 0, 0, 0.2856138193877219, 4], \"1516\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1532\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1544\": [1, 1, 7, 236, 0, 0, 0.41809685501406496, 6.273572620303854, 3], \"783\": [1, 2, 3, 6, 0, 0.03899129396518369, 0.08568511684827633, 0.3059046894710509, 2], \"943\": [2, 2, 3, 10, 0.19197498849459727, 0.19197498849459727, 0.38946476676172326, 1.8391208816311395, 1], \"1569\": [1, 1, 1, 2, 0, 0, 0, 0.8873031950009028, 4], \"399\": [1, 2, 6, 20, 0, 0.1217306453046817, 0.772442783230483, 2.635119860718093, 2], \"1476\": [0, 0, 2, 16, 0, 0, 0.11675051104219424, 2.1889343744157457, 3], \"1520\": [1, 1, 11, 20, 0, 0, 3.5278730866638046, 4.933977655204873, 3], \"1580\": [0, 0, 1, 12, 0, 0, 0, 1.101397805789536, 4], \"1056\": [1, 1, 2, 8, 0, 0, 0.07862594238342736, 0.8367250746747901, 3], \"1609\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1617\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1618\": [0, 0, 0, 3, 0, 0, 0, 1.791759469228055, 4], \"1414\": [0, 0, 2, 13, 0, 0, 0.3308542443169896, 2.8661147802506046, 3], \"1630\": [0, 0, 0, 12, 0, 0, 0, 2.2858819518027906, 4], \"1249\": [1, 1, 3, 12, 0, 0, 0.5858181603294468, 2.6205560044363465, 3], \"1587\": [0, 1, 2, 4, 0, 0, 0.4978384282391795, 1.2755429968271879, 3], \"1642\": [0, 0, 0, 3, 0, 0, 0, 1.0296194171811583, 4], \"1646\": [0, 0, 1, 11, 0, 0, 0, 1.2282271728073286, 4], \"1651\": [0, 1, 1, 4, 0, 0, 0, 0.3475424603754599, 4], \"1444\": [0, 1, 10, 19, 0, 0, 1.0528027526368156, 2.045765131924923, 3], \"1678\": [0, 0, 1, 8, 0, 0, 0, 3.361280774256713, 4], \"1698\": [0, 0, 0, 18, 0, 0, 0, 4.406719247264253, 4], \"1700\": [1, 1, 13, 45, 0, 0, 3.1612356540445705, 5.684815937861818, 3], \"1097\": [0, 0, 2, 9, 0, 0, 0.8109302162163288, 3.2700441114426, 3], \"1125\": [0, 1, 2, 9, 0, 0, 0.2856138193877219, 2.040468731680326, 3], \"1400\": [0, 0, 6, 30, 0, 0, 1.71505156060815, 4.744271480904736, 3], \"1738\": [0, 0, 20, 49, 0, 0, 3.6115833524264698, 5.582842618260188, 3], \"1742\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1743\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1492\": [1, 4, 4, 7, 0, 0.7898234807953135, 0.7898234807953135, 1.5441973905656994, 2], \"1756\": [0, 0, 7, 21, 0, 0, 2.6026153863506494, 4.844187086458591, 3], \"988\": [0, 2, 3, 5, 0, 0.39730179746900346, 0.7407752295491999, 1.3984157216522355, 2], \"1177\": [1, 1, 2, 4, 0, 0, 0.4054651081081644, 1.0986122886681096, 3], \"1766\": [0, 0, 0, 4, 0, 0, 0, 1.9676501356917193, 4], \"1770\": [0, 1, 13, 98, 0, 0, 2.760679965499044, 6.639809597966717, 3], \"588\": [1, 2, 4, 39, 0, 0.4096756406445079, 1.107015699464489, 5.265441042093592, 2], \"1611\": [0, 0, 3, 9, 0, 0, 1.83961549040569, 3.8845913509674754, 3], \"1780\": [0, 0, 1, 7, 0, 0, 0, 1.8089715981091765, 4], \"1320\": [2, 5, 6, 21, 0.1874629562943733, 0.8279664033688967, 1.0493065276839557, 3.1668226107784454, 1], \"1790\": [1, 1, 2, 18, 0, 0, 0.11675051104219424, 2.4007058423831795, 3], \"1799\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1802\": [0, 0, 0, 3, 0, 0, 0, 0.34560472018448546, 4], \"1805\": [0, 0, 1, 5, 0, 0, 0, 3.258096538021482, 4], \"726\": [1, 1, 2, 7, 0, 0, 0.9088557533866369, 2.9522060085041, 3], \"1402\": [0, 1, 2, 12, 0, 0, 0.4321333551903257, 3.0184453407932246, 3], \"747\": [2, 2, 4, 22, 0.04357988070402507, 0.04357988070402507, 0.16396554411604508, 1.8546959282391104, 1], \"337\": [0, 1, 3, 12, 0, 0, 0.4396392879207579, 2.2858819518027906, 3], \"1603\": [1, 2, 2, 23, 0, 0.05320403606346461, 0.05320403606346461, 2.1073941950803676, 2], \"1873\": [0, 0, 0, 8, 0, 0, 0, 2.1332027185712885, 4], \"1117\": [0, 0, 2, 6, 0, 0, 0.6931471805599453, 2.302585092994046, 3], \"1297\": [0, 2, 4, 11, 0, 0.11279549414534437, 0.39042723074362384, 1.5286486575067795, 2], \"1397\": [0, 0, 2, 9, 0, 0, 0.1529693447814272, 1.4695106671409688, 3], \"1762\": [2, 3, 5, 9, 0.18658595558041216, 0.37948962170490375, 0.8250747236024935, 1.6397432619294294, 1], \"400\": [2, 2, 2, 4, 0.29626581614317243, 0.29626581614317243, 0.29626581614317243, 0.8668106746107854, 1], \"1916\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1093\": [0, 0, 2, 6, 0, 0, 0.44183275227903923, 1.791759469228055, 3], \"1582\": [1, 1, 2, 8, 0, 0, 0.18485641239714268, 1.446620341751487, 3], \"1753\": [0, 2, 3, 8, 0, 0.17985546429876115, 0.36696662997527996, 1.4237609789600683, 2], \"1929\": [0, 1, 1, 3, 0, 0, 0, 1.1291490125281913, 4], \"871\": [0, 0, 2, 6, 0, 0, 0.06495789627477239, 0.47251724598605155, 3], \"1649\": [0, 0, 2, 5, 0, 0, 1.209837923778334, 2.7540353143440335, 3], \"1936\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1254\": [1, 1, 2, 8, 0, 0, 0.17745536714278173, 1.4126431908166421, 3], \"1950\": [0, 3, 39, 159, 0, 0.32423966818557853, 3.7696479315748643, 6.772937970385718, 2], \"1442\": [0, 0, 2, 7, 0, 0, 0.18400364297693944, 1.2455218072388086, 3], \"1982\": [1, 1, 3, 8, 0, 0, 1.7047480922384253, 3.4965075614664802, 3], \"605\": [2, 2, 2, 9, 0.03025949476311255, 0.03025949476311255, 0.03025949476311255, 0.4837338220576375, 1], \"1983\": [0, 1, 2, 7, 0, 0, 0.3513978868378886, 1.8177349556313156, 3], \"1901\": [0, 0, 7, 9, 0, 0, 2.999346814490059, 3.589539426237693, 3], \"473\": [0, 4, 4, 10, 0, 1.1700712526502546, 1.1700712526502546, 2.700615222614692, 2], \"2016\": [1, 1, 1, 2, 0, 0, 0, 0.6931471805599453, 4], \"192\": [0, 1, 2, 5, 0, 0, 0.6931471805599453, 1.9810014688665833, 3], \"1909\": [2, 2, 2, 7, 0.12438371968773553, 0.12438371968773553, 0.12438371968773553, 0.9641343744395563, 1], \"465\": [3, 3, 3, 6, 0.6019569424953487, 0.6019569424953487, 0.6019569424953487, 1.4592548862171357, 1], \"2033\": [1, 1, 2, 2, 0, 0, 1.349926716949016, 1.349926716949016, 3], \"1451\": [0, 2, 4, 8, 0, 0.6157605169445252, 1.4825711915553106, 2.6821866905122906, 2], \"1648\": [0, 0, 4, 7, 0, 0, 0.7737512129745747, 1.5209656148047959, 3], \"1708\": [1, 1, 2, 5, 0, 0, 0.18067002875548166, 0.8054144824310264, 3], \"718\": [1, 1, 2, 6, 0, 0, 0.322773392263051, 1.4880770554298328, 3], \"2076\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1016\": [1, 3, 5, 15, 0, 0.5742859776832164, 1.1490431422950016, 3.0153658534319674, 2], \"1078\": [1, 2, 3, 6, 0, 0.07893642545877254, 0.16957814342550975, 0.5534365715694646, 2], \"1304\": [0, 2, 26, 103, 0, 0.3483066942682158, 3.85272410917612, 6.799800227914019, 2], \"1966\": [2, 2, 4, 6, 0.1578069910303688, 0.1578069910303688, 0.5210297939402324, 0.9315582040049435, 1], \"2083\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1831\": [0, 0, 2, 3, 0, 0, 1.2992829841302609, 1.9459101490553132, 3], \"1116\": [2, 2, 2, 6, 0.14208251361377278, 0.14208251361377278, 0.14208251361377278, 0.8645955889780826, 1], \"2121\": [1, 2, 3, 8, 0, 0.0840831172105414, 0.18012616623051897, 0.8769296579935747, 2], \"633\": [1, 1, 2, 4, 0, 0, 0.29849298855599654, 0.8718389693033213, 3], \"1032\": [2, 3, 4, 8, 0.5245244681241525, 0.9367692632176957, 1.3240520522426698, 2.4877760922159533, 1], \"519\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2031\": [0, 0, 2, 9, 0, 0, 0.680877087968131, 3.0328400618690665, 3], \"2142\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2155\": [2, 3, 7, 14, 0.5175824062288705, 0.9264088620397397, 2.2164113392659868, 3.532820174407118, 1], \"2082\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"583\": [0, 0, 2, 5, 0, 0, 0.2363887780642304, 0.9808292530117262, 3], \"1674\": [0, 0, 2, 4, 0, 0, 0.6257058997644127, 1.499234772300486, 3], \"2117\": [2, 2, 3, 4, 0.538996500732687, 0.538996500732687, 0.9582549309731873, 1.349926716949016, 1], \"1396\": [0, 0, 3, 7, 0, 0, 1.2939210409888755, 2.735131159704881, 3], \"2242\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2247\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2243\": [0, 1, 2, 2, 0, 0, 0.41397579777607296, 0.41397579777607296, 3], \"2246\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1007\": [1, 1, 4, 7, 0, 0, 1.363304842895192, 2.2934526094307732, 3], \"2217\": [0, 0, 4, 7, 0, 0, 1.349926716949016, 2.277267285009756, 3], \"1883\": [1, 1, 2, 4, 0, 0, 1.0986122886681096, 2.1972245773362196, 3], \"2299\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"808\": [0, 1, 2, 4, 0, 0, 0.33647223662121295, 0.9555114450274365, 3], \"1900\": [0, 0, 2, 4, 0, 0, 1.0663514264498883, 2.1539745935424026, 3], \"2308\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2310\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"1086\": [1, 1, 3, 7, 0, 0, 0.35667494393873234, 1.2039728043259361, 3], \"2162\": [0, 1, 8, 12, 0, 0, 1.9594238682220362, 2.6888188391743224, 3], \"52\": [1, 1, 2, 9, 0, 0, 0.0749414212921187, 0.9461894710417884, 3], \"608\": [1, 1, 2, 3, 0, 0, 0.3393540829961018, 0.6466271649250525, 3], \"833\": [0, 1, 3, 3, 0, 0, 0.5858181603294468, 0.5858181603294468, 3], \"1386\": [0, 1, 2, 3, 0, 0, 0.680877087968131, 1.1616252564968437, 3], \"2364\": [2, 2, 8, 11, 0.9808292530117262, 0.9808292530117262, 3.2147935043769276, 3.9399623741173873, 1], \"1701\": [0, 0, 2, 2, 0, 0, 0.7777045685880084, 0.7777045685880084, 3], \"1706\": [0, 1, 5, 8, 0, 0, 0.8740711130872619, 1.5206982780123144, 3], \"2292\": [0, 0, 2, 2, 0, 0, 0.27193371548364176, 0.27193371548364176, 3], \"2337\": [0, 1, 9, 12, 0, 0, 1.6868014490475884, 2.1777117631126375, 3], \"274\": [1, 2, 6, 9, 0, 0.046737477851689815, 0.3581093214258754, 0.6774747681523134, 2], \"1669\": [0, 0, 2, 9, 0, 0, 0.38193461069797024, 2.343593116721423, 3], \"854\": [0, 0, 2, 2, 0, 0, 0.17135825199668508, 0.17135825199668508, 3], \"2130\": [1, 1, 2, 2, 0, 0, 0.7472144018302211, 0.7472144018302211, 3], \"2220\": [1, 1, 4, 6, 0, 0, 0.9940394847485328, 1.574802415771344, 3], \"1833\": [1, 1, 2, 6, 0, 0, 0.04132819549284601, 0.32190002976212223, 3], \"1714\": [0, 0, 2, 2, 0, 0, 0.7328875092094594, 0.7328875092094594, 3], \"2191\": [1, 1, 2, 2, 0, 0, 1.4663370687934272, 1.4663370687934272, 3], \"1915\": [1, 1, 2, 2, 0, 0, 0.3643378166843015, 0.3643378166843015, 3], \"1308\": [0, 0, 2, 2, 0, 0, 0.680877087968131, 0.680877087968131, 3], \"2255\": [0, 0, 2, 2, 0, 0, 0.7328875092094594, 0.7328875092094594, 3], \"2418\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2453\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1951\": [0, 1, 2, 8, 0, 0, 0.2876820724517809, 1.8458266904983307, 3], \"1894\": [4, 7, 8, 26, 0.08479653666007693, 0.23981791745657918, 0.3030501026800949, 1.555813071175463, 1], \"900\": [0, 0, 2, 3, 0, 0, 0.7191226669632059, 1.2144441041932312, 3], \"2461\": [0, 1, 2, 5, 0, 0, 0.2124355370417375, 0.9079722049990643, 3], \"2475\": [5, 6, 6, 7, 1.2181574393178924, 1.4880770554298328, 1.4880770554298328, 1.7346010553881064, 1], \"2471\": [1, 1, 2, 3, 0, 0, 0.3452699473247421, 0.6563976383512038, 3], \"2487\": [0, 1, 4, 4, 0, 0, 0.39042723074362384, 0.39042723074362384, 3], \"506\": [0, 1, 2, 4, 0, 0, 0.19671029424605424, 0.6257058997644127, 3], \"2524\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"864\": [0, 1, 2, 2, 0, 0, 1.1700712526502546, 1.1700712526502546, 3], \"2176\": [1, 1, 2, 3, 0, 0, 0.5705448584676129, 1.0045833390198333, 3], \"2593\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"181\": [0, 1, 2, 12, 0, 0, 0.05518641556729086, 1.1126970285498485, 3], \"2568\": [2, 2, 3, 5, 0.4013413909243023, 0.4013413909243023, 0.7472144018302211, 1.4076692207046242, 1], \"2634\": [0, 0, 0, 2, 0, 0, 0, 0.07579383936953364, 4], \"2693\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2674\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1393\": [1, 2, 2, 6, 0, 0.9088557533866369, 0.9088557533866369, 2.662587827025453, 2], \"2439\": [0, 2, 2, 2, 0, 0.538996500732687, 0.538996500732687, 0.538996500732687, 2], \"1585\": [2, 3, 3, 4, 0.12247703235966204, 0.25708853309999324, 0.25708853309999324, 0.41948151008170015, 1], \"2473\": [0, 2, 2, 4, 0, 0.7191226669632059, 0.7191226669632059, 1.6506808709681495, 2], \"2823\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2236\": [1, 2, 2, 3, 0, 0.04401150329993394, 0.04401150329993394, 0.09643440701660581, 2], \"1908\": [2, 5, 5, 13, 0.01807550342226968, 0.10795632283985228, 0.10795632283985228, 0.5713375813137791, 1], \"2383\": [2, 4, 4, 12, 0.06669137449867221, 0.24362208265775043, 0.24362208265775043, 1.2478246868547855, 1], \"2720\": [0, 2, 2, 4, 0, 0.5705448584676129, 0.5705448584676129, 1.4053425560905852, 2], \"2384\": [0, 2, 2, 2, 0, 0.10648348040245009, 0.10648348040245009, 0.10648348040245009, 2], \"2809\": [6, 8, 8, 23, 0.2921489894831175, 0.4720044537818786, 0.4720044537818786, 1.7894004211889918, 1], \"2902\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1801\": [1, 3, 3, 3, 0, 0.1100008952143285, 0.1100008952143285, 0.1100008952143285, 2], \"3092\": [2, 15, 15, 19, 0.42285685082003355, 2.255338897108647, 3.315737178040718, 3.8815637979434374, 1], \"3111\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2334\": [2, 2, 2, 2, 0.4795730802618863, 0.4795730802618863, 0.4795730802618863, 0.4795730802618863, 1], \"570\": [2, 2, 2, 5, 0.02701041988276247, 0.02701041988276247, 0.02701041988276247, 0.157956862141494, 1], \"889\": [2, 2, 2, 3, 0.245122458032985, 0.245122458032985, 0.245122458032985, 0.48550781578170077, 1], \"2756\": [2, 2, 2, 2, 0.22567199766756846, 0.22567199766756846, 0.22567199766756846, 0.22567199766756846, 1], \"3228\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"3236\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3304\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3315\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"1549\": [2, 2, 2, 4, 0.39730179746900346, 0.39730179746900346, 0.39730179746900346, 1.0822184788924334, 1], \"3260\": [2, 2, 2, 2, 0.7939518796819109, 0.7939518796819109, 0.7939518796819109, 0.7939518796819109, 1], \"2350\": [2, 2, 2, 2, 0.33647223662121295, 0.33647223662121295, 0.33647223662121295, 0.33647223662121295, 1], \"3318\": [2, 2, 2, 4, 0.6061358035703156, 0.6061358035703156, 0.6061358035703156, 1.4663370687934272, 1], \"3000\": [2, 2, 2, 2, 0.5465437063680699, 0.5465437063680699, 0.5465437063680699, 0.5465437063680699, 1], \"3320\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3062\": [2, 2, 2, 5, 0.06570507304885383, 0.06570507304885383, 0.06570507304885383, 0.35378452281561945, 1], \"3239\": [2, 2, 2, 2, 0.4572413776318843, 0.4572413776318843, 0.4572413776318843, 0.4572413776318843, 1]}"
}