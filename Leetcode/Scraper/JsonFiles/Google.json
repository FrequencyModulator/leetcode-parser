{
  "name": "Google",
  "slug": "google",
  "questions": [
    {
      "status": "ac",
      "questionId": "1",
      "questionFrontendId": "1",
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "acRate": "52.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2",
      "questionFrontendId": "2",
      "title": "Add Two Numbers",
      "titleSlug": "add-two-numbers",
      "acRate": "42.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "3",
      "questionFrontendId": "3",
      "title": "Longest Substring Without Repeating Characters",
      "titleSlug": "longest-substring-without-repeating-characters",
      "acRate": "34.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "4",
      "questionFrontendId": "4",
      "title": "Median of Two Sorted Arrays",
      "titleSlug": "median-of-two-sorted-arrays",
      "acRate": "39.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "5",
      "questionFrontendId": "5",
      "title": "Longest Palindromic Substring",
      "titleSlug": "longest-palindromic-substring",
      "acRate": "33.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "6",
      "questionFrontendId": "6",
      "title": "Zigzag Conversion",
      "titleSlug": "zigzag-conversion",
      "acRate": "47.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "7",
      "questionFrontendId": "7",
      "title": "Reverse Integer",
      "titleSlug": "reverse-integer",
      "acRate": "28.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "8",
      "questionFrontendId": "8",
      "title": "String to Integer (atoi)",
      "titleSlug": "string-to-integer-atoi",
      "acRate": "17.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "9",
      "questionFrontendId": "9",
      "title": "Palindrome Number",
      "titleSlug": "palindrome-number",
      "acRate": "56.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "10",
      "questionFrontendId": "10",
      "title": "Regular Expression Matching",
      "titleSlug": "regular-expression-matching",
      "acRate": "28.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "11",
      "questionFrontendId": "11",
      "title": "Container With Most Water",
      "titleSlug": "container-with-most-water",
      "acRate": "55.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "12",
      "questionFrontendId": "12",
      "title": "Integer to Roman",
      "titleSlug": "integer-to-roman",
      "acRate": "64.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "13",
      "questionFrontendId": "13",
      "title": "Roman to Integer",
      "titleSlug": "roman-to-integer",
      "acRate": "60.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "14",
      "questionFrontendId": "14",
      "title": "Longest Common Prefix",
      "titleSlug": "longest-common-prefix",
      "acRate": "42.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "15",
      "questionFrontendId": "15",
      "title": "3Sum",
      "titleSlug": "3sum",
      "acRate": "34.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "16",
      "questionFrontendId": "16",
      "title": "3Sum Closest",
      "titleSlug": "3sum-closest",
      "acRate": "45.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "17",
      "questionFrontendId": "17",
      "title": "Letter Combinations of a Phone Number",
      "titleSlug": "letter-combinations-of-a-phone-number",
      "acRate": "60.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "18",
      "questionFrontendId": "18",
      "title": "4Sum",
      "titleSlug": "4sum",
      "acRate": "36.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "19",
      "questionFrontendId": "19",
      "title": "Remove Nth Node From End of List",
      "titleSlug": "remove-nth-node-from-end-of-list",
      "acRate": "45.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "20",
      "questionFrontendId": "20",
      "title": "Valid Parentheses",
      "titleSlug": "valid-parentheses",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "21",
      "questionFrontendId": "21",
      "title": "Merge Two Sorted Lists",
      "titleSlug": "merge-two-sorted-lists",
      "acRate": "64.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "22",
      "questionFrontendId": "22",
      "title": "Generate Parentheses",
      "titleSlug": "generate-parentheses",
      "acRate": "74.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "23",
      "questionFrontendId": "23",
      "title": "Merge k Sorted Lists",
      "titleSlug": "merge-k-sorted-lists",
      "acRate": "52.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "24",
      "questionFrontendId": "24",
      "title": "Swap Nodes in Pairs",
      "titleSlug": "swap-nodes-in-pairs",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "25",
      "questionFrontendId": "25",
      "title": "Reverse Nodes in k-Group",
      "titleSlug": "reverse-nodes-in-k-group",
      "acRate": "58.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "26",
      "questionFrontendId": "26",
      "title": "Remove Duplicates from Sorted Array",
      "titleSlug": "remove-duplicates-from-sorted-array",
      "acRate": "55.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "27",
      "questionFrontendId": "27",
      "title": "Remove Element",
      "titleSlug": "remove-element",
      "acRate": "56.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "28",
      "questionFrontendId": "28",
      "title": "Find the Index of the First Occurrence in a String",
      "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
      "acRate": "42.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "29",
      "questionFrontendId": "29",
      "title": "Divide Two Integers",
      "titleSlug": "divide-two-integers",
      "acRate": "17.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "31",
      "questionFrontendId": "31",
      "title": "Next Permutation",
      "titleSlug": "next-permutation",
      "acRate": "39.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "32",
      "questionFrontendId": "32",
      "title": "Longest Valid Parentheses",
      "titleSlug": "longest-valid-parentheses",
      "acRate": "34.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "33",
      "questionFrontendId": "33",
      "title": "Search in Rotated Sorted Array",
      "titleSlug": "search-in-rotated-sorted-array",
      "acRate": "40.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "34",
      "questionFrontendId": "34",
      "title": "Find First and Last Position of Element in Sorted Array",
      "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
      "acRate": "44.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "35",
      "questionFrontendId": "35",
      "title": "Search Insert Position",
      "titleSlug": "search-insert-position",
      "acRate": "45.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "36",
      "questionFrontendId": "36",
      "title": "Valid Sudoku",
      "titleSlug": "valid-sudoku",
      "acRate": "59.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "37",
      "questionFrontendId": "37",
      "title": "Sudoku Solver",
      "titleSlug": "sudoku-solver",
      "acRate": "60.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "38",
      "questionFrontendId": "38",
      "title": "Count and Say",
      "titleSlug": "count-and-say",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "39",
      "questionFrontendId": "39",
      "title": "Combination Sum",
      "titleSlug": "combination-sum",
      "acRate": "71.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "40",
      "questionFrontendId": "40",
      "title": "Combination Sum II",
      "titleSlug": "combination-sum-ii",
      "acRate": "54.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "41",
      "questionFrontendId": "41",
      "title": "First Missing Positive",
      "titleSlug": "first-missing-positive",
      "acRate": "37.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "42",
      "questionFrontendId": "42",
      "title": "Trapping Rain Water",
      "titleSlug": "trapping-rain-water",
      "acRate": "60.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "43",
      "questionFrontendId": "43",
      "title": "Multiply Strings",
      "titleSlug": "multiply-strings",
      "acRate": "40.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "44",
      "questionFrontendId": "44",
      "title": "Wildcard Matching",
      "titleSlug": "wildcard-matching",
      "acRate": "27.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "45",
      "questionFrontendId": "45",
      "title": "Jump Game II",
      "titleSlug": "jump-game-ii",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "46",
      "questionFrontendId": "46",
      "title": "Permutations",
      "titleSlug": "permutations",
      "acRate": "78.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "47",
      "questionFrontendId": "47",
      "title": "Permutations II",
      "titleSlug": "permutations-ii",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "48",
      "questionFrontendId": "48",
      "title": "Rotate Image",
      "titleSlug": "rotate-image",
      "acRate": "74.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "49",
      "questionFrontendId": "49",
      "title": "Group Anagrams",
      "titleSlug": "group-anagrams",
      "acRate": "68.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "50",
      "questionFrontendId": "50",
      "title": "Pow(x, n)",
      "titleSlug": "powx-n",
      "acRate": "34.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "51",
      "questionFrontendId": "51",
      "title": "N-Queens",
      "titleSlug": "n-queens",
      "acRate": "67.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "52",
      "questionFrontendId": "52",
      "title": "N-Queens II",
      "titleSlug": "n-queens-ii",
      "acRate": "73.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "53",
      "questionFrontendId": "53",
      "title": "Maximum Subarray",
      "titleSlug": "maximum-subarray",
      "acRate": "50.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "54",
      "questionFrontendId": "54",
      "title": "Spiral Matrix",
      "titleSlug": "spiral-matrix",
      "acRate": "49.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "55",
      "questionFrontendId": "55",
      "title": "Jump Game",
      "titleSlug": "jump-game",
      "acRate": "38.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "56",
      "questionFrontendId": "56",
      "title": "Merge Intervals",
      "titleSlug": "merge-intervals",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "57",
      "questionFrontendId": "57",
      "title": "Insert Interval",
      "titleSlug": "insert-interval",
      "acRate": "41.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "58",
      "questionFrontendId": "58",
      "title": "Length of Last Word",
      "titleSlug": "length-of-last-word",
      "acRate": "49.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "60",
      "questionFrontendId": "60",
      "title": "Permutation Sequence",
      "titleSlug": "permutation-sequence",
      "acRate": "46.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "61",
      "questionFrontendId": "61",
      "title": "Rotate List",
      "titleSlug": "rotate-list",
      "acRate": "37.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "62",
      "questionFrontendId": "62",
      "title": "Unique Paths",
      "titleSlug": "unique-paths",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "63",
      "questionFrontendId": "63",
      "title": "Unique Paths II",
      "titleSlug": "unique-paths-ii",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "64",
      "questionFrontendId": "64",
      "title": "Minimum Path Sum",
      "titleSlug": "minimum-path-sum",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "66",
      "questionFrontendId": "66",
      "title": "Plus One",
      "titleSlug": "plus-one",
      "acRate": "45.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "67",
      "questionFrontendId": "67",
      "title": "Add Binary",
      "titleSlug": "add-binary",
      "acRate": "53.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "68",
      "questionFrontendId": "68",
      "title": "Text Justification",
      "titleSlug": "text-justification",
      "acRate": "43.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "69",
      "questionFrontendId": "69",
      "title": "Sqrt(x)",
      "titleSlug": "sqrtx",
      "acRate": "38.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "70",
      "questionFrontendId": "70",
      "title": "Climbing Stairs",
      "titleSlug": "climbing-stairs",
      "acRate": "52.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "71",
      "questionFrontendId": "71",
      "title": "Simplify Path",
      "titleSlug": "simplify-path",
      "acRate": "42.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "72",
      "questionFrontendId": "72",
      "title": "Edit Distance",
      "titleSlug": "edit-distance",
      "acRate": "56.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "73",
      "questionFrontendId": "73",
      "title": "Set Matrix Zeroes",
      "titleSlug": "set-matrix-zeroes",
      "acRate": "55.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "74",
      "questionFrontendId": "74",
      "title": "Search a 2D Matrix",
      "titleSlug": "search-a-2d-matrix",
      "acRate": "49.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "75",
      "questionFrontendId": "75",
      "title": "Sort Colors",
      "titleSlug": "sort-colors",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "76",
      "questionFrontendId": "76",
      "title": "Minimum Window Substring",
      "titleSlug": "minimum-window-substring",
      "acRate": "42.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "78",
      "questionFrontendId": "78",
      "title": "Subsets",
      "titleSlug": "subsets",
      "acRate": "77.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "79",
      "questionFrontendId": "79",
      "title": "Word Search",
      "titleSlug": "word-search",
      "acRate": "41.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "80",
      "questionFrontendId": "80",
      "title": "Remove Duplicates from Sorted Array II",
      "titleSlug": "remove-duplicates-from-sorted-array-ii",
      "acRate": "57.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "83",
      "questionFrontendId": "83",
      "title": "Remove Duplicates from Sorted List",
      "titleSlug": "remove-duplicates-from-sorted-list",
      "acRate": "52.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "84",
      "questionFrontendId": "84",
      "title": "Largest Rectangle in Histogram",
      "titleSlug": "largest-rectangle-in-histogram",
      "acRate": "44.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "85",
      "questionFrontendId": "85",
      "title": "Maximal Rectangle",
      "titleSlug": "maximal-rectangle",
      "acRate": "46.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "86",
      "questionFrontendId": "86",
      "title": "Partition List",
      "titleSlug": "partition-list",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "87",
      "questionFrontendId": "87",
      "title": "Scramble String",
      "titleSlug": "scramble-string",
      "acRate": "39.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "88",
      "questionFrontendId": "88",
      "title": "Merge Sorted Array",
      "titleSlug": "merge-sorted-array",
      "acRate": "49.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "89",
      "questionFrontendId": "89",
      "title": "Gray Code",
      "titleSlug": "gray-code",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "90",
      "questionFrontendId": "90",
      "title": "Subsets II",
      "titleSlug": "subsets-ii",
      "acRate": "57.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "91",
      "questionFrontendId": "91",
      "title": "Decode Ways",
      "titleSlug": "decode-ways",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "92",
      "questionFrontendId": "92",
      "title": "Reverse Linked List II",
      "titleSlug": "reverse-linked-list-ii",
      "acRate": "47.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "93",
      "questionFrontendId": "93",
      "title": "Restore IP Addresses",
      "titleSlug": "restore-ip-addresses",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "94",
      "questionFrontendId": "94",
      "title": "Binary Tree Inorder Traversal",
      "titleSlug": "binary-tree-inorder-traversal",
      "acRate": "75.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "95",
      "questionFrontendId": "95",
      "title": "Unique Binary Search Trees II",
      "titleSlug": "unique-binary-search-trees-ii",
      "acRate": "57.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "97",
      "questionFrontendId": "97",
      "title": "Interleaving String",
      "titleSlug": "interleaving-string",
      "acRate": "39.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "98",
      "questionFrontendId": "98",
      "title": "Validate Binary Search Tree",
      "titleSlug": "validate-binary-search-tree",
      "acRate": "32.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "100",
      "questionFrontendId": "100",
      "title": "Same Tree",
      "titleSlug": "same-tree",
      "acRate": "61.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "101",
      "questionFrontendId": "101",
      "title": "Symmetric Tree",
      "titleSlug": "symmetric-tree",
      "acRate": "56.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "102",
      "questionFrontendId": "102",
      "title": "Binary Tree Level Order Traversal",
      "titleSlug": "binary-tree-level-order-traversal",
      "acRate": "66.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "103",
      "questionFrontendId": "103",
      "title": "Binary Tree Zigzag Level Order Traversal",
      "titleSlug": "binary-tree-zigzag-level-order-traversal",
      "acRate": "58.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "104",
      "questionFrontendId": "104",
      "title": "Maximum Depth of Binary Tree",
      "titleSlug": "maximum-depth-of-binary-tree",
      "acRate": "75.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "105",
      "questionFrontendId": "105",
      "title": "Construct Binary Tree from Preorder and Inorder Traversal",
      "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "106",
      "questionFrontendId": "106",
      "title": "Construct Binary Tree from Inorder and Postorder Traversal",
      "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
      "acRate": "62.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "109",
      "questionFrontendId": "109",
      "title": "Convert Sorted List to Binary Search Tree",
      "titleSlug": "convert-sorted-list-to-binary-search-tree",
      "acRate": "61.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "110",
      "questionFrontendId": "110",
      "title": "Balanced Binary Tree",
      "titleSlug": "balanced-binary-tree",
      "acRate": "51.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "111",
      "questionFrontendId": "111",
      "title": "Minimum Depth of Binary Tree",
      "titleSlug": "minimum-depth-of-binary-tree",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "112",
      "questionFrontendId": "112",
      "title": "Path Sum",
      "titleSlug": "path-sum",
      "acRate": "50.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "114",
      "questionFrontendId": "114",
      "title": "Flatten Binary Tree to Linked List",
      "titleSlug": "flatten-binary-tree-to-linked-list",
      "acRate": "64.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "115",
      "questionFrontendId": "115",
      "title": "Distinct Subsequences",
      "titleSlug": "distinct-subsequences",
      "acRate": "46.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "116",
      "questionFrontendId": "116",
      "title": "Populating Next Right Pointers in Each Node",
      "titleSlug": "populating-next-right-pointers-in-each-node",
      "acRate": "62.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "117",
      "questionFrontendId": "117",
      "title": "Populating Next Right Pointers in Each Node II",
      "titleSlug": "populating-next-right-pointers-in-each-node-ii",
      "acRate": "52.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "118",
      "questionFrontendId": "118",
      "title": "Pascal's Triangle",
      "titleSlug": "pascals-triangle",
      "acRate": "74.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "119",
      "questionFrontendId": "119",
      "title": "Pascal's Triangle II",
      "titleSlug": "pascals-triangle-ii",
      "acRate": "63.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "121",
      "questionFrontendId": "121",
      "title": "Best Time to Buy and Sell Stock",
      "titleSlug": "best-time-to-buy-and-sell-stock",
      "acRate": "53.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "122",
      "questionFrontendId": "122",
      "title": "Best Time to Buy and Sell Stock II",
      "titleSlug": "best-time-to-buy-and-sell-stock-ii",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "123",
      "questionFrontendId": "123",
      "title": "Best Time to Buy and Sell Stock III",
      "titleSlug": "best-time-to-buy-and-sell-stock-iii",
      "acRate": "47.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "124",
      "questionFrontendId": "124",
      "title": "Binary Tree Maximum Path Sum",
      "titleSlug": "binary-tree-maximum-path-sum",
      "acRate": "40.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "125",
      "questionFrontendId": "125",
      "title": "Valid Palindrome",
      "titleSlug": "valid-palindrome",
      "acRate": "47.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "126",
      "questionFrontendId": "126",
      "title": "Word Ladder II",
      "titleSlug": "word-ladder-ii",
      "acRate": "27.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "127",
      "questionFrontendId": "127",
      "title": "Word Ladder",
      "titleSlug": "word-ladder",
      "acRate": "38.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "128",
      "questionFrontendId": "128",
      "title": "Longest Consecutive Sequence",
      "titleSlug": "longest-consecutive-sequence",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "130",
      "questionFrontendId": "130",
      "title": "Surrounded Regions",
      "titleSlug": "surrounded-regions",
      "acRate": "39.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "131",
      "questionFrontendId": "131",
      "title": "Palindrome Partitioning",
      "titleSlug": "palindrome-partitioning",
      "acRate": "67.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "133",
      "questionFrontendId": "133",
      "title": "Clone Graph",
      "titleSlug": "clone-graph",
      "acRate": "56.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "134",
      "questionFrontendId": "134",
      "title": "Gas Station",
      "titleSlug": "gas-station",
      "acRate": "45.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "135",
      "questionFrontendId": "135",
      "title": "Candy",
      "titleSlug": "candy",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "136",
      "questionFrontendId": "136",
      "title": "Single Number",
      "titleSlug": "single-number",
      "acRate": "72.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "137",
      "questionFrontendId": "137",
      "title": "Single Number II",
      "titleSlug": "single-number-ii",
      "acRate": "62.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "138",
      "questionFrontendId": "138",
      "title": "Copy List with Random Pointer",
      "titleSlug": "copy-list-with-random-pointer",
      "acRate": "55.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "139",
      "questionFrontendId": "139",
      "title": "Word Break",
      "titleSlug": "word-break",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "140",
      "questionFrontendId": "140",
      "title": "Word Break II",
      "titleSlug": "word-break-ii",
      "acRate": "47.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "141",
      "questionFrontendId": "141",
      "title": "Linked List Cycle",
      "titleSlug": "linked-list-cycle",
      "acRate": "50.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "142",
      "questionFrontendId": "142",
      "title": "Linked List Cycle II",
      "titleSlug": "linked-list-cycle-ii",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "143",
      "questionFrontendId": "143",
      "title": "Reorder List",
      "titleSlug": "reorder-list",
      "acRate": "58.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "144",
      "questionFrontendId": "144",
      "title": "Binary Tree Preorder Traversal",
      "titleSlug": "binary-tree-preorder-traversal",
      "acRate": "69.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "146",
      "questionFrontendId": "146",
      "title": "LRU Cache",
      "titleSlug": "lru-cache",
      "acRate": "42.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "148",
      "questionFrontendId": "148",
      "title": "Sort List",
      "titleSlug": "sort-list",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "149",
      "questionFrontendId": "149",
      "title": "Max Points on a Line",
      "titleSlug": "max-points-on-a-line",
      "acRate": "26.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "150",
      "questionFrontendId": "150",
      "title": "Evaluate Reverse Polish Notation",
      "titleSlug": "evaluate-reverse-polish-notation",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "151",
      "questionFrontendId": "151",
      "title": "Reverse Words in a String",
      "titleSlug": "reverse-words-in-a-string",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "152",
      "questionFrontendId": "152",
      "title": "Maximum Product Subarray",
      "titleSlug": "maximum-product-subarray",
      "acRate": "35.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "153",
      "questionFrontendId": "153",
      "title": "Find Minimum in Rotated Sorted Array",
      "titleSlug": "find-minimum-in-rotated-sorted-array",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "154",
      "questionFrontendId": "154",
      "title": "Find Minimum in Rotated Sorted Array II",
      "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
      "acRate": "43.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "155",
      "questionFrontendId": "155",
      "title": "Min Stack",
      "titleSlug": "min-stack",
      "acRate": "54.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "157",
      "questionFrontendId": "157",
      "title": "Read N Characters Given Read4",
      "titleSlug": "read-n-characters-given-read4",
      "acRate": "41.4%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "158",
      "questionFrontendId": "158",
      "title": "Read N Characters Given read4 II - Call Multiple Times",
      "titleSlug": "read-n-characters-given-read4-ii-call-multiple-times",
      "acRate": "42.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "159",
      "questionFrontendId": "159",
      "title": "Longest Substring with At Most Two Distinct Characters",
      "titleSlug": "longest-substring-with-at-most-two-distinct-characters",
      "acRate": "54.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "162",
      "questionFrontendId": "162",
      "title": "Find Peak Element",
      "titleSlug": "find-peak-element",
      "acRate": "45.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "163",
      "questionFrontendId": "163",
      "title": "Missing Ranges",
      "titleSlug": "missing-ranges",
      "acRate": "33.5%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "164",
      "questionFrontendId": "164",
      "title": "Maximum Gap",
      "titleSlug": "maximum-gap",
      "acRate": "45.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Radix Sort",
          "slug": "radix-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "166",
      "questionFrontendId": "166",
      "title": "Fraction to Recurring Decimal",
      "titleSlug": "fraction-to-recurring-decimal",
      "acRate": "24.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "168",
      "questionFrontendId": "168",
      "title": "Excel Sheet Column Title",
      "titleSlug": "excel-sheet-column-title",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "169",
      "questionFrontendId": "169",
      "title": "Majority Element",
      "titleSlug": "majority-element",
      "acRate": "64.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "172",
      "questionFrontendId": "172",
      "title": "Factorial Trailing Zeroes",
      "titleSlug": "factorial-trailing-zeroes",
      "acRate": "43.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "173",
      "questionFrontendId": "173",
      "title": "Binary Search Tree Iterator",
      "titleSlug": "binary-search-tree-iterator",
      "acRate": "71.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "174",
      "questionFrontendId": "174",
      "title": "Dungeon Game",
      "titleSlug": "dungeon-game",
      "acRate": "38.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "175",
      "questionFrontendId": "175",
      "title": "Combine Two Tables",
      "titleSlug": "combine-two-tables",
      "acRate": "75.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "176",
      "questionFrontendId": "176",
      "title": "Second Highest Salary",
      "titleSlug": "second-highest-salary",
      "acRate": "40.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "178",
      "questionFrontendId": "178",
      "title": "Rank Scores",
      "titleSlug": "rank-scores",
      "acRate": "62.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "179",
      "questionFrontendId": "179",
      "title": "Largest Number",
      "titleSlug": "largest-number",
      "acRate": "36.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "181",
      "questionFrontendId": "181",
      "title": "Employees Earning More Than Their Managers",
      "titleSlug": "employees-earning-more-than-their-managers",
      "acRate": "69.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "184",
      "questionFrontendId": "184",
      "title": "Department Highest Salary",
      "titleSlug": "department-highest-salary",
      "acRate": "51.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "185",
      "questionFrontendId": "185",
      "title": "Department Top Three Salaries",
      "titleSlug": "department-top-three-salaries",
      "acRate": "52.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "187",
      "questionFrontendId": "187",
      "title": "Repeated DNA Sequences",
      "titleSlug": "repeated-dna-sequences",
      "acRate": "48.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "188",
      "questionFrontendId": "188",
      "title": "Best Time to Buy and Sell Stock IV",
      "titleSlug": "best-time-to-buy-and-sell-stock-iv",
      "acRate": "42.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "189",
      "questionFrontendId": "189",
      "title": "Rotate Array",
      "titleSlug": "rotate-array",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "190",
      "questionFrontendId": "190",
      "title": "Reverse Bits",
      "titleSlug": "reverse-bits",
      "acRate": "58.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "191",
      "questionFrontendId": "191",
      "title": "Number of 1 Bits",
      "titleSlug": "number-of-1-bits",
      "acRate": "70.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "193",
      "questionFrontendId": "193",
      "title": "Valid Phone Numbers",
      "titleSlug": "valid-phone-numbers",
      "acRate": "25.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Shell",
          "slug": "shell"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "197",
      "questionFrontendId": "197",
      "title": "Rising Temperature",
      "titleSlug": "rising-temperature",
      "acRate": "47.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "198",
      "questionFrontendId": "198",
      "title": "House Robber",
      "titleSlug": "house-robber",
      "acRate": "50.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "199",
      "questionFrontendId": "199",
      "title": "Binary Tree Right Side View",
      "titleSlug": "binary-tree-right-side-view",
      "acRate": "62.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "200",
      "questionFrontendId": "200",
      "title": "Number of Islands",
      "titleSlug": "number-of-islands",
      "acRate": "58.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "201",
      "questionFrontendId": "201",
      "title": "Bitwise AND of Numbers Range",
      "titleSlug": "bitwise-and-of-numbers-range",
      "acRate": "46.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "202",
      "questionFrontendId": "202",
      "title": "Happy Number",
      "titleSlug": "happy-number",
      "acRate": "56.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "203",
      "questionFrontendId": "203",
      "title": "Remove Linked List Elements",
      "titleSlug": "remove-linked-list-elements",
      "acRate": "48.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "205",
      "questionFrontendId": "205",
      "title": "Isomorphic Strings",
      "titleSlug": "isomorphic-strings",
      "acRate": "43.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "206",
      "questionFrontendId": "206",
      "title": "Reverse Linked List",
      "titleSlug": "reverse-linked-list",
      "acRate": "76.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "207",
      "questionFrontendId": "207",
      "title": "Course Schedule",
      "titleSlug": "course-schedule",
      "acRate": "46.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "208",
      "questionFrontendId": "208",
      "title": "Implement Trie (Prefix Tree)",
      "titleSlug": "implement-trie-prefix-tree",
      "acRate": "64.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "209",
      "questionFrontendId": "209",
      "title": "Minimum Size Subarray Sum",
      "titleSlug": "minimum-size-subarray-sum",
      "acRate": "46.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "210",
      "questionFrontendId": "210",
      "title": "Course Schedule II",
      "titleSlug": "course-schedule-ii",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "211",
      "questionFrontendId": "211",
      "title": "Design Add and Search Words Data Structure",
      "titleSlug": "design-add-and-search-words-data-structure",
      "acRate": "45.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "212",
      "questionFrontendId": "212",
      "title": "Word Search II",
      "titleSlug": "word-search-ii",
      "acRate": "36.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "213",
      "questionFrontendId": "213",
      "title": "House Robber II",
      "titleSlug": "house-robber-ii",
      "acRate": "41.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "214",
      "questionFrontendId": "214",
      "title": "Shortest Palindrome",
      "titleSlug": "shortest-palindrome",
      "acRate": "33.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "215",
      "questionFrontendId": "215",
      "title": "Kth Largest Element in an Array",
      "titleSlug": "kth-largest-element-in-an-array",
      "acRate": "66.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "216",
      "questionFrontendId": "216",
      "title": "Combination Sum III",
      "titleSlug": "combination-sum-iii",
      "acRate": "69.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "217",
      "questionFrontendId": "217",
      "title": "Contains Duplicate",
      "titleSlug": "contains-duplicate",
      "acRate": "61.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "218",
      "questionFrontendId": "218",
      "title": "The Skyline Problem",
      "titleSlug": "the-skyline-problem",
      "acRate": "42.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Line Sweep",
          "slug": "line-sweep"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "219",
      "questionFrontendId": "219",
      "title": "Contains Duplicate II",
      "titleSlug": "contains-duplicate-ii",
      "acRate": "44.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "220",
      "questionFrontendId": "220",
      "title": "Contains Duplicate III",
      "titleSlug": "contains-duplicate-iii",
      "acRate": "22.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "221",
      "questionFrontendId": "221",
      "title": "Maximal Square",
      "titleSlug": "maximal-square",
      "acRate": "46.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "222",
      "questionFrontendId": "222",
      "title": "Count Complete Tree Nodes",
      "titleSlug": "count-complete-tree-nodes",
      "acRate": "64.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "224",
      "questionFrontendId": "224",
      "title": "Basic Calculator",
      "titleSlug": "basic-calculator",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "225",
      "questionFrontendId": "225",
      "title": "Implement Stack using Queues",
      "titleSlug": "implement-stack-using-queues",
      "acRate": "63.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "226",
      "questionFrontendId": "226",
      "title": "Invert Binary Tree",
      "titleSlug": "invert-binary-tree",
      "acRate": "76.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "227",
      "questionFrontendId": "227",
      "title": "Basic Calculator II",
      "titleSlug": "basic-calculator-ii",
      "acRate": "43.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "228",
      "questionFrontendId": "228",
      "title": "Summary Ranges",
      "titleSlug": "summary-ranges",
      "acRate": "50.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "229",
      "questionFrontendId": "229",
      "title": "Majority Element II",
      "titleSlug": "majority-element-ii",
      "acRate": "51.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "230",
      "questionFrontendId": "230",
      "title": "Kth Smallest Element in a BST",
      "titleSlug": "kth-smallest-element-in-a-bst",
      "acRate": "72.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "231",
      "questionFrontendId": "231",
      "title": "Power of Two",
      "titleSlug": "power-of-two",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "234",
      "questionFrontendId": "234",
      "title": "Palindrome Linked List",
      "titleSlug": "palindrome-linked-list",
      "acRate": "53.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "235",
      "questionFrontendId": "235",
      "title": "Lowest Common Ancestor of a Binary Search Tree",
      "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
      "acRate": "64.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "236",
      "questionFrontendId": "236",
      "title": "Lowest Common Ancestor of a Binary Tree",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "237",
      "questionFrontendId": "237",
      "title": "Delete Node in a Linked List",
      "titleSlug": "delete-node-in-a-linked-list",
      "acRate": "78.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "238",
      "questionFrontendId": "238",
      "title": "Product of Array Except Self",
      "titleSlug": "product-of-array-except-self",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "239",
      "questionFrontendId": "239",
      "title": "Sliding Window Maximum",
      "titleSlug": "sliding-window-maximum",
      "acRate": "46.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "240",
      "questionFrontendId": "240",
      "title": "Search a 2D Matrix II",
      "titleSlug": "search-a-2d-matrix-ii",
      "acRate": "52.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "241",
      "questionFrontendId": "241",
      "title": "Different Ways to Add Parentheses",
      "titleSlug": "different-ways-to-add-parentheses",
      "acRate": "65.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "242",
      "questionFrontendId": "242",
      "title": "Valid Anagram",
      "titleSlug": "valid-anagram",
      "acRate": "64.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "244",
      "questionFrontendId": "244",
      "title": "Shortest Word Distance II",
      "titleSlug": "shortest-word-distance-ii",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "246",
      "questionFrontendId": "246",
      "title": "Strobogrammatic Number",
      "titleSlug": "strobogrammatic-number",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "247",
      "questionFrontendId": "247",
      "title": "Strobogrammatic Number II",
      "titleSlug": "strobogrammatic-number-ii",
      "acRate": "52.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "249",
      "questionFrontendId": "249",
      "title": "Group Shifted Strings",
      "titleSlug": "group-shifted-strings",
      "acRate": "65.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "250",
      "questionFrontendId": "250",
      "title": "Count Univalue Subtrees",
      "titleSlug": "count-univalue-subtrees",
      "acRate": "56.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "251",
      "questionFrontendId": "251",
      "title": "Flatten 2D Vector",
      "titleSlug": "flatten-2d-vector",
      "acRate": "49.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "252",
      "questionFrontendId": "252",
      "title": "Meeting Rooms",
      "titleSlug": "meeting-rooms",
      "acRate": "58.0%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "253",
      "questionFrontendId": "253",
      "title": "Meeting Rooms II",
      "titleSlug": "meeting-rooms-ii",
      "acRate": "51.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "257",
      "questionFrontendId": "257",
      "title": "Binary Tree Paths",
      "titleSlug": "binary-tree-paths",
      "acRate": "63.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "258",
      "questionFrontendId": "258",
      "title": "Add Digits",
      "titleSlug": "add-digits",
      "acRate": "66.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "259",
      "questionFrontendId": "259",
      "title": "3Sum Smaller",
      "titleSlug": "3sum-smaller",
      "acRate": "50.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "261",
      "questionFrontendId": "261",
      "title": "Graph Valid Tree",
      "titleSlug": "graph-valid-tree",
      "acRate": "48.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "264",
      "questionFrontendId": "264",
      "title": "Ugly Number II",
      "titleSlug": "ugly-number-ii",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "266",
      "questionFrontendId": "266",
      "title": "Palindrome Permutation",
      "titleSlug": "palindrome-permutation",
      "acRate": "67.1%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "267",
      "questionFrontendId": "267",
      "title": "Palindrome Permutation II",
      "titleSlug": "palindrome-permutation-ii",
      "acRate": "41.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "268",
      "questionFrontendId": "268",
      "title": "Missing Number",
      "titleSlug": "missing-number",
      "acRate": "66.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "269",
      "questionFrontendId": "269",
      "title": "Alien Dictionary",
      "titleSlug": "alien-dictionary",
      "acRate": "35.7%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "270",
      "questionFrontendId": "270",
      "title": "Closest Binary Search Tree Value",
      "titleSlug": "closest-binary-search-tree-value",
      "acRate": "51.9%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "271",
      "questionFrontendId": "271",
      "title": "Encode and Decode Strings",
      "titleSlug": "encode-and-decode-strings",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "272",
      "questionFrontendId": "272",
      "title": "Closest Binary Search Tree Value II",
      "titleSlug": "closest-binary-search-tree-value-ii",
      "acRate": "59.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "273",
      "questionFrontendId": "273",
      "title": "Integer to English Words",
      "titleSlug": "integer-to-english-words",
      "acRate": "30.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "274",
      "questionFrontendId": "274",
      "title": "H-Index",
      "titleSlug": "h-index",
      "acRate": "38.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "276",
      "questionFrontendId": "276",
      "title": "Paint Fence",
      "titleSlug": "paint-fence",
      "acRate": "46.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "278",
      "questionFrontendId": "278",
      "title": "First Bad Version",
      "titleSlug": "first-bad-version",
      "acRate": "44.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "279",
      "questionFrontendId": "279",
      "title": "Perfect Squares",
      "titleSlug": "perfect-squares",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "280",
      "questionFrontendId": "280",
      "title": "Wiggle Sort",
      "titleSlug": "wiggle-sort",
      "acRate": "67.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "281",
      "questionFrontendId": "281",
      "title": "Zigzag Iterator",
      "titleSlug": "zigzag-iterator",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "282",
      "questionFrontendId": "282",
      "title": "Expression Add Operators",
      "titleSlug": "expression-add-operators",
      "acRate": "39.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "283",
      "questionFrontendId": "283",
      "title": "Move Zeroes",
      "titleSlug": "move-zeroes",
      "acRate": "61.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "284",
      "questionFrontendId": "284",
      "title": "Peeking Iterator",
      "titleSlug": "peeking-iterator",
      "acRate": "59.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "285",
      "questionFrontendId": "285",
      "title": "Inorder Successor in BST",
      "titleSlug": "inorder-successor-in-bst",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "286",
      "questionFrontendId": "286",
      "title": "Walls and Gates",
      "titleSlug": "walls-and-gates",
      "acRate": "61.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "287",
      "questionFrontendId": "287",
      "title": "Find the Duplicate Number",
      "titleSlug": "find-the-duplicate-number",
      "acRate": "60.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "288",
      "questionFrontendId": "288",
      "title": "Unique Word Abbreviation",
      "titleSlug": "unique-word-abbreviation",
      "acRate": "26.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "289",
      "questionFrontendId": "289",
      "title": "Game of Life",
      "titleSlug": "game-of-life",
      "acRate": "68.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "292",
      "questionFrontendId": "292",
      "title": "Nim Game",
      "titleSlug": "nim-game",
      "acRate": "56.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "293",
      "questionFrontendId": "293",
      "title": "Flip Game",
      "titleSlug": "flip-game",
      "acRate": "64.5%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "294",
      "questionFrontendId": "294",
      "title": "Flip Game II",
      "titleSlug": "flip-game-ii",
      "acRate": "52.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "295",
      "questionFrontendId": "295",
      "title": "Find Median from Data Stream",
      "titleSlug": "find-median-from-data-stream",
      "acRate": "51.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "296",
      "questionFrontendId": "296",
      "title": "Best Meeting Point",
      "titleSlug": "best-meeting-point",
      "acRate": "60.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "297",
      "questionFrontendId": "297",
      "title": "Serialize and Deserialize Binary Tree",
      "titleSlug": "serialize-and-deserialize-binary-tree",
      "acRate": "56.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "298",
      "questionFrontendId": "298",
      "title": "Binary Tree Longest Consecutive Sequence",
      "titleSlug": "binary-tree-longest-consecutive-sequence",
      "acRate": "53.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "299",
      "questionFrontendId": "299",
      "title": "Bulls and Cows",
      "titleSlug": "bulls-and-cows",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "300",
      "questionFrontendId": "300",
      "title": "Longest Increasing Subsequence",
      "titleSlug": "longest-increasing-subsequence",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "301",
      "questionFrontendId": "301",
      "title": "Remove Invalid Parentheses",
      "titleSlug": "remove-invalid-parentheses",
      "acRate": "48.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "302",
      "questionFrontendId": "302",
      "title": "Smallest Rectangle Enclosing Black Pixels",
      "titleSlug": "smallest-rectangle-enclosing-black-pixels",
      "acRate": "58.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "304",
      "questionFrontendId": "304",
      "title": "Range Sum Query 2D - Immutable",
      "titleSlug": "range-sum-query-2d-immutable",
      "acRate": "54.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "305",
      "questionFrontendId": "305",
      "title": "Number of Islands II",
      "titleSlug": "number-of-islands-ii",
      "acRate": "39.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "306",
      "questionFrontendId": "306",
      "title": "Additive Number",
      "titleSlug": "additive-number",
      "acRate": "31.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "307",
      "questionFrontendId": "307",
      "title": "Range Sum Query - Mutable",
      "titleSlug": "range-sum-query-mutable",
      "acRate": "40.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "308",
      "questionFrontendId": "308",
      "title": "Range Sum Query 2D - Mutable",
      "titleSlug": "range-sum-query-2d-mutable",
      "acRate": "44.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "309",
      "questionFrontendId": "309",
      "title": "Best Time to Buy and Sell Stock with Cooldown",
      "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
      "acRate": "58.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "310",
      "questionFrontendId": "310",
      "title": "Minimum Height Trees",
      "titleSlug": "minimum-height-trees",
      "acRate": "38.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "312",
      "questionFrontendId": "312",
      "title": "Burst Balloons",
      "titleSlug": "burst-balloons",
      "acRate": "58.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "313",
      "questionFrontendId": "313",
      "title": "Super Ugly Number",
      "titleSlug": "super-ugly-number",
      "acRate": "45.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "314",
      "questionFrontendId": "314",
      "title": "Binary Tree Vertical Order Traversal",
      "titleSlug": "binary-tree-vertical-order-traversal",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "315",
      "questionFrontendId": "315",
      "title": "Count of Smaller Numbers After Self",
      "titleSlug": "count-of-smaller-numbers-after-self",
      "acRate": "42.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "316",
      "questionFrontendId": "316",
      "title": "Remove Duplicate Letters",
      "titleSlug": "remove-duplicate-letters",
      "acRate": "49.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "317",
      "questionFrontendId": "317",
      "title": "Shortest Distance from All Buildings",
      "titleSlug": "shortest-distance-from-all-buildings",
      "acRate": "43.1%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "318",
      "questionFrontendId": "318",
      "title": "Maximum Product of Word Lengths",
      "titleSlug": "maximum-product-of-word-lengths",
      "acRate": "59.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "320",
      "questionFrontendId": "320",
      "title": "Generalized Abbreviation",
      "titleSlug": "generalized-abbreviation",
      "acRate": "58.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "321",
      "questionFrontendId": "321",
      "title": "Create Maximum Number",
      "titleSlug": "create-maximum-number",
      "acRate": "29.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "322",
      "questionFrontendId": "322",
      "title": "Coin Change",
      "titleSlug": "coin-change",
      "acRate": "43.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "323",
      "questionFrontendId": "323",
      "title": "Number of Connected Components in an Undirected Graph",
      "titleSlug": "number-of-connected-components-in-an-undirected-graph",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "324",
      "questionFrontendId": "324",
      "title": "Wiggle Sort II",
      "titleSlug": "wiggle-sort-ii",
      "acRate": "34.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "326",
      "questionFrontendId": "326",
      "title": "Power of Three",
      "titleSlug": "power-of-three",
      "acRate": "46.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "327",
      "questionFrontendId": "327",
      "title": "Count of Range Sum",
      "titleSlug": "count-of-range-sum",
      "acRate": "35.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "328",
      "questionFrontendId": "328",
      "title": "Odd Even Linked List",
      "titleSlug": "odd-even-linked-list",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "329",
      "questionFrontendId": "329",
      "title": "Longest Increasing Path in a Matrix",
      "titleSlug": "longest-increasing-path-in-a-matrix",
      "acRate": "53.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "330",
      "questionFrontendId": "330",
      "title": "Patching Array",
      "titleSlug": "patching-array",
      "acRate": "41.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "331",
      "questionFrontendId": "331",
      "title": "Verify Preorder Serialization of a Binary Tree",
      "titleSlug": "verify-preorder-serialization-of-a-binary-tree",
      "acRate": "45.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "332",
      "questionFrontendId": "332",
      "title": "Reconstruct Itinerary",
      "titleSlug": "reconstruct-itinerary",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Eulerian Circuit",
          "slug": "eulerian-circuit"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "334",
      "questionFrontendId": "334",
      "title": "Increasing Triplet Subsequence",
      "titleSlug": "increasing-triplet-subsequence",
      "acRate": "40.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "336",
      "questionFrontendId": "336",
      "title": "Palindrome Pairs",
      "titleSlug": "palindrome-pairs",
      "acRate": "35.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "337",
      "questionFrontendId": "337",
      "title": "House Robber III",
      "titleSlug": "house-robber-iii",
      "acRate": "54.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "338",
      "questionFrontendId": "338",
      "title": "Counting Bits",
      "titleSlug": "counting-bits",
      "acRate": "78.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "340",
      "questionFrontendId": "340",
      "title": "Longest Substring with At Most K Distinct Characters",
      "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
      "acRate": "48.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "341",
      "questionFrontendId": "341",
      "title": "Flatten Nested List Iterator",
      "titleSlug": "flatten-nested-list-iterator",
      "acRate": "64.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "343",
      "questionFrontendId": "343",
      "title": "Integer Break",
      "titleSlug": "integer-break",
      "acRate": "60.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "344",
      "questionFrontendId": "344",
      "title": "Reverse String",
      "titleSlug": "reverse-string",
      "acRate": "77.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "345",
      "questionFrontendId": "345",
      "title": "Reverse Vowels of a String",
      "titleSlug": "reverse-vowels-of-a-string",
      "acRate": "52.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "346",
      "questionFrontendId": "346",
      "title": "Moving Average from Data Stream",
      "titleSlug": "moving-average-from-data-stream",
      "acRate": "78.2%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "347",
      "questionFrontendId": "347",
      "title": "Top K Frequent Elements",
      "titleSlug": "top-k-frequent-elements",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "348",
      "questionFrontendId": "348",
      "title": "Design Tic-Tac-Toe",
      "titleSlug": "design-tic-tac-toe",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "349",
      "questionFrontendId": "349",
      "title": "Intersection of Two Arrays",
      "titleSlug": "intersection-of-two-arrays",
      "acRate": "74.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "350",
      "questionFrontendId": "350",
      "title": "Intersection of Two Arrays II",
      "titleSlug": "intersection-of-two-arrays-ii",
      "acRate": "56.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "351",
      "questionFrontendId": "351",
      "title": "Android Unlock Patterns",
      "titleSlug": "android-unlock-patterns",
      "acRate": "51.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "353",
      "questionFrontendId": "353",
      "title": "Design Snake Game",
      "titleSlug": "design-snake-game",
      "acRate": "38.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "354",
      "questionFrontendId": "354",
      "title": "Russian Doll Envelopes",
      "titleSlug": "russian-doll-envelopes",
      "acRate": "37.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "355",
      "questionFrontendId": "355",
      "title": "Design Twitter",
      "titleSlug": "design-twitter",
      "acRate": "39.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "356",
      "questionFrontendId": "356",
      "title": "Line Reflection",
      "titleSlug": "line-reflection",
      "acRate": "35.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "357",
      "questionFrontendId": "357",
      "title": "Count Numbers with Unique Digits",
      "titleSlug": "count-numbers-with-unique-digits",
      "acRate": "52.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "358",
      "questionFrontendId": "358",
      "title": "Rearrange String k Distance Apart",
      "titleSlug": "rearrange-string-k-distance-apart",
      "acRate": "38.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "359",
      "questionFrontendId": "359",
      "title": "Logger Rate Limiter",
      "titleSlug": "logger-rate-limiter",
      "acRate": "75.8%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "360",
      "questionFrontendId": "360",
      "title": "Sort Transformed Array",
      "titleSlug": "sort-transformed-array",
      "acRate": "55.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "361",
      "questionFrontendId": "361",
      "title": "Bomb Enemy",
      "titleSlug": "bomb-enemy",
      "acRate": "51.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "362",
      "questionFrontendId": "362",
      "title": "Design Hit Counter",
      "titleSlug": "design-hit-counter",
      "acRate": "68.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "363",
      "questionFrontendId": "363",
      "title": "Max Sum of Rectangle No Larger Than K",
      "titleSlug": "max-sum-of-rectangle-no-larger-than-k",
      "acRate": "44.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "365",
      "questionFrontendId": "365",
      "title": "Water and Jug Problem",
      "titleSlug": "water-and-jug-problem",
      "acRate": "40.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "366",
      "questionFrontendId": "366",
      "title": "Find Leaves of Binary Tree",
      "titleSlug": "find-leaves-of-binary-tree",
      "acRate": "80.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "368",
      "questionFrontendId": "368",
      "title": "Largest Divisible Subset",
      "titleSlug": "largest-divisible-subset",
      "acRate": "45.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "369",
      "questionFrontendId": "369",
      "title": "Plus One Linked List",
      "titleSlug": "plus-one-linked-list",
      "acRate": "61.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "370",
      "questionFrontendId": "370",
      "title": "Range Addition",
      "titleSlug": "range-addition",
      "acRate": "71.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "371",
      "questionFrontendId": "371",
      "title": "Sum of Two Integers",
      "titleSlug": "sum-of-two-integers",
      "acRate": "51.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "373",
      "questionFrontendId": "373",
      "title": "Find K Pairs with Smallest Sums",
      "titleSlug": "find-k-pairs-with-smallest-sums",
      "acRate": "40.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "374",
      "questionFrontendId": "374",
      "title": "Guess Number Higher or Lower",
      "titleSlug": "guess-number-higher-or-lower",
      "acRate": "53.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "375",
      "questionFrontendId": "375",
      "title": "Guess Number Higher or Lower II",
      "titleSlug": "guess-number-higher-or-lower-ii",
      "acRate": "48.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "377",
      "questionFrontendId": "377",
      "title": "Combination Sum IV",
      "titleSlug": "combination-sum-iv",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "378",
      "questionFrontendId": "378",
      "title": "Kth Smallest Element in a Sorted Matrix",
      "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
      "acRate": "62.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "379",
      "questionFrontendId": "379",
      "title": "Design Phone Directory",
      "titleSlug": "design-phone-directory",
      "acRate": "51.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "380",
      "questionFrontendId": "380",
      "title": "Insert Delete GetRandom O(1)",
      "titleSlug": "insert-delete-getrandom-o1",
      "acRate": "54.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "381",
      "questionFrontendId": "381",
      "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
      "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
      "acRate": "35.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "382",
      "questionFrontendId": "382",
      "title": "Linked List Random Node",
      "titleSlug": "linked-list-random-node",
      "acRate": "63.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Reservoir Sampling",
          "slug": "reservoir-sampling"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "383",
      "questionFrontendId": "383",
      "title": "Ransom Note",
      "titleSlug": "ransom-note",
      "acRate": "61.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "384",
      "questionFrontendId": "384",
      "title": "Shuffle an Array",
      "titleSlug": "shuffle-an-array",
      "acRate": "58.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "387",
      "questionFrontendId": "387",
      "title": "First Unique Character in a String",
      "titleSlug": "first-unique-character-in-a-string",
      "acRate": "62.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "388",
      "questionFrontendId": "388",
      "title": "Longest Absolute File Path",
      "titleSlug": "longest-absolute-file-path",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "389",
      "questionFrontendId": "389",
      "title": "Find the Difference",
      "titleSlug": "find-the-difference",
      "acRate": "59.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "391",
      "questionFrontendId": "391",
      "title": "Perfect Rectangle",
      "titleSlug": "perfect-rectangle",
      "acRate": "33.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Line Sweep",
          "slug": "line-sweep"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "392",
      "questionFrontendId": "392",
      "title": "Is Subsequence",
      "titleSlug": "is-subsequence",
      "acRate": "47.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "393",
      "questionFrontendId": "393",
      "title": "UTF-8 Validation",
      "titleSlug": "utf-8-validation",
      "acRate": "45.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "394",
      "questionFrontendId": "394",
      "title": "Decode String",
      "titleSlug": "decode-string",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "395",
      "questionFrontendId": "395",
      "title": "Longest Substring with At Least K Repeating Characters",
      "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
      "acRate": "45.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "397",
      "questionFrontendId": "397",
      "title": "Integer Replacement",
      "titleSlug": "integer-replacement",
      "acRate": "35.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "399",
      "questionFrontendId": "399",
      "title": "Evaluate Division",
      "titleSlug": "evaluate-division",
      "acRate": "61.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "400",
      "questionFrontendId": "400",
      "title": "Nth Digit",
      "titleSlug": "nth-digit",
      "acRate": "34.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "401",
      "questionFrontendId": "401",
      "title": "Binary Watch",
      "titleSlug": "binary-watch",
      "acRate": "53.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "402",
      "questionFrontendId": "402",
      "title": "Remove K Digits",
      "titleSlug": "remove-k-digits",
      "acRate": "31.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "403",
      "questionFrontendId": "403",
      "title": "Frog Jump",
      "titleSlug": "frog-jump",
      "acRate": "46.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "404",
      "questionFrontendId": "404",
      "title": "Sum of Left Leaves",
      "titleSlug": "sum-of-left-leaves",
      "acRate": "57.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "405",
      "questionFrontendId": "405",
      "title": "Convert a Number to Hexadecimal",
      "titleSlug": "convert-a-number-to-hexadecimal",
      "acRate": "48.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "406",
      "questionFrontendId": "406",
      "title": "Queue Reconstruction by Height",
      "titleSlug": "queue-reconstruction-by-height",
      "acRate": "73.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "407",
      "questionFrontendId": "407",
      "title": "Trapping Rain Water II",
      "titleSlug": "trapping-rain-water-ii",
      "acRate": "47.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "408",
      "questionFrontendId": "408",
      "title": "Valid Word Abbreviation",
      "titleSlug": "valid-word-abbreviation",
      "acRate": "35.6%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "409",
      "questionFrontendId": "409",
      "title": "Longest Palindrome",
      "titleSlug": "longest-palindrome",
      "acRate": "53.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "410",
      "questionFrontendId": "410",
      "title": "Split Array Largest Sum",
      "titleSlug": "split-array-largest-sum",
      "acRate": "55.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "411",
      "questionFrontendId": "411",
      "title": "Minimum Unique Word Abbreviation",
      "titleSlug": "minimum-unique-word-abbreviation",
      "acRate": "39.7%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "412",
      "questionFrontendId": "412",
      "title": "Fizz Buzz",
      "titleSlug": "fizz-buzz",
      "acRate": "71.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "413",
      "questionFrontendId": "413",
      "title": "Arithmetic Slices",
      "titleSlug": "arithmetic-slices",
      "acRate": "65.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "415",
      "questionFrontendId": "415",
      "title": "Add Strings",
      "titleSlug": "add-strings",
      "acRate": "51.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "416",
      "questionFrontendId": "416",
      "title": "Partition Equal Subset Sum",
      "titleSlug": "partition-equal-subset-sum",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "417",
      "questionFrontendId": "417",
      "title": "Pacific Atlantic Water Flow",
      "titleSlug": "pacific-atlantic-water-flow",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "418",
      "questionFrontendId": "418",
      "title": "Sentence Screen Fitting",
      "titleSlug": "sentence-screen-fitting",
      "acRate": "36.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "419",
      "questionFrontendId": "419",
      "title": "Battleships in a Board",
      "titleSlug": "battleships-in-a-board",
      "acRate": "75.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "420",
      "questionFrontendId": "420",
      "title": "Strong Password Checker",
      "titleSlug": "strong-password-checker",
      "acRate": "13.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "421",
      "questionFrontendId": "421",
      "title": "Maximum XOR of Two Numbers in an Array",
      "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
      "acRate": "53.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "422",
      "questionFrontendId": "422",
      "title": "Valid Word Square",
      "titleSlug": "valid-word-square",
      "acRate": "40.8%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "424",
      "questionFrontendId": "424",
      "title": "Longest Repeating Character Replacement",
      "titleSlug": "longest-repeating-character-replacement",
      "acRate": "53.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "425",
      "questionFrontendId": "425",
      "title": "Word Squares",
      "titleSlug": "word-squares",
      "acRate": "53.3%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "435",
      "questionFrontendId": "435",
      "title": "Non-overlapping Intervals",
      "titleSlug": "non-overlapping-intervals",
      "acRate": "53.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "438",
      "questionFrontendId": "438",
      "title": "Find All Anagrams in a String",
      "titleSlug": "find-all-anagrams-in-a-string",
      "acRate": "50.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "441",
      "questionFrontendId": "441",
      "title": "Arranging Coins",
      "titleSlug": "arranging-coins",
      "acRate": "46.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "442",
      "questionFrontendId": "442",
      "title": "Find All Duplicates in an Array",
      "titleSlug": "find-all-duplicates-in-an-array",
      "acRate": "75.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "443",
      "questionFrontendId": "443",
      "title": "String Compression",
      "titleSlug": "string-compression",
      "acRate": "54.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "444",
      "questionFrontendId": "444",
      "title": "Sequence Reconstruction",
      "titleSlug": "sequence-reconstruction",
      "acRate": "28.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "446",
      "questionFrontendId": "446",
      "title": "Arithmetic Slices II - Subsequence",
      "titleSlug": "arithmetic-slices-ii-subsequence",
      "acRate": "54.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "447",
      "questionFrontendId": "447",
      "title": "Number of Boomerangs",
      "titleSlug": "number-of-boomerangs",
      "acRate": "55.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "448",
      "questionFrontendId": "448",
      "title": "Find All Numbers Disappeared in an Array",
      "titleSlug": "find-all-numbers-disappeared-in-an-array",
      "acRate": "60.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "451",
      "questionFrontendId": "451",
      "title": "Sort Characters By Frequency",
      "titleSlug": "sort-characters-by-frequency",
      "acRate": "72.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "454",
      "questionFrontendId": "454",
      "title": "4Sum II",
      "titleSlug": "4sum-ii",
      "acRate": "57.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "455",
      "questionFrontendId": "455",
      "title": "Assign Cookies",
      "titleSlug": "assign-cookies",
      "acRate": "52.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "458",
      "questionFrontendId": "458",
      "title": "Poor Pigs",
      "titleSlug": "poor-pigs",
      "acRate": "59.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "459",
      "questionFrontendId": "459",
      "title": "Repeated Substring Pattern",
      "titleSlug": "repeated-substring-pattern",
      "acRate": "46.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "460",
      "questionFrontendId": "460",
      "title": "LFU Cache",
      "titleSlug": "lfu-cache",
      "acRate": "44.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "463",
      "questionFrontendId": "463",
      "title": "Island Perimeter",
      "titleSlug": "island-perimeter",
      "acRate": "70.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "465",
      "questionFrontendId": "465",
      "title": "Optimal Account Balancing",
      "titleSlug": "optimal-account-balancing",
      "acRate": "49.5%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "469",
      "questionFrontendId": "469",
      "title": "Convex Polygon",
      "titleSlug": "convex-polygon",
      "acRate": "39.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "471",
      "questionFrontendId": "471",
      "title": "Encode String with Shortest Length",
      "titleSlug": "encode-string-with-shortest-length",
      "acRate": "50.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "473",
      "questionFrontendId": "473",
      "title": "Matchsticks to Square",
      "titleSlug": "matchsticks-to-square",
      "acRate": "40.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "474",
      "questionFrontendId": "474",
      "title": "Ones and Zeroes",
      "titleSlug": "ones-and-zeroes",
      "acRate": "47.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "475",
      "questionFrontendId": "475",
      "title": "Heaters",
      "titleSlug": "heaters",
      "acRate": "37.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "476",
      "questionFrontendId": "476",
      "title": "Number Complement",
      "titleSlug": "number-complement",
      "acRate": "67.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "480",
      "questionFrontendId": "480",
      "title": "Sliding Window Median",
      "titleSlug": "sliding-window-median",
      "acRate": "39.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "481",
      "questionFrontendId": "481",
      "title": "Magical String",
      "titleSlug": "magical-string",
      "acRate": "51.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "482",
      "questionFrontendId": "482",
      "title": "License Key Formatting",
      "titleSlug": "license-key-formatting",
      "acRate": "43.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "483",
      "questionFrontendId": "483",
      "title": "Smallest Good Base",
      "titleSlug": "smallest-good-base",
      "acRate": "40.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "484",
      "questionFrontendId": "484",
      "title": "Find Permutation",
      "titleSlug": "find-permutation",
      "acRate": "66.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "485",
      "questionFrontendId": "485",
      "title": "Max Consecutive Ones",
      "titleSlug": "max-consecutive-ones",
      "acRate": "58.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "486",
      "questionFrontendId": "486",
      "title": "Predict the Winner",
      "titleSlug": "predict-the-winner",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "487",
      "questionFrontendId": "487",
      "title": "Max Consecutive Ones II",
      "titleSlug": "max-consecutive-ones-ii",
      "acRate": "50.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "490",
      "questionFrontendId": "490",
      "title": "The Maze",
      "titleSlug": "the-maze",
      "acRate": "57.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "493",
      "questionFrontendId": "493",
      "title": "Reverse Pairs",
      "titleSlug": "reverse-pairs",
      "acRate": "30.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "494",
      "questionFrontendId": "494",
      "title": "Target Sum",
      "titleSlug": "target-sum",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "495",
      "questionFrontendId": "495",
      "title": "Teemo Attacking",
      "titleSlug": "teemo-attacking",
      "acRate": "56.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "496",
      "questionFrontendId": "496",
      "title": "Next Greater Element I",
      "titleSlug": "next-greater-element-i",
      "acRate": "72.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "498",
      "questionFrontendId": "498",
      "title": "Diagonal Traverse",
      "titleSlug": "diagonal-traverse",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "501",
      "questionFrontendId": "501",
      "title": "Find Mode in Binary Search Tree",
      "titleSlug": "find-mode-in-binary-search-tree",
      "acRate": "56.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "503",
      "questionFrontendId": "503",
      "title": "Next Greater Element II",
      "titleSlug": "next-greater-element-ii",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "505",
      "questionFrontendId": "505",
      "title": "The Maze II",
      "titleSlug": "the-maze-ii",
      "acRate": "53.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "506",
      "questionFrontendId": "506",
      "title": "Relative Ranks",
      "titleSlug": "relative-ranks",
      "acRate": "63.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "507",
      "questionFrontendId": "507",
      "title": "Perfect Number",
      "titleSlug": "perfect-number",
      "acRate": "40.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "510",
      "questionFrontendId": "2031",
      "title": "Count Subarrays With More Ones Than Zeros",
      "titleSlug": "count-subarrays-with-more-ones-than-zeros",
      "acRate": "52.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "511",
      "questionFrontendId": "1059",
      "title": "All Paths from Source Lead to Destination",
      "titleSlug": "all-paths-from-source-lead-to-destination",
      "acRate": "37.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "514",
      "questionFrontendId": "514",
      "title": "Freedom Trail",
      "titleSlug": "freedom-trail",
      "acRate": "47.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "516",
      "questionFrontendId": "516",
      "title": "Longest Palindromic Subsequence",
      "titleSlug": "longest-palindromic-subsequence",
      "acRate": "62.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "518",
      "questionFrontendId": "518",
      "title": "Coin Change II",
      "titleSlug": "coin-change-ii",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "520",
      "questionFrontendId": "520",
      "title": "Detect Capital",
      "titleSlug": "detect-capital",
      "acRate": "56.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "521",
      "questionFrontendId": "521",
      "title": "Longest Uncommon Subsequence I",
      "titleSlug": "longest-uncommon-subsequence-i",
      "acRate": "60.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "522",
      "questionFrontendId": "522",
      "title": "Longest Uncommon Subsequence II",
      "titleSlug": "longest-uncommon-subsequence-ii",
      "acRate": "41.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "523",
      "questionFrontendId": "523",
      "title": "Continuous Subarray Sum",
      "titleSlug": "continuous-subarray-sum",
      "acRate": "28.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "524",
      "questionFrontendId": "524",
      "title": "Longest Word in Dictionary through Deleting",
      "titleSlug": "longest-word-in-dictionary-through-deleting",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "525",
      "questionFrontendId": "525",
      "title": "Contiguous Array",
      "titleSlug": "contiguous-array",
      "acRate": "48.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "526",
      "questionFrontendId": "526",
      "title": "Beautiful Arrangement",
      "titleSlug": "beautiful-arrangement",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "527",
      "questionFrontendId": "527",
      "title": "Word Abbreviation",
      "titleSlug": "word-abbreviation",
      "acRate": "61.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "530",
      "questionFrontendId": "530",
      "title": "Minimum Absolute Difference in BST",
      "titleSlug": "minimum-absolute-difference-in-bst",
      "acRate": "58.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "531",
      "questionFrontendId": "531",
      "title": "Lonely Pixel I",
      "titleSlug": "lonely-pixel-i",
      "acRate": "62.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "533",
      "questionFrontendId": "533",
      "title": "Lonely Pixel II",
      "titleSlug": "lonely-pixel-ii",
      "acRate": "48.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "535",
      "questionFrontendId": "535",
      "title": "Encode and Decode TinyURL",
      "titleSlug": "encode-and-decode-tinyurl",
      "acRate": "86.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "539",
      "questionFrontendId": "539",
      "title": "Minimum Time Difference",
      "titleSlug": "minimum-time-difference",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "540",
      "questionFrontendId": "540",
      "title": "Single Element in a Sorted Array",
      "titleSlug": "single-element-in-a-sorted-array",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "541",
      "questionFrontendId": "541",
      "title": "Reverse String II",
      "titleSlug": "reverse-string-ii",
      "acRate": "50.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "542",
      "questionFrontendId": "542",
      "title": "01 Matrix",
      "titleSlug": "01-matrix",
      "acRate": "48.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "543",
      "questionFrontendId": "543",
      "title": "Diameter of Binary Tree",
      "titleSlug": "diameter-of-binary-tree",
      "acRate": "60.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "544",
      "questionFrontendId": "544",
      "title": "Output Contest Matches",
      "titleSlug": "output-contest-matches",
      "acRate": "77.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "545",
      "questionFrontendId": "545",
      "title": "Boundary of Binary Tree",
      "titleSlug": "boundary-of-binary-tree",
      "acRate": "45.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "547",
      "questionFrontendId": "547",
      "title": "Number of Provinces",
      "titleSlug": "number-of-provinces",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "549",
      "questionFrontendId": "549",
      "title": "Binary Tree Longest Consecutive Sequence II",
      "titleSlug": "binary-tree-longest-consecutive-sequence-ii",
      "acRate": "49.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "550",
      "questionFrontendId": "1730",
      "title": "Shortest Path to Get Food",
      "titleSlug": "shortest-path-to-get-food",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "551",
      "questionFrontendId": "551",
      "title": "Student Attendance Record I",
      "titleSlug": "student-attendance-record-i",
      "acRate": "48.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "552",
      "questionFrontendId": "552",
      "title": "Student Attendance Record II",
      "titleSlug": "student-attendance-record-ii",
      "acRate": "42.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "554",
      "questionFrontendId": "554",
      "title": "Brick Wall",
      "titleSlug": "brick-wall",
      "acRate": "54.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "556",
      "questionFrontendId": "556",
      "title": "Next Greater Element III",
      "titleSlug": "next-greater-element-iii",
      "acRate": "34.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "557",
      "questionFrontendId": "557",
      "title": "Reverse Words in a String III",
      "titleSlug": "reverse-words-in-a-string-iii",
      "acRate": "83.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "560",
      "questionFrontendId": "560",
      "title": "Subarray Sum Equals K",
      "titleSlug": "subarray-sum-equals-k",
      "acRate": "43.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "562",
      "questionFrontendId": "562",
      "title": "Longest Line of Consecutive One in Matrix",
      "titleSlug": "longest-line-of-consecutive-one-in-matrix",
      "acRate": "50.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "564",
      "questionFrontendId": "564",
      "title": "Find the Closest Palindrome",
      "titleSlug": "find-the-closest-palindrome",
      "acRate": "22.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "567",
      "questionFrontendId": "567",
      "title": "Permutation in String",
      "titleSlug": "permutation-in-string",
      "acRate": "44.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "568",
      "questionFrontendId": "568",
      "title": "Maximum Vacation Days",
      "titleSlug": "maximum-vacation-days",
      "acRate": "45.5%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "569",
      "questionFrontendId": "569",
      "title": "Median Employee Salary",
      "titleSlug": "median-employee-salary",
      "acRate": "65.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "570",
      "questionFrontendId": "570",
      "title": "Managers with at Least 5 Direct Reports",
      "titleSlug": "managers-with-at-least-5-direct-reports",
      "acRate": "51.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "572",
      "questionFrontendId": "572",
      "title": "Subtree of Another Tree",
      "titleSlug": "subtree-of-another-tree",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "577",
      "questionFrontendId": "577",
      "title": "Employee Bonus",
      "titleSlug": "employee-bonus",
      "acRate": "74.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "581",
      "questionFrontendId": "581",
      "title": "Shortest Unsorted Continuous Subarray",
      "titleSlug": "shortest-unsorted-continuous-subarray",
      "acRate": "36.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "583",
      "questionFrontendId": "583",
      "title": "Delete Operation for Two Strings",
      "titleSlug": "delete-operation-for-two-strings",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "584",
      "questionFrontendId": "584",
      "title": "Find Customer Referee",
      "titleSlug": "find-customer-referee",
      "acRate": "69.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "586",
      "questionFrontendId": "586",
      "title": "Customer Placing the Largest Number of Orders",
      "titleSlug": "customer-placing-the-largest-number-of-orders",
      "acRate": "64.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "587",
      "questionFrontendId": "587",
      "title": "Erect the Fence",
      "titleSlug": "erect-the-fence",
      "acRate": "51.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "588",
      "questionFrontendId": "588",
      "title": "Design In-Memory File System",
      "titleSlug": "design-in-memory-file-system",
      "acRate": "48.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "593",
      "questionFrontendId": "593",
      "title": "Valid Square",
      "titleSlug": "valid-square",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "595",
      "questionFrontendId": "595",
      "title": "Big Countries",
      "titleSlug": "big-countries",
      "acRate": "68.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "604",
      "questionFrontendId": "604",
      "title": "Design Compressed String Iterator",
      "titleSlug": "design-compressed-string-iterator",
      "acRate": "39.7%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "605",
      "questionFrontendId": "605",
      "title": "Can Place Flowers",
      "titleSlug": "can-place-flowers",
      "acRate": "29.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "609",
      "questionFrontendId": "609",
      "title": "Find Duplicate File in System",
      "titleSlug": "find-duplicate-file-in-system",
      "acRate": "67.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "611",
      "questionFrontendId": "611",
      "title": "Valid Triangle Number",
      "titleSlug": "valid-triangle-number",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "616",
      "questionFrontendId": "616",
      "title": "Add Bold Tag in String",
      "titleSlug": "add-bold-tag-in-string",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "621",
      "questionFrontendId": "621",
      "title": "Task Scheduler",
      "titleSlug": "task-scheduler",
      "acRate": "59.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "629",
      "questionFrontendId": "629",
      "title": "K Inverse Pairs Array",
      "titleSlug": "k-inverse-pairs-array",
      "acRate": "50.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "630",
      "questionFrontendId": "630",
      "title": "Course Schedule III",
      "titleSlug": "course-schedule-iii",
      "acRate": "40.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "632",
      "questionFrontendId": "632",
      "title": "Smallest Range Covering Elements from K Lists",
      "titleSlug": "smallest-range-covering-elements-from-k-lists",
      "acRate": "62.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "636",
      "questionFrontendId": "636",
      "title": "Exclusive Time of Functions",
      "titleSlug": "exclusive-time-of-functions",
      "acRate": "62.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "638",
      "questionFrontendId": "638",
      "title": "Shopping Offers",
      "titleSlug": "shopping-offers",
      "acRate": "52.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "642",
      "questionFrontendId": "642",
      "title": "Design Search Autocomplete System",
      "titleSlug": "design-search-autocomplete-system",
      "acRate": "48.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "643",
      "questionFrontendId": "643",
      "title": "Maximum Average Subarray I",
      "titleSlug": "maximum-average-subarray-i",
      "acRate": "43.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "644",
      "questionFrontendId": "644",
      "title": "Maximum Average Subarray II",
      "titleSlug": "maximum-average-subarray-ii",
      "acRate": "36.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "645",
      "questionFrontendId": "645",
      "title": "Set Mismatch",
      "titleSlug": "set-mismatch",
      "acRate": "44.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "647",
      "questionFrontendId": "647",
      "title": "Palindromic Substrings",
      "titleSlug": "palindromic-substrings",
      "acRate": "70.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "650",
      "questionFrontendId": "650",
      "title": "2 Keys Keyboard",
      "titleSlug": "2-keys-keyboard",
      "acRate": "54.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "651",
      "questionFrontendId": "651",
      "title": "4 Keys Keyboard",
      "titleSlug": "4-keys-keyboard",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "652",
      "questionFrontendId": "652",
      "title": "Find Duplicate Subtrees",
      "titleSlug": "find-duplicate-subtrees",
      "acRate": "59.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "653",
      "questionFrontendId": "653",
      "title": "Two Sum IV - Input is a BST",
      "titleSlug": "two-sum-iv-input-is-a-bst",
      "acRate": "61.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "655",
      "questionFrontendId": "655",
      "title": "Print Binary Tree",
      "titleSlug": "print-binary-tree",
      "acRate": "63.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "656",
      "questionFrontendId": "656",
      "title": "Coin Path",
      "titleSlug": "coin-path",
      "acRate": "32.1%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "657",
      "questionFrontendId": "657",
      "title": "Robot Return to Origin",
      "titleSlug": "robot-return-to-origin",
      "acRate": "75.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "658",
      "questionFrontendId": "658",
      "title": "Find K Closest Elements",
      "titleSlug": "find-k-closest-elements",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "659",
      "questionFrontendId": "659",
      "title": "Split Array into Consecutive Subsequences",
      "titleSlug": "split-array-into-consecutive-subsequences",
      "acRate": "51.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "662",
      "questionFrontendId": "662",
      "title": "Maximum Width of Binary Tree",
      "titleSlug": "maximum-width-of-binary-tree",
      "acRate": "42.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "665",
      "questionFrontendId": "665",
      "title": "Non-decreasing Array",
      "titleSlug": "non-decreasing-array",
      "acRate": "24.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "667",
      "questionFrontendId": "667",
      "title": "Beautiful Arrangement II",
      "titleSlug": "beautiful-arrangement-ii",
      "acRate": "60.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "668",
      "questionFrontendId": "668",
      "title": "Kth Smallest Number in Multiplication Table",
      "titleSlug": "kth-smallest-number-in-multiplication-table",
      "acRate": "51.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "670",
      "questionFrontendId": "670",
      "title": "Maximum Swap",
      "titleSlug": "maximum-swap",
      "acRate": "48.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "673",
      "questionFrontendId": "673",
      "title": "Number of Longest Increasing Subsequence",
      "titleSlug": "number-of-longest-increasing-subsequence",
      "acRate": "47.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "676",
      "questionFrontendId": "676",
      "title": "Implement Magic Dictionary",
      "titleSlug": "implement-magic-dictionary",
      "acRate": "57.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "678",
      "questionFrontendId": "678",
      "title": "Valid Parenthesis String",
      "titleSlug": "valid-parenthesis-string",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "679",
      "questionFrontendId": "679",
      "title": "24 Game",
      "titleSlug": "24-game",
      "acRate": "49.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "680",
      "questionFrontendId": "680",
      "title": "Valid Palindrome II",
      "titleSlug": "valid-palindrome-ii",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "681",
      "questionFrontendId": "681",
      "title": "Next Closest Time",
      "titleSlug": "next-closest-time",
      "acRate": "46.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "683",
      "questionFrontendId": "683",
      "title": "K Empty Slots",
      "titleSlug": "k-empty-slots",
      "acRate": "37.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "684",
      "questionFrontendId": "684",
      "title": "Redundant Connection",
      "titleSlug": "redundant-connection",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "685",
      "questionFrontendId": "685",
      "title": "Redundant Connection II",
      "titleSlug": "redundant-connection-ii",
      "acRate": "34.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "686",
      "questionFrontendId": "686",
      "title": "Repeated String Match",
      "titleSlug": "repeated-string-match",
      "acRate": "34.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "687",
      "questionFrontendId": "687",
      "title": "Longest Univalue Path",
      "titleSlug": "longest-univalue-path",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "689",
      "questionFrontendId": "689",
      "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
      "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
      "acRate": "49.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "690",
      "questionFrontendId": "690",
      "title": "Employee Importance",
      "titleSlug": "employee-importance",
      "acRate": "66.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "691",
      "questionFrontendId": "691",
      "title": "Stickers to Spell Word",
      "titleSlug": "stickers-to-spell-word",
      "acRate": "48.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "692",
      "questionFrontendId": "692",
      "title": "Top K Frequent Words",
      "titleSlug": "top-k-frequent-words",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "695",
      "questionFrontendId": "695",
      "title": "Max Area of Island",
      "titleSlug": "max-area-of-island",
      "acRate": "71.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "696",
      "questionFrontendId": "696",
      "title": "Count Binary Substrings",
      "titleSlug": "count-binary-substrings",
      "acRate": "65.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "697",
      "questionFrontendId": "697",
      "title": "Degree of an Array",
      "titleSlug": "degree-of-an-array",
      "acRate": "56.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "715",
      "questionFrontendId": "715",
      "title": "Range Module",
      "titleSlug": "range-module",
      "acRate": "44.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "718",
      "questionFrontendId": "718",
      "title": "Maximum Length of Repeated Subarray",
      "titleSlug": "maximum-length-of-repeated-subarray",
      "acRate": "51.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "719",
      "questionFrontendId": "719",
      "title": "Find K-th Smallest Pair Distance",
      "titleSlug": "find-k-th-smallest-pair-distance",
      "acRate": "37.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "720",
      "questionFrontendId": "720",
      "title": "Longest Word in Dictionary",
      "titleSlug": "longest-word-in-dictionary",
      "acRate": "52.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "721",
      "questionFrontendId": "721",
      "title": "Accounts Merge",
      "titleSlug": "accounts-merge",
      "acRate": "57.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "722",
      "questionFrontendId": "722",
      "title": "Remove Comments",
      "titleSlug": "remove-comments",
      "acRate": "38.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "724",
      "questionFrontendId": "724",
      "title": "Find Pivot Index",
      "titleSlug": "find-pivot-index",
      "acRate": "57.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "726",
      "questionFrontendId": "726",
      "title": "Number of Atoms",
      "titleSlug": "number-of-atoms",
      "acRate": "52.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "727",
      "questionFrontendId": "727",
      "title": "Minimum Window Subsequence",
      "titleSlug": "minimum-window-subsequence",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "729",
      "questionFrontendId": "729",
      "title": "My Calendar I",
      "titleSlug": "my-calendar-i",
      "acRate": "56.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "731",
      "questionFrontendId": "731",
      "title": "My Calendar II",
      "titleSlug": "my-calendar-ii",
      "acRate": "55.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "732",
      "questionFrontendId": "732",
      "title": "My Calendar III",
      "titleSlug": "my-calendar-iii",
      "acRate": "71.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "733",
      "questionFrontendId": "733",
      "title": "Flood Fill",
      "titleSlug": "flood-fill",
      "acRate": "63.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "734",
      "questionFrontendId": "734",
      "title": "Sentence Similarity",
      "titleSlug": "sentence-similarity",
      "acRate": "44.2%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "735",
      "questionFrontendId": "735",
      "title": "Asteroid Collision",
      "titleSlug": "asteroid-collision",
      "acRate": "44.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "737",
      "questionFrontendId": "737",
      "title": "Sentence Similarity II",
      "titleSlug": "sentence-similarity-ii",
      "acRate": "49.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "739",
      "questionFrontendId": "739",
      "title": "Daily Temperatures",
      "titleSlug": "daily-temperatures",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "741",
      "questionFrontendId": "741",
      "title": "Cherry Pickup",
      "titleSlug": "cherry-pickup",
      "acRate": "36.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "744",
      "questionFrontendId": "743",
      "title": "Network Delay Time",
      "titleSlug": "network-delay-time",
      "acRate": "53.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "746",
      "questionFrontendId": "745",
      "title": "Prefix and Suffix Search",
      "titleSlug": "prefix-and-suffix-search",
      "acRate": "41.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "747",
      "questionFrontendId": "746",
      "title": "Min Cost Climbing Stairs",
      "titleSlug": "min-cost-climbing-stairs",
      "acRate": "65.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "748",
      "questionFrontendId": "747",
      "title": "Largest Number At Least Twice of Others",
      "titleSlug": "largest-number-at-least-twice-of-others",
      "acRate": "48.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "749",
      "questionFrontendId": "748",
      "title": "Shortest Completing Word",
      "titleSlug": "shortest-completing-word",
      "acRate": "59.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "753",
      "questionFrontendId": "752",
      "title": "Open the Lock",
      "titleSlug": "open-the-lock",
      "acRate": "56.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "754",
      "questionFrontendId": "753",
      "title": "Cracking the Safe",
      "titleSlug": "cracking-the-safe",
      "acRate": "56.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Eulerian Circuit",
          "slug": "eulerian-circuit"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "757",
      "questionFrontendId": "756",
      "title": "Pyramid Transition Matrix",
      "titleSlug": "pyramid-transition-matrix",
      "acRate": "52.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "760",
      "questionFrontendId": "758",
      "title": "Bold Words in String",
      "titleSlug": "bold-words-in-string",
      "acRate": "51.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "761",
      "questionFrontendId": "759",
      "title": "Employee Free Time",
      "titleSlug": "employee-free-time",
      "acRate": "72.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "762",
      "questionFrontendId": "760",
      "title": "Find Anagram Mappings",
      "titleSlug": "find-anagram-mappings",
      "acRate": "83.6%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "765",
      "questionFrontendId": "428",
      "title": "Serialize and Deserialize N-ary Tree",
      "titleSlug": "serialize-and-deserialize-n-ary-tree",
      "acRate": "66.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "766",
      "questionFrontendId": "430",
      "title": "Flatten a Multilevel Doubly Linked List",
      "titleSlug": "flatten-a-multilevel-doubly-linked-list",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "770",
      "questionFrontendId": "765",
      "title": "Couples Holding Hands",
      "titleSlug": "couples-holding-hands",
      "acRate": "57.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "772",
      "questionFrontendId": "427",
      "title": "Construct Quad Tree",
      "titleSlug": "construct-quad-tree",
      "acRate": "75.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "775",
      "questionFrontendId": "589",
      "title": "N-ary Tree Preorder Traversal",
      "titleSlug": "n-ary-tree-preorder-traversal",
      "acRate": "75.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "777",
      "questionFrontendId": "766",
      "title": "Toeplitz Matrix",
      "titleSlug": "toeplitz-matrix",
      "acRate": "68.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "778",
      "questionFrontendId": "767",
      "title": "Reorganize String",
      "titleSlug": "reorganize-string",
      "acRate": "54.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "779",
      "questionFrontendId": "768",
      "title": "Max Chunks To Make Sorted II",
      "titleSlug": "max-chunks-to-make-sorted-ii",
      "acRate": "53.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "780",
      "questionFrontendId": "769",
      "title": "Max Chunks To Make Sorted",
      "titleSlug": "max-chunks-to-make-sorted",
      "acRate": "58.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "784",
      "questionFrontendId": "701",
      "title": "Insert into a Binary Search Tree",
      "titleSlug": "insert-into-a-binary-search-tree",
      "acRate": "73.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "785",
      "questionFrontendId": "772",
      "title": "Basic Calculator III",
      "titleSlug": "basic-calculator-iii",
      "acRate": "50.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "786",
      "questionFrontendId": "702",
      "title": "Search in a Sorted Array of Unknown Size",
      "titleSlug": "search-in-a-sorted-array-of-unknown-size",
      "acRate": "72.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "788",
      "questionFrontendId": "774",
      "title": "Minimize Max Distance to Gas Station",
      "titleSlug": "minimize-max-distance-to-gas-station",
      "acRate": "52.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "789",
      "questionFrontendId": "703",
      "title": "Kth Largest Element in a Stream",
      "titleSlug": "kth-largest-element-in-a-stream",
      "acRate": "56.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "792",
      "questionFrontendId": "704",
      "title": "Binary Search",
      "titleSlug": "binary-search",
      "acRate": "57.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "793",
      "questionFrontendId": "777",
      "title": "Swap Adjacent in LR String",
      "titleSlug": "swap-adjacent-in-lr-string",
      "acRate": "36.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "794",
      "questionFrontendId": "778",
      "title": "Swim in Rising Water",
      "titleSlug": "swim-in-rising-water",
      "acRate": "60.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "795",
      "questionFrontendId": "779",
      "title": "K-th Symbol in Grammar",
      "titleSlug": "k-th-symbol-in-grammar",
      "acRate": "46.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "796",
      "questionFrontendId": "780",
      "title": "Reaching Points",
      "titleSlug": "reaching-points",
      "acRate": "33.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "798",
      "questionFrontendId": "782",
      "title": "Transform to Chessboard",
      "titleSlug": "transform-to-chessboard",
      "acRate": "50.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "799",
      "questionFrontendId": "783",
      "title": "Minimum Distance Between BST Nodes",
      "titleSlug": "minimum-distance-between-bst-nodes",
      "acRate": "59.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "801",
      "questionFrontendId": "785",
      "title": "Is Graph Bipartite?",
      "titleSlug": "is-graph-bipartite",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "803",
      "questionFrontendId": "787",
      "title": "Cheapest Flights Within K Stops",
      "titleSlug": "cheapest-flights-within-k-stops",
      "acRate": "39.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "804",
      "questionFrontendId": "788",
      "title": "Rotated Digits",
      "titleSlug": "rotated-digits",
      "acRate": "56.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "805",
      "questionFrontendId": "789",
      "title": "Escape The Ghosts",
      "titleSlug": "escape-the-ghosts",
      "acRate": "61.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "806",
      "questionFrontendId": "790",
      "title": "Domino and Tromino Tiling",
      "titleSlug": "domino-and-tromino-tiling",
      "acRate": "50.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "807",
      "questionFrontendId": "791",
      "title": "Custom Sort String",
      "titleSlug": "custom-sort-string",
      "acRate": "70.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "808",
      "questionFrontendId": "792",
      "title": "Number of Matching Subsequences",
      "titleSlug": "number-of-matching-subsequences",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "810",
      "questionFrontendId": "794",
      "title": "Valid Tic-Tac-Toe State",
      "titleSlug": "valid-tic-tac-toe-state",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "812",
      "questionFrontendId": "796",
      "title": "Rotate String",
      "titleSlug": "rotate-string",
      "acRate": "57.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "813",
      "questionFrontendId": "797",
      "title": "All Paths From Source to Target",
      "titleSlug": "all-paths-from-source-to-target",
      "acRate": "82.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "815",
      "questionFrontendId": "799",
      "title": "Champagne Tower",
      "titleSlug": "champagne-tower",
      "acRate": "58.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "816",
      "questionFrontendId": "705",
      "title": "Design HashSet",
      "titleSlug": "design-hashset",
      "acRate": "66.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "817",
      "questionFrontendId": "706",
      "title": "Design HashMap",
      "titleSlug": "design-hashmap",
      "acRate": "65.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "818",
      "questionFrontendId": "800",
      "title": "Similar RGB Color",
      "titleSlug": "similar-rgb-color",
      "acRate": "67.4%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "820",
      "questionFrontendId": "802",
      "title": "Find Eventual Safe States",
      "titleSlug": "find-eventual-safe-states",
      "acRate": "62.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "821",
      "questionFrontendId": "803",
      "title": "Bricks Falling When Hit",
      "titleSlug": "bricks-falling-when-hit",
      "acRate": "34.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "822",
      "questionFrontendId": "804",
      "title": "Unique Morse Code Words",
      "titleSlug": "unique-morse-code-words",
      "acRate": "82.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "825",
      "questionFrontendId": "807",
      "title": "Max Increase to Keep City Skyline",
      "titleSlug": "max-increase-to-keep-city-skyline",
      "acRate": "86.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "826",
      "questionFrontendId": "808",
      "title": "Soup Servings",
      "titleSlug": "soup-servings",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Probability and Statistics",
          "slug": "probability-and-statistics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "827",
      "questionFrontendId": "809",
      "title": "Expressive Words",
      "titleSlug": "expressive-words",
      "acRate": "46.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "830",
      "questionFrontendId": "812",
      "title": "Largest Triangle Area",
      "titleSlug": "largest-triangle-area",
      "acRate": "60.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "831",
      "questionFrontendId": "813",
      "title": "Largest Sum of Averages",
      "titleSlug": "largest-sum-of-averages",
      "acRate": "53.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "833",
      "questionFrontendId": "815",
      "title": "Bus Routes",
      "titleSlug": "bus-routes",
      "acRate": "48.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "834",
      "questionFrontendId": "816",
      "title": "Ambiguous Coordinates",
      "titleSlug": "ambiguous-coordinates",
      "acRate": "56.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "835",
      "questionFrontendId": "817",
      "title": "Linked List Components",
      "titleSlug": "linked-list-components",
      "acRate": "56.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "836",
      "questionFrontendId": "818",
      "title": "Race Car",
      "titleSlug": "race-car",
      "acRate": "43.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "838",
      "questionFrontendId": "707",
      "title": "Design Linked List",
      "titleSlug": "design-linked-list",
      "acRate": "28.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "843",
      "questionFrontendId": "823",
      "title": "Binary Trees With Factors",
      "titleSlug": "binary-trees-with-factors",
      "acRate": "52.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "850",
      "questionFrontendId": "708",
      "title": "Insert into a Sorted Circular Linked List",
      "titleSlug": "insert-into-a-sorted-circular-linked-list",
      "acRate": "35.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "854",
      "questionFrontendId": "827",
      "title": "Making A Large Island",
      "titleSlug": "making-a-large-island",
      "acRate": "46.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "857",
      "questionFrontendId": "830",
      "title": "Positions of Large Groups",
      "titleSlug": "positions-of-large-groups",
      "acRate": "52.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "860",
      "questionFrontendId": "622",
      "title": "Design Circular Queue",
      "titleSlug": "design-circular-queue",
      "acRate": "51.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "861",
      "questionFrontendId": "832",
      "title": "Flipping an Image",
      "titleSlug": "flipping-an-image",
      "acRate": "81.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "862",
      "questionFrontendId": "833",
      "title": "Find And Replace in String",
      "titleSlug": "find-and-replace-in-string",
      "acRate": "52.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "863",
      "questionFrontendId": "834",
      "title": "Sum of Distances in Tree",
      "titleSlug": "sum-of-distances-in-tree",
      "acRate": "59.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "864",
      "questionFrontendId": "835",
      "title": "Image Overlap",
      "titleSlug": "image-overlap",
      "acRate": "63.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "865",
      "questionFrontendId": "489",
      "title": "Robot Room Cleaner",
      "titleSlug": "robot-room-cleaner",
      "acRate": "76.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "867",
      "questionFrontendId": "837",
      "title": "New 21 Game",
      "titleSlug": "new-21-game",
      "acRate": "45.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Probability and Statistics",
          "slug": "probability-and-statistics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "868",
      "questionFrontendId": "838",
      "title": "Push Dominoes",
      "titleSlug": "push-dominoes",
      "acRate": "57.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "869",
      "questionFrontendId": "839",
      "title": "Similar String Groups",
      "titleSlug": "similar-string-groups",
      "acRate": "54.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "870",
      "questionFrontendId": "840",
      "title": "Magic Squares In Grid",
      "titleSlug": "magic-squares-in-grid",
      "acRate": "38.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "871",
      "questionFrontendId": "841",
      "title": "Keys and Rooms",
      "titleSlug": "keys-and-rooms",
      "acRate": "72.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "873",
      "questionFrontendId": "843",
      "title": "Guess the Word",
      "titleSlug": "guess-the-word",
      "acRate": "39.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "874",
      "questionFrontendId": "844",
      "title": "Backspace String Compare",
      "titleSlug": "backspace-string-compare",
      "acRate": "49.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "875",
      "questionFrontendId": "845",
      "title": "Longest Mountain in Array",
      "titleSlug": "longest-mountain-in-array",
      "acRate": "40.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "876",
      "questionFrontendId": "846",
      "title": "Hand of Straights",
      "titleSlug": "hand-of-straights",
      "acRate": "55.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "877",
      "questionFrontendId": "847",
      "title": "Shortest Path Visiting All Nodes",
      "titleSlug": "shortest-path-visiting-all-nodes",
      "acRate": "65.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "879",
      "questionFrontendId": "849",
      "title": "Maximize Distance to Closest Person",
      "titleSlug": "maximize-distance-to-closest-person",
      "acRate": "48.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "882",
      "questionFrontendId": "852",
      "title": "Peak Index in a Mountain Array",
      "titleSlug": "peak-index-in-a-mountain-array",
      "acRate": "68.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "883",
      "questionFrontendId": "853",
      "title": "Car Fleet",
      "titleSlug": "car-fleet",
      "acRate": "50.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "884",
      "questionFrontendId": "854",
      "title": "K-Similar Strings",
      "titleSlug": "k-similar-strings",
      "acRate": "39.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "885",
      "questionFrontendId": "855",
      "title": "Exam Room",
      "titleSlug": "exam-room",
      "acRate": "43.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "886",
      "questionFrontendId": "856",
      "title": "Score of Parentheses",
      "titleSlug": "score-of-parentheses",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "887",
      "questionFrontendId": "857",
      "title": "Minimum Cost to Hire K Workers",
      "titleSlug": "minimum-cost-to-hire-k-workers",
      "acRate": "52.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "889",
      "questionFrontendId": "859",
      "title": "Buddy Strings",
      "titleSlug": "buddy-strings",
      "acRate": "33.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "892",
      "questionFrontendId": "862",
      "title": "Shortest Subarray with Sum at Least K",
      "titleSlug": "shortest-subarray-with-sum-at-least-k",
      "acRate": "26.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "893",
      "questionFrontendId": "863",
      "title": "All Nodes Distance K in Binary Tree",
      "titleSlug": "all-nodes-distance-k-in-binary-tree",
      "acRate": "64.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "894",
      "questionFrontendId": "710",
      "title": "Random Pick with Blacklist",
      "titleSlug": "random-pick-with-blacklist",
      "acRate": "33.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "895",
      "questionFrontendId": "864",
      "title": "Shortest Path to Get All Keys",
      "titleSlug": "shortest-path-to-get-all-keys",
      "acRate": "53.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "900",
      "questionFrontendId": "869",
      "title": "Reordered Power of 2",
      "titleSlug": "reordered-power-of-2",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "902",
      "questionFrontendId": "871",
      "title": "Minimum Number of Refueling Stops",
      "titleSlug": "minimum-number-of-refueling-stops",
      "acRate": "40.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "903",
      "questionFrontendId": "470",
      "title": "Implement Rand10() Using Rand7()",
      "titleSlug": "implement-rand10-using-rand7",
      "acRate": "46.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Rejection Sampling",
          "slug": "rejection-sampling"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        },
        {
          "name": "Probability and Statistics",
          "slug": "probability-and-statistics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "904",
      "questionFrontendId": "872",
      "title": "Leaf-Similar Trees",
      "titleSlug": "leaf-similar-trees",
      "acRate": "70.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "907",
      "questionFrontendId": "875",
      "title": "Koko Eating Bananas",
      "titleSlug": "koko-eating-bananas",
      "acRate": "49.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "908",
      "questionFrontendId": "876",
      "title": "Middle of the Linked List",
      "titleSlug": "middle-of-the-linked-list",
      "acRate": "78.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "910",
      "questionFrontendId": "878",
      "title": "Nth Magical Number",
      "titleSlug": "nth-magical-number",
      "acRate": "35.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "911",
      "questionFrontendId": "879",
      "title": "Profitable Schemes",
      "titleSlug": "profitable-schemes",
      "acRate": "48.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "912",
      "questionFrontendId": "528",
      "title": "Random Pick with Weight",
      "titleSlug": "random-pick-with-weight",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "913",
      "questionFrontendId": "519",
      "title": "Random Flip Matrix",
      "titleSlug": "random-flip-matrix",
      "acRate": "41.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Reservoir Sampling",
          "slug": "reservoir-sampling"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "914",
      "questionFrontendId": "497",
      "title": "Random Point in Non-overlapping Rectangles",
      "titleSlug": "random-point-in-non-overlapping-rectangles",
      "acRate": "39.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Reservoir Sampling",
          "slug": "reservoir-sampling"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "917",
      "questionFrontendId": "881",
      "title": "Boats to Save People",
      "titleSlug": "boats-to-save-people",
      "acRate": "56.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "922",
      "questionFrontendId": "886",
      "title": "Possible Bipartition",
      "titleSlug": "possible-bipartition",
      "acRate": "50.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "923",
      "questionFrontendId": "887",
      "title": "Super Egg Drop",
      "titleSlug": "super-egg-drop",
      "acRate": "27.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "925",
      "questionFrontendId": "889",
      "title": "Construct Binary Tree from Preorder and Postorder Traversal",
      "titleSlug": "construct-binary-tree-from-preorder-and-postorder-traversal",
      "acRate": "71.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "926",
      "questionFrontendId": "890",
      "title": "Find and Replace Pattern",
      "titleSlug": "find-and-replace-pattern",
      "acRate": "76.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "930",
      "questionFrontendId": "894",
      "title": "All Possible Full Binary Trees",
      "titleSlug": "all-possible-full-binary-trees",
      "acRate": "82.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "932",
      "questionFrontendId": "896",
      "title": "Monotonic Array",
      "titleSlug": "monotonic-array",
      "acRate": "61.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "933",
      "questionFrontendId": "897",
      "title": "Increasing Order Search Tree",
      "titleSlug": "increasing-order-search-tree",
      "acRate": "78.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "936",
      "questionFrontendId": "900",
      "title": "RLE Iterator",
      "titleSlug": "rle-iterator",
      "acRate": "59.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "937",
      "questionFrontendId": "901",
      "title": "Online Stock Span",
      "titleSlug": "online-stock-span",
      "acRate": "65.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "940",
      "questionFrontendId": "904",
      "title": "Fruit Into Baskets",
      "titleSlug": "fruit-into-baskets",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "942",
      "questionFrontendId": "906",
      "title": "Super Palindromes",
      "titleSlug": "super-palindromes",
      "acRate": "38.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "943",
      "questionFrontendId": "907",
      "title": "Sum of Subarray Minimums",
      "titleSlug": "sum-of-subarray-minimums",
      "acRate": "37.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "notac",
      "questionId": "945",
      "questionFrontendId": "909",
      "title": "Snakes and Ladders",
      "titleSlug": "snakes-and-ladders",
      "acRate": "43.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "947",
      "questionFrontendId": "911",
      "title": "Online Election",
      "titleSlug": "online-election",
      "acRate": "52.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "948",
      "questionFrontendId": "912",
      "title": "Sort an Array",
      "titleSlug": "sort-an-array",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Radix Sort",
          "slug": "radix-sort"
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "949",
      "questionFrontendId": "913",
      "title": "Cat and Mouse",
      "titleSlug": "cat-and-mouse",
      "acRate": "34.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "950",
      "questionFrontendId": "914",
      "title": "X of a Kind in a Deck of Cards",
      "titleSlug": "x-of-a-kind-in-a-deck-of-cards",
      "acRate": "30.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "952",
      "questionFrontendId": "916",
      "title": "Word Subsets",
      "titleSlug": "word-subsets",
      "acRate": "52.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "953",
      "questionFrontendId": "917",
      "title": "Reverse Only Letters",
      "titleSlug": "reverse-only-letters",
      "acRate": "64.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "955",
      "questionFrontendId": "919",
      "title": "Complete Binary Tree Inserter",
      "titleSlug": "complete-binary-tree-inserter",
      "acRate": "65.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "956",
      "questionFrontendId": "920",
      "title": "Number of Music Playlists",
      "titleSlug": "number-of-music-playlists",
      "acRate": "60.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "957",
      "questionFrontendId": "921",
      "title": "Minimum Add to Make Parentheses Valid",
      "titleSlug": "minimum-add-to-make-parentheses-valid",
      "acRate": "75.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "958",
      "questionFrontendId": "922",
      "title": "Sort Array By Parity II",
      "titleSlug": "sort-array-by-parity-ii",
      "acRate": "70.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "960",
      "questionFrontendId": "924",
      "title": "Minimize Malware Spread",
      "titleSlug": "minimize-malware-spread",
      "acRate": "42.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "962",
      "questionFrontendId": "926",
      "title": "Flip String to Monotone Increasing",
      "titleSlug": "flip-string-to-monotone-increasing",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "965",
      "questionFrontendId": "929",
      "title": "Unique Email Addresses",
      "titleSlug": "unique-email-addresses",
      "acRate": "67.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "966",
      "questionFrontendId": "930",
      "title": "Binary Subarrays With Sum",
      "titleSlug": "binary-subarrays-with-sum",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "967",
      "questionFrontendId": "931",
      "title": "Minimum Falling Path Sum",
      "titleSlug": "minimum-falling-path-sum",
      "acRate": "64.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "968",
      "questionFrontendId": "932",
      "title": "Beautiful Array",
      "titleSlug": "beautiful-array",
      "acRate": "65.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "969",
      "questionFrontendId": "933",
      "title": "Number of Recent Calls",
      "titleSlug": "number-of-recent-calls",
      "acRate": "74.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "971",
      "questionFrontendId": "934",
      "title": "Shortest Bridge",
      "titleSlug": "shortest-bridge",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "972",
      "questionFrontendId": "935",
      "title": "Knight Dialer",
      "titleSlug": "knight-dialer",
      "acRate": "59.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "975",
      "questionFrontendId": "938",
      "title": "Range Sum of BST",
      "titleSlug": "range-sum-of-bst",
      "acRate": "86.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "976",
      "questionFrontendId": "939",
      "title": "Minimum Area Rectangle",
      "titleSlug": "minimum-area-rectangle",
      "acRate": "53.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "977",
      "questionFrontendId": "940",
      "title": "Distinct Subsequences II",
      "titleSlug": "distinct-subsequences-ii",
      "acRate": "43.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "978",
      "questionFrontendId": "941",
      "title": "Valid Mountain Array",
      "titleSlug": "valid-mountain-array",
      "acRate": "33.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "979",
      "questionFrontendId": "942",
      "title": "DI String Match",
      "titleSlug": "di-string-match",
      "acRate": "78.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "981",
      "questionFrontendId": "944",
      "title": "Delete Columns to Make Sorted",
      "titleSlug": "delete-columns-to-make-sorted",
      "acRate": "74.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "983",
      "questionFrontendId": "946",
      "title": "Validate Stack Sequences",
      "titleSlug": "validate-stack-sequences",
      "acRate": "69.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "984",
      "questionFrontendId": "947",
      "title": "Most Stones Removed with Same Row or Column",
      "titleSlug": "most-stones-removed-with-same-row-or-column",
      "acRate": "58.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "985",
      "questionFrontendId": "948",
      "title": "Bag of Tokens",
      "titleSlug": "bag-of-tokens",
      "acRate": "58.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "986",
      "questionFrontendId": "949",
      "title": "Largest Time for Given Digits",
      "titleSlug": "largest-time-for-given-digits",
      "acRate": "35.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "988",
      "questionFrontendId": "951",
      "title": "Flip Equivalent Binary Trees",
      "titleSlug": "flip-equivalent-binary-trees",
      "acRate": "66.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "989",
      "questionFrontendId": "952",
      "title": "Largest Component Size by Common Factor",
      "titleSlug": "largest-component-size-by-common-factor",
      "acRate": "40.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "991",
      "questionFrontendId": "954",
      "title": "Array of Doubled Pairs",
      "titleSlug": "array-of-doubled-pairs",
      "acRate": "39.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "992",
      "questionFrontendId": "955",
      "title": "Delete Columns to Make Sorted II",
      "titleSlug": "delete-columns-to-make-sorted-ii",
      "acRate": "35.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "998",
      "questionFrontendId": "958",
      "title": "Check Completeness of a Binary Tree",
      "titleSlug": "check-completeness-of-a-binary-tree",
      "acRate": "56.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1000",
      "questionFrontendId": "960",
      "title": "Delete Columns to Make Sorted III",
      "titleSlug": "delete-columns-to-make-sorted-iii",
      "acRate": "57.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1002",
      "questionFrontendId": "962",
      "title": "Maximum Width Ramp",
      "titleSlug": "maximum-width-ramp",
      "acRate": "49.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1003",
      "questionFrontendId": "963",
      "title": "Minimum Area Rectangle II",
      "titleSlug": "minimum-area-rectangle-ii",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1007",
      "questionFrontendId": "967",
      "title": "Numbers With Same Consecutive Differences",
      "titleSlug": "numbers-with-same-consecutive-differences",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1008",
      "questionFrontendId": "968",
      "title": "Binary Tree Cameras",
      "titleSlug": "binary-tree-cameras",
      "acRate": "46.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1013",
      "questionFrontendId": "509",
      "title": "Fibonacci Number",
      "titleSlug": "fibonacci-number",
      "acRate": "70.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1014",
      "questionFrontendId": "973",
      "title": "K Closest Points to Origin",
      "titleSlug": "k-closest-points-to-origin",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1016",
      "questionFrontendId": "974",
      "title": "Subarray Sums Divisible by K",
      "titleSlug": "subarray-sums-divisible-by-k",
      "acRate": "54.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1017",
      "questionFrontendId": "975",
      "title": "Odd Even Jump",
      "titleSlug": "odd-even-jump",
      "acRate": "39.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1019",
      "questionFrontendId": "977",
      "title": "Squares of a Sorted Array",
      "titleSlug": "squares-of-a-sorted-array",
      "acRate": "72.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1021",
      "questionFrontendId": "979",
      "title": "Distribute Coins in Binary Tree",
      "titleSlug": "distribute-coins-in-binary-tree",
      "acRate": "72.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1022",
      "questionFrontendId": "980",
      "title": "Unique Paths III",
      "titleSlug": "unique-paths-iii",
      "acRate": "81.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1023",
      "questionFrontendId": "981",
      "title": "Time Based Key-Value Store",
      "titleSlug": "time-based-key-value-store",
      "acRate": "49.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1025",
      "questionFrontendId": "983",
      "title": "Minimum Cost For Tickets",
      "titleSlug": "minimum-cost-for-tickets",
      "acRate": "65.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1028",
      "questionFrontendId": "986",
      "title": "Interval List Intersections",
      "titleSlug": "interval-list-intersections",
      "acRate": "71.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1029",
      "questionFrontendId": "987",
      "title": "Vertical Order Traversal of a Binary Tree",
      "titleSlug": "vertical-order-traversal-of-a-binary-tree",
      "acRate": "47.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1030",
      "questionFrontendId": "988",
      "title": "Smallest String Starting From Leaf",
      "titleSlug": "smallest-string-starting-from-leaf",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1032",
      "questionFrontendId": "990",
      "title": "Satisfiability of Equality Equations",
      "titleSlug": "satisfiability-of-equality-equations",
      "acRate": "50.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1034",
      "questionFrontendId": "992",
      "title": "Subarrays with K Different Integers",
      "titleSlug": "subarrays-with-k-different-integers",
      "acRate": "56.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1036",
      "questionFrontendId": "994",
      "title": "Rotting Oranges",
      "titleSlug": "rotting-oranges",
      "acRate": "53.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1037",
      "questionFrontendId": "995",
      "title": "Minimum Number of K Consecutive Bit Flips",
      "titleSlug": "minimum-number-of-k-consecutive-bit-flips",
      "acRate": "51.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1042",
      "questionFrontendId": "1000",
      "title": "Minimum Cost to Merge Stones",
      "titleSlug": "minimum-cost-to-merge-stones",
      "acRate": "43.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1046",
      "questionFrontendId": "1004",
      "title": "Max Consecutive Ones III",
      "titleSlug": "max-consecutive-ones-iii",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1049",
      "questionFrontendId": "1007",
      "title": "Minimum Domino Rotations For Equal Row",
      "titleSlug": "minimum-domino-rotations-for-equal-row",
      "acRate": "52.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1051",
      "questionFrontendId": "1055",
      "title": "Shortest Way to Form String",
      "titleSlug": "shortest-way-to-form-string",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1052",
      "questionFrontendId": "1057",
      "title": "Campus Bikes",
      "titleSlug": "campus-bikes",
      "acRate": "58.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1054",
      "questionFrontendId": "1009",
      "title": "Complement of Base 10 Integer",
      "titleSlug": "complement-of-base-10-integer",
      "acRate": "60.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1055",
      "questionFrontendId": "1010",
      "title": "Pairs of Songs With Total Durations Divisible by 60",
      "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
      "acRate": "52.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1056",
      "questionFrontendId": "1011",
      "title": "Capacity To Ship Packages Within D Days",
      "titleSlug": "capacity-to-ship-packages-within-d-days",
      "acRate": "69.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1057",
      "questionFrontendId": "1012",
      "title": "Numbers With Repeated Digits",
      "titleSlug": "numbers-with-repeated-digits",
      "acRate": "42.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1060",
      "questionFrontendId": "1062",
      "title": "Longest Repeating Substring",
      "titleSlug": "longest-repeating-substring",
      "acRate": "60.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Suffix Array",
          "slug": "suffix-array"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1063",
      "questionFrontendId": "1014",
      "title": "Best Sightseeing Pair",
      "titleSlug": "best-sightseeing-pair",
      "acRate": "59.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1064",
      "questionFrontendId": "1015",
      "title": "Smallest Integer Divisible by K",
      "titleSlug": "smallest-integer-divisible-by-k",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1065",
      "questionFrontendId": "1016",
      "title": "Binary String With Substrings Representing 1 To N",
      "titleSlug": "binary-string-with-substrings-representing-1-to-n",
      "acRate": "57.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1067",
      "questionFrontendId": "1066",
      "title": "Campus Bikes II",
      "titleSlug": "campus-bikes-ii",
      "acRate": "55.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1069",
      "questionFrontendId": "1056",
      "title": "Confusing Number",
      "titleSlug": "confusing-number",
      "acRate": "48.6%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1073",
      "questionFrontendId": "1020",
      "title": "Number of Enclaves",
      "titleSlug": "number-of-enclaves",
      "acRate": "68.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1076",
      "questionFrontendId": "1087",
      "title": "Brace Expansion",
      "titleSlug": "brace-expansion",
      "acRate": "66.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1077",
      "questionFrontendId": "1088",
      "title": "Confusing Number II",
      "titleSlug": "confusing-number-ii",
      "acRate": "47.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1078",
      "questionFrontendId": "1021",
      "title": "Remove Outermost Parentheses",
      "titleSlug": "remove-outermost-parentheses",
      "acRate": "82.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1080",
      "questionFrontendId": "1023",
      "title": "Camelcase Matching",
      "titleSlug": "camelcase-matching",
      "acRate": "62.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1081",
      "questionFrontendId": "1024",
      "title": "Video Stitching",
      "titleSlug": "video-stitching",
      "acRate": "51.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1085",
      "questionFrontendId": "1101",
      "title": "The Earliest Moment When Everyone Become Friends",
      "titleSlug": "the-earliest-moment-when-everyone-become-friends",
      "acRate": "64.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1087",
      "questionFrontendId": "1027",
      "title": "Longest Arithmetic Subsequence",
      "titleSlug": "longest-arithmetic-subsequence",
      "acRate": "49.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1097",
      "questionFrontendId": "1032",
      "title": "Stream of Characters",
      "titleSlug": "stream-of-characters",
      "acRate": "51.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1099",
      "questionFrontendId": "1102",
      "title": "Path With Maximum Minimum Value",
      "titleSlug": "path-with-maximum-minimum-value",
      "acRate": "53.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1101",
      "questionFrontendId": "1136",
      "title": "Parallel Courses",
      "titleSlug": "parallel-courses",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1106",
      "questionFrontendId": "1036",
      "title": "Escape a Large Maze",
      "titleSlug": "escape-a-large-maze",
      "acRate": "34.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1115",
      "questionFrontendId": "1037",
      "title": "Valid Boomerang",
      "titleSlug": "valid-boomerang",
      "acRate": "36.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1116",
      "questionFrontendId": "1161",
      "title": "Maximum Level Sum of a Binary Tree",
      "titleSlug": "maximum-level-sum-of-a-binary-tree",
      "acRate": "67.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1117",
      "questionFrontendId": "1162",
      "title": "As Far from Land as Possible",
      "titleSlug": "as-far-from-land-as-possible",
      "acRate": "51.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1118",
      "questionFrontendId": "1121",
      "title": "Divide Array Into Increasing Sequences",
      "titleSlug": "divide-array-into-increasing-sequences",
      "acRate": "61.3%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1121",
      "questionFrontendId": "1043",
      "title": "Partition Array for Maximum Sum",
      "titleSlug": "partition-array-for-maximum-sum",
      "acRate": "76.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1122",
      "questionFrontendId": "1044",
      "title": "Longest Duplicate Substring",
      "titleSlug": "longest-duplicate-substring",
      "acRate": "30.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Suffix Array",
          "slug": "suffix-array"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1123",
      "questionFrontendId": "1165",
      "title": "Single-Row Keyboard",
      "titleSlug": "single-row-keyboard",
      "acRate": "87.5%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1124",
      "questionFrontendId": "1153",
      "title": "String Transforms Into Another String",
      "titleSlug": "string-transforms-into-another-string",
      "acRate": "35.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1126",
      "questionFrontendId": "1167",
      "title": "Minimum Cost to Connect Sticks",
      "titleSlug": "minimum-cost-to-connect-sticks",
      "acRate": "69.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1127",
      "questionFrontendId": "1046",
      "title": "Last Stone Weight",
      "titleSlug": "last-stone-weight",
      "acRate": "65.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1128",
      "questionFrontendId": "1047",
      "title": "Remove All Adjacent Duplicates In String",
      "titleSlug": "remove-all-adjacent-duplicates-in-string",
      "acRate": "69.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1129",
      "questionFrontendId": "1048",
      "title": "Longest String Chain",
      "titleSlug": "longest-string-chain",
      "acRate": "61.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1134",
      "questionFrontendId": "1182",
      "title": "Shortest Distance to Target Color",
      "titleSlug": "shortest-distance-to-target-color",
      "acRate": "55.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1138",
      "questionFrontendId": "1052",
      "title": "Grumpy Bookstore Owner",
      "titleSlug": "grumpy-bookstore-owner",
      "acRate": "57.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1142",
      "questionFrontendId": "1197",
      "title": "Minimum Knight Moves",
      "titleSlug": "minimum-knight-moves",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1144",
      "questionFrontendId": "1168",
      "title": "Optimize Water Distribution in a Village",
      "titleSlug": "optimize-water-distribution-in-a-village",
      "acRate": "64.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Minimum Spanning Tree",
          "slug": "minimum-spanning-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1145",
      "questionFrontendId": "1074",
      "title": "Number of Submatrices That Sum to Target",
      "titleSlug": "number-of-submatrices-that-sum-to-target",
      "acRate": "74.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1153",
      "questionFrontendId": "1068",
      "title": "Product Sales Analysis I",
      "titleSlug": "product-sales-analysis-i",
      "acRate": "81.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1156",
      "questionFrontendId": "1078",
      "title": "Occurrences After Bigram",
      "titleSlug": "occurrences-after-bigram",
      "acRate": "63.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1159",
      "questionFrontendId": "1081",
      "title": "Smallest Subsequence of Distinct Characters",
      "titleSlug": "smallest-subsequence-of-distinct-characters",
      "acRate": "60.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1160",
      "questionFrontendId": "1079",
      "title": "Letter Tile Possibilities",
      "titleSlug": "letter-tile-possibilities",
      "acRate": "76.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1165",
      "questionFrontendId": "1229",
      "title": "Meeting Scheduler",
      "titleSlug": "meeting-scheduler",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1167",
      "questionFrontendId": "1199",
      "title": "Minimum Time to Build Blocks",
      "titleSlug": "minimum-time-to-build-blocks",
      "acRate": "45.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1168",
      "questionFrontendId": "1089",
      "title": "Duplicate Zeros",
      "titleSlug": "duplicate-zeros",
      "acRate": "51.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1169",
      "questionFrontendId": "1090",
      "title": "Largest Values From Labels",
      "titleSlug": "largest-values-from-labels",
      "acRate": "61.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1170",
      "questionFrontendId": "1092",
      "title": "Shortest Common Supersequence ",
      "titleSlug": "shortest-common-supersequence",
      "acRate": "59.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1171",
      "questionFrontendId": "1091",
      "title": "Shortest Path in Binary Matrix",
      "titleSlug": "shortest-path-in-binary-matrix",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1176",
      "questionFrontendId": "1244",
      "title": "Design A Leaderboard",
      "titleSlug": "design-a-leaderboard",
      "acRate": "68.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1177",
      "questionFrontendId": "1245",
      "title": "Tree Diameter",
      "titleSlug": "tree-diameter",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1185",
      "questionFrontendId": "1095",
      "title": "Find in Mountain Array",
      "titleSlug": "find-in-mountain-array",
      "acRate": "40.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1186",
      "questionFrontendId": "1117",
      "title": "Building H2O",
      "titleSlug": "building-h2o",
      "acRate": "56.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Concurrency",
          "slug": "concurrency"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1188",
      "questionFrontendId": "1096",
      "title": "Brace Expansion II",
      "titleSlug": "brace-expansion-ii",
      "acRate": "63.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1192",
      "questionFrontendId": "1231",
      "title": "Divide Chocolate",
      "titleSlug": "divide-chocolate",
      "acRate": "58.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1196",
      "questionFrontendId": "1105",
      "title": "Filling Bookcase Shelves",
      "titleSlug": "filling-bookcase-shelves",
      "acRate": "59.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1197",
      "questionFrontendId": "1106",
      "title": "Parsing A Boolean Expression",
      "titleSlug": "parsing-a-boolean-expression",
      "acRate": "59.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1200",
      "questionFrontendId": "1272",
      "title": "Remove Interval",
      "titleSlug": "remove-interval",
      "acRate": "65.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1203",
      "questionFrontendId": "1114",
      "title": "Print in Order",
      "titleSlug": "print-in-order",
      "acRate": "69.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Concurrency",
          "slug": "concurrency"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1207",
      "questionFrontendId": "1110",
      "title": "Delete Nodes And Return Forest",
      "titleSlug": "delete-nodes-and-return-forest",
      "acRate": "69.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1210",
      "questionFrontendId": "1619",
      "title": "Mean of Array After Removing Some Elements",
      "titleSlug": "mean-of-array-after-removing-some-elements",
      "acRate": "67.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1211",
      "questionFrontendId": "1286",
      "title": "Iterator for Combination",
      "titleSlug": "iterator-for-combination",
      "acRate": "73.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1220",
      "questionFrontendId": "1125",
      "title": "Smallest Sufficient Team",
      "titleSlug": "smallest-sufficient-team",
      "acRate": "56.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1221",
      "questionFrontendId": "1287",
      "title": "Element Appearing More Than 25% In Sorted Array",
      "titleSlug": "element-appearing-more-than-25-in-sorted-array",
      "acRate": "61.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1224",
      "questionFrontendId": "1289",
      "title": "Minimum Falling Path Sum II",
      "titleSlug": "minimum-falling-path-sum-ii",
      "acRate": "57.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1229",
      "questionFrontendId": "1129",
      "title": "Shortest Path with Alternating Colors",
      "titleSlug": "shortest-path-with-alternating-colors",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1232",
      "questionFrontendId": "1300",
      "title": "Sum of Mutated Array Closest to Target",
      "titleSlug": "sum-of-mutated-array-closest-to-target",
      "acRate": "44.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1238",
      "questionFrontendId": "1138",
      "title": "Alphabet Board Path",
      "titleSlug": "alphabet-board-path",
      "acRate": "51.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1241",
      "questionFrontendId": "1313",
      "title": "Decompress Run-Length Encoded List",
      "titleSlug": "decompress-run-length-encoded-list",
      "acRate": "85.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1242",
      "questionFrontendId": "1314",
      "title": "Matrix Block Sum",
      "titleSlug": "matrix-block-sum",
      "acRate": "75.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1244",
      "questionFrontendId": "1316",
      "title": "Distinct Echo Substrings",
      "titleSlug": "distinct-echo-substrings",
      "acRate": "50.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1247",
      "questionFrontendId": "1144",
      "title": "Decrease Elements To Make Array Zigzag",
      "titleSlug": "decrease-elements-to-make-array-zigzag",
      "acRate": "47.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1248",
      "questionFrontendId": "1145",
      "title": "Binary Tree Coloring Game",
      "titleSlug": "binary-tree-coloring-game",
      "acRate": "51.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1249",
      "questionFrontendId": "1146",
      "title": "Snapshot Array",
      "titleSlug": "snapshot-array",
      "acRate": "37.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1250",
      "questionFrontendId": "1143",
      "title": "Longest Common Subsequence",
      "titleSlug": "longest-common-subsequence",
      "acRate": "57.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1251",
      "questionFrontendId": "1147",
      "title": "Longest Chunked Palindrome Decomposition",
      "titleSlug": "longest-chunked-palindrome-decomposition",
      "acRate": "58.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1254",
      "questionFrontendId": "1302",
      "title": "Deepest Leaves Sum",
      "titleSlug": "deepest-leaves-sum",
      "acRate": "86.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1256",
      "questionFrontendId": "1331",
      "title": "Rank Transform of an Array",
      "titleSlug": "rank-transform-of-an-array",
      "acRate": "61.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1257",
      "questionFrontendId": "1632",
      "title": "Rank Transform of a Matrix",
      "titleSlug": "rank-transform-of-a-matrix",
      "acRate": "40.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1258",
      "questionFrontendId": "1148",
      "title": "Article Views I",
      "titleSlug": "article-views-i",
      "acRate": "74.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1263",
      "questionFrontendId": "1155",
      "title": "Number of Dice Rolls With Target Sum",
      "titleSlug": "number-of-dice-rolls-with-target-sum",
      "acRate": "60.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1267",
      "questionFrontendId": "1171",
      "title": "Remove Zero Sum Consecutive Nodes from Linked List",
      "titleSlug": "remove-zero-sum-consecutive-nodes-from-linked-list",
      "acRate": "52.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1273",
      "questionFrontendId": "1170",
      "title": "Compare Strings by Frequency of the Smallest Character",
      "titleSlug": "compare-strings-by-frequency-of-the-smallest-character",
      "acRate": "62.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1275",
      "questionFrontendId": "1361",
      "title": "Validate Binary Tree Nodes",
      "titleSlug": "validate-binary-tree-nodes",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1277",
      "questionFrontendId": "1363",
      "title": "Largest Multiple of Three",
      "titleSlug": "largest-multiple-of-three",
      "acRate": "32.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1278",
      "questionFrontendId": "1164",
      "title": "Product Price at a Given Date",
      "titleSlug": "product-price-at-a-given-date",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1286",
      "questionFrontendId": "1425",
      "title": "Constrained Subsequence Sum",
      "titleSlug": "constrained-subsequence-sum",
      "acRate": "56.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1287",
      "questionFrontendId": "1184",
      "title": "Distance Between Bus Stops",
      "titleSlug": "distance-between-bus-stops",
      "acRate": "54.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1296",
      "questionFrontendId": "1483",
      "title": "Kth Ancestor of a Tree Node",
      "titleSlug": "kth-ancestor-of-a-tree-node",
      "acRate": "34.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1305",
      "questionFrontendId": "1944",
      "title": "Number of Visible People in a Queue",
      "titleSlug": "number-of-visible-people-in-a-queue",
      "acRate": "69.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1308",
      "questionFrontendId": "1202",
      "title": "Smallest String With Swaps",
      "titleSlug": "smallest-string-with-swaps",
      "acRate": "58.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1310",
      "questionFrontendId": "2079",
      "title": "Watering Plants",
      "titleSlug": "watering-plants",
      "acRate": "79.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1319",
      "questionFrontendId": "1207",
      "title": "Unique Number of Occurrences",
      "titleSlug": "unique-number-of-occurrences",
      "acRate": "77.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1324",
      "questionFrontendId": "1706",
      "title": "Where Will the Ball Fall",
      "titleSlug": "where-will-the-ball-fall",
      "acRate": "71.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1325",
      "questionFrontendId": "1514",
      "title": "Path with Maximum Probability",
      "titleSlug": "path-with-maximum-probability",
      "acRate": "54.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1330",
      "questionFrontendId": "1218",
      "title": "Longest Arithmetic Subsequence of Given Difference",
      "titleSlug": "longest-arithmetic-subsequence-of-given-difference",
      "acRate": "54.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1331",
      "questionFrontendId": "1219",
      "title": "Path with Maximum Gold",
      "titleSlug": "path-with-maximum-gold",
      "acRate": "63.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1332",
      "questionFrontendId": "1220",
      "title": "Count Vowels Permutation",
      "titleSlug": "count-vowels-permutation",
      "acRate": "62.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1335",
      "questionFrontendId": "2226",
      "title": "Maximum Candies Allocated to K Children",
      "titleSlug": "maximum-candies-allocated-to-k-children",
      "acRate": "37.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1337",
      "questionFrontendId": "1206",
      "title": "Design Skiplist",
      "titleSlug": "design-skiplist",
      "acRate": "60.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1350",
      "questionFrontendId": "1233",
      "title": "Remove Sub-Folders from the Filesystem",
      "titleSlug": "remove-sub-folders-from-the-filesystem",
      "acRate": "65.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1352",
      "questionFrontendId": "1235",
      "title": "Maximum Profit in Job Scheduling",
      "titleSlug": "maximum-profit-in-job-scheduling",
      "acRate": "54.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1358",
      "questionFrontendId": "1237",
      "title": "Find Positive Integer Solution for a Given Equation",
      "titleSlug": "find-positive-integer-solution-for-a-given-equation",
      "acRate": "69.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1361",
      "questionFrontendId": "1240",
      "title": "Tiling a Rectangle with the Fewest Squares",
      "titleSlug": "tiling-a-rectangle-with-the-fewest-squares",
      "acRate": "54.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1364",
      "questionFrontendId": "1726",
      "title": "Tuple with Same Product",
      "titleSlug": "tuple-with-same-product",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1371",
      "questionFrontendId": "1249",
      "title": "Minimum Remove to Make Valid Parentheses",
      "titleSlug": "minimum-remove-to-make-valid-parentheses",
      "acRate": "67.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1380",
      "questionFrontendId": "1254",
      "title": "Number of Closed Islands",
      "titleSlug": "number-of-closed-islands",
      "acRate": "66.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1381",
      "questionFrontendId": "1255",
      "title": "Maximum Score Words Formed by Letters",
      "titleSlug": "maximum-score-words-formed-by-letters",
      "acRate": "72.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1384",
      "questionFrontendId": "1618",
      "title": "Maximum Font to Fit a Sentence in a Screen",
      "titleSlug": "maximum-font-to-fit-a-sentence-in-a-screen",
      "acRate": "60.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1387",
      "questionFrontendId": "1261",
      "title": "Find Elements in a Contaminated Binary Tree",
      "titleSlug": "find-elements-in-a-contaminated-binary-tree",
      "acRate": "77.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1389",
      "questionFrontendId": "1263",
      "title": "Minimum Moves to Move a Box to Their Target Location",
      "titleSlug": "minimum-moves-to-move-a-box-to-their-target-location",
      "acRate": "49.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1390",
      "questionFrontendId": "1251",
      "title": "Average Selling Price",
      "titleSlug": "average-selling-price",
      "acRate": "42.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1392",
      "questionFrontendId": "2215",
      "title": "Find the Difference of Two Arrays",
      "titleSlug": "find-the-difference-of-two-arrays",
      "acRate": "78.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1393",
      "questionFrontendId": "2218",
      "title": "Maximum Value of K Coins From Piles",
      "titleSlug": "maximum-value-of-k-coins-from-piles",
      "acRate": "60.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1394",
      "questionFrontendId": "2304",
      "title": "Minimum Path Cost in a Grid",
      "titleSlug": "minimum-path-cost-in-a-grid",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1396",
      "questionFrontendId": "1267",
      "title": "Count Servers that Communicate",
      "titleSlug": "count-servers-that-communicate",
      "acRate": "60.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1397",
      "questionFrontendId": "1268",
      "title": "Search Suggestions System",
      "titleSlug": "search-suggestions-system",
      "acRate": "65.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1398",
      "questionFrontendId": "1269",
      "title": "Number of Ways to Stay in the Same Place After Some Steps",
      "titleSlug": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
      "acRate": "50.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1400",
      "questionFrontendId": "1275",
      "title": "Find Winner on a Tic Tac Toe Game",
      "titleSlug": "find-winner-on-a-tic-tac-toe-game",
      "acRate": "53.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1402",
      "questionFrontendId": "1277",
      "title": "Count Square Submatrices with All Ones",
      "titleSlug": "count-square-submatrices-with-all-ones",
      "acRate": "75.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1405",
      "questionFrontendId": "1270",
      "title": "All People Report to the Given Manager",
      "titleSlug": "all-people-report-to-the-given-manager",
      "acRate": "84.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1406",
      "questionFrontendId": "1281",
      "title": "Subtract the Product and Sum of Digits of an Integer",
      "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
      "acRate": "86.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1408",
      "questionFrontendId": "1283",
      "title": "Find the Smallest Divisor Given a Threshold",
      "titleSlug": "find-the-smallest-divisor-given-a-threshold",
      "acRate": "59.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1409",
      "questionFrontendId": "1284",
      "title": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix",
      "titleSlug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
      "acRate": "72.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1413",
      "questionFrontendId": "1292",
      "title": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold",
      "titleSlug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
      "acRate": "53.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1414",
      "questionFrontendId": "1293",
      "title": "Shortest Path in a Grid with Obstacles Elimination",
      "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
      "acRate": "45.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1418",
      "questionFrontendId": "2305",
      "title": "Fair Distribution of Cookies",
      "titleSlug": "fair-distribution-of-cookies",
      "acRate": "69.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1422",
      "questionFrontendId": "1296",
      "title": "Divide Array in Sets of K Consecutive Numbers",
      "titleSlug": "divide-array-in-sets-of-k-consecutive-numbers",
      "acRate": "56.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1428",
      "questionFrontendId": "1306",
      "title": "Jump Game III",
      "titleSlug": "jump-game-iii",
      "acRate": "64.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1431",
      "questionFrontendId": "2192",
      "title": "All Ancestors of a Node in a Directed Acyclic Graph",
      "titleSlug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
      "acRate": "51.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1443",
      "questionFrontendId": "1320",
      "title": "Minimum Distance to Type a Word Using Two Fingers",
      "titleSlug": "minimum-distance-to-type-a-word-using-two-fingers",
      "acRate": "59.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1447",
      "questionFrontendId": "1345",
      "title": "Jump Game IV",
      "titleSlug": "jump-game-iv",
      "acRate": "46.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1463",
      "questionFrontendId": "1337",
      "title": "The K Weakest Rows in a Matrix",
      "titleSlug": "the-k-weakest-rows-in-a-matrix",
      "acRate": "73.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1468",
      "questionFrontendId": "1346",
      "title": "Check If N and Its Double Exist",
      "titleSlug": "check-if-n-and-its-double-exist",
      "acRate": "37.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1477",
      "questionFrontendId": "1352",
      "title": "Product of the Last K Numbers",
      "titleSlug": "product-of-the-last-k-numbers",
      "acRate": "51.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1478",
      "questionFrontendId": "1353",
      "title": "Maximum Number of Events That Can Be Attended",
      "titleSlug": "maximum-number-of-events-that-can-be-attended",
      "acRate": "32.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1482",
      "questionFrontendId": "1365",
      "title": "How Many Numbers Are Smaller Than the Current Number",
      "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
      "acRate": "86.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1483",
      "questionFrontendId": "1366",
      "title": "Rank Teams by Votes",
      "titleSlug": "rank-teams-by-votes",
      "acRate": "58.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1485",
      "questionFrontendId": "1368",
      "title": "Minimum Cost to Make at Least One Valid Path in a Grid",
      "titleSlug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid",
      "acRate": "61.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1487",
      "questionFrontendId": "1386",
      "title": "Cinema Seat Allocation",
      "titleSlug": "cinema-seat-allocation",
      "acRate": "41.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1488",
      "questionFrontendId": "1387",
      "title": "Sort Integers by The Power Value",
      "titleSlug": "sort-integers-by-the-power-value",
      "acRate": "70.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1489",
      "questionFrontendId": "1388",
      "title": "Pizza With 3n Slices",
      "titleSlug": "pizza-with-3n-slices",
      "acRate": "51.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1492",
      "questionFrontendId": "1376",
      "title": "Time Needed to Inform All Employees",
      "titleSlug": "time-needed-to-inform-all-employees",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1493",
      "questionFrontendId": "1377",
      "title": "Frog Position After T Seconds",
      "titleSlug": "frog-position-after-t-seconds",
      "acRate": "35.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1499",
      "questionFrontendId": "1383",
      "title": "Maximum Performance of a Team",
      "titleSlug": "maximum-performance-of-a-team",
      "acRate": "47.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1501",
      "questionFrontendId": "1401",
      "title": "Circle and Rectangle Overlapping",
      "titleSlug": "circle-and-rectangle-overlapping",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1508",
      "questionFrontendId": "1392",
      "title": "Longest Happy Prefix",
      "titleSlug": "longest-happy-prefix",
      "acRate": "45.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1509",
      "questionFrontendId": "1378",
      "title": "Replace Employee ID With The Unique Identifier",
      "titleSlug": "replace-employee-id-with-the-unique-identifier",
      "acRate": "82.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1515",
      "questionFrontendId": "1414",
      "title": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
      "titleSlug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
      "acRate": "65.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1522",
      "questionFrontendId": "1406",
      "title": "Stone Game III",
      "titleSlug": "stone-game-iii",
      "acRate": "64.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1526",
      "questionFrontendId": "1410",
      "title": "HTML Entity Parser",
      "titleSlug": "html-entity-parser",
      "acRate": "50.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1528",
      "questionFrontendId": "1431",
      "title": "Kids With the Greatest Number of Candies",
      "titleSlug": "kids-with-the-greatest-number-of-candies",
      "acRate": "87.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1537",
      "questionFrontendId": "1422",
      "title": "Maximum Score After Splitting a String",
      "titleSlug": "maximum-score-after-splitting-a-string",
      "acRate": "62.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1538",
      "questionFrontendId": "1423",
      "title": "Maximum Points You Can Obtain from Cards",
      "titleSlug": "maximum-points-you-can-obtain-from-cards",
      "acRate": "52.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1539",
      "questionFrontendId": "1424",
      "title": "Diagonal Traverse II",
      "titleSlug": "diagonal-traverse-ii",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1543",
      "questionFrontendId": "1447",
      "title": "Simplified Fractions",
      "titleSlug": "simplified-fractions",
      "acRate": "66.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1544",
      "questionFrontendId": "1448",
      "title": "Count Good Nodes in Binary Tree",
      "titleSlug": "count-good-nodes-in-binary-tree",
      "acRate": "73.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1545",
      "questionFrontendId": "1449",
      "title": "Form Largest Integer With Digits That Add up to Target",
      "titleSlug": "form-largest-integer-with-digits-that-add-up-to-target",
      "acRate": "48.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1549",
      "questionFrontendId": "1438",
      "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
      "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
      "acRate": "49.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1552",
      "questionFrontendId": "1441",
      "title": "Build an Array With Stack Operations",
      "titleSlug": "build-an-array-with-stack-operations",
      "acRate": "79.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1555",
      "questionFrontendId": "1444",
      "title": "Number of Ways of Cutting a Pizza",
      "titleSlug": "number-of-ways-of-cutting-a-pizza",
      "acRate": "62.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1557",
      "questionFrontendId": "1461",
      "title": "Check If a String Contains All Binary Codes of Size K",
      "titleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k",
      "acRate": "56.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1559",
      "questionFrontendId": "1463",
      "title": "Cherry Pickup II",
      "titleSlug": "cherry-pickup-ii",
      "acRate": "71.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1562",
      "questionFrontendId": "1452",
      "title": "People Whose List of Favorite Companies Is Not a Subset of Another List",
      "titleSlug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1573",
      "questionFrontendId": "1477",
      "title": "Find Two Non-overlapping Sub-arrays Each With Target Sum",
      "titleSlug": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
      "acRate": "36.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1580",
      "questionFrontendId": "1470",
      "title": "Shuffle the Array",
      "titleSlug": "shuffle-the-array",
      "acRate": "88.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1581",
      "questionFrontendId": "1471",
      "title": "The k Strongest Values in an Array",
      "titleSlug": "the-k-strongest-values-in-an-array",
      "acRate": "61.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1582",
      "questionFrontendId": "1472",
      "title": "Design Browser History",
      "titleSlug": "design-browser-history",
      "acRate": "77.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1583",
      "questionFrontendId": "1473",
      "title": "Paint House III",
      "titleSlug": "paint-house-iii",
      "acRate": "61.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1584",
      "questionFrontendId": "1491",
      "title": "Average Salary Excluding the Minimum and Maximum Salary",
      "titleSlug": "average-salary-excluding-the-minimum-and-maximum-salary",
      "acRate": "63.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1587",
      "questionFrontendId": "1494",
      "title": "Parallel Courses II",
      "titleSlug": "parallel-courses-ii",
      "acRate": "29.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1603",
      "questionFrontendId": "1480",
      "title": "Running Sum of 1d Array",
      "titleSlug": "running-sum-of-1d-array",
      "acRate": "86.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1605",
      "questionFrontendId": "1482",
      "title": "Minimum Number of Days to Make m Bouquets",
      "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
      "acRate": "51.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1612",
      "questionFrontendId": "1488",
      "title": "Avoid Flood in The City",
      "titleSlug": "avoid-flood-in-the-city",
      "acRate": "27.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1615",
      "questionFrontendId": "1508",
      "title": "Range Sum of Sorted Subarray Sums",
      "titleSlug": "range-sum-of-sorted-subarray-sums",
      "acRate": "58.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1616",
      "questionFrontendId": "1509",
      "title": "Minimum Difference Between Largest and Smallest Value in Three Moves",
      "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
      "acRate": "55.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1621",
      "questionFrontendId": "1498",
      "title": "Number of Subsequences That Satisfy the Given Sum Condition",
      "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
      "acRate": "43.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1622",
      "questionFrontendId": "1499",
      "title": "Max Value of Equation",
      "titleSlug": "max-value-of-equation",
      "acRate": "44.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1627",
      "questionFrontendId": "1503",
      "title": "Last Moment Before All Ants Fall Out of a Plank",
      "titleSlug": "last-moment-before-all-ants-fall-out-of-a-plank",
      "acRate": "68.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1628",
      "questionFrontendId": "1504",
      "title": "Count Submatrices With All Ones",
      "titleSlug": "count-submatrices-with-all-ones",
      "acRate": "57.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1630",
      "questionFrontendId": "1523",
      "title": "Count Odd Numbers in an Interval Range",
      "titleSlug": "count-odd-numbers-in-an-interval-range",
      "acRate": "49.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1632",
      "questionFrontendId": "1525",
      "title": "Number of Good Ways to Split a String",
      "titleSlug": "number-of-good-ways-to-split-a-string",
      "acRate": "68.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1633",
      "questionFrontendId": "1526",
      "title": "Minimum Number of Increments on Subarrays to Form a Target Array",
      "titleSlug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array",
      "acRate": "69.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1635",
      "questionFrontendId": "1512",
      "title": "Number of Good Pairs",
      "titleSlug": "number-of-good-pairs",
      "acRate": "88.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1636",
      "questionFrontendId": "1513",
      "title": "Number of Substrings With Only 1s",
      "titleSlug": "number-of-substrings-with-only-1s",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1646",
      "questionFrontendId": "1539",
      "title": "Kth Missing Positive Number",
      "titleSlug": "kth-missing-positive-number",
      "acRate": "59.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1649",
      "questionFrontendId": "1546",
      "title": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",
      "titleSlug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
      "acRate": "47.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1650",
      "questionFrontendId": "1506",
      "title": "Find Root of N-Ary Tree",
      "titleSlug": "find-root-of-n-ary-tree",
      "acRate": "78.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1651",
      "questionFrontendId": "1528",
      "title": "Shuffle String",
      "titleSlug": "shuffle-string",
      "acRate": "84.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1653",
      "questionFrontendId": "1530",
      "title": "Number of Good Leaf Nodes Pairs",
      "titleSlug": "number-of-good-leaf-nodes-pairs",
      "acRate": "63.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1655",
      "questionFrontendId": "1516",
      "title": "Move Sub-Tree of N-Ary Tree",
      "titleSlug": "move-sub-tree-of-n-ary-tree",
      "acRate": "62.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1661",
      "questionFrontendId": "1557",
      "title": "Minimum Number of Vertices to Reach All Nodes",
      "titleSlug": "minimum-number-of-vertices-to-reach-all-nodes",
      "acRate": "81.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1666",
      "questionFrontendId": "1544",
      "title": "Make The String Great",
      "titleSlug": "make-the-string-great",
      "acRate": "63.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1669",
      "questionFrontendId": "1547",
      "title": "Minimum Cost to Cut a Stick",
      "titleSlug": "minimum-cost-to-cut-a-stick",
      "acRate": "61.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1676",
      "questionFrontendId": "1553",
      "title": "Minimum Number of Days to Eat N Oranges",
      "titleSlug": "minimum-number-of-days-to-eat-n-oranges",
      "acRate": "35.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1677",
      "questionFrontendId": "1572",
      "title": "Matrix Diagonal Sum",
      "titleSlug": "matrix-diagonal-sum",
      "acRate": "82.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1681",
      "questionFrontendId": "1538",
      "title": "Guess the Majority in a Hidden Array",
      "titleSlug": "guess-the-majority-in-a-hidden-array",
      "acRate": "70.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1684",
      "questionFrontendId": "1562",
      "title": "Find Latest Group of Size M",
      "titleSlug": "find-latest-group-of-size-m",
      "acRate": "42.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1687",
      "questionFrontendId": "1548",
      "title": "The Most Similar Path in a Graph",
      "titleSlug": "the-most-similar-path-in-a-graph",
      "acRate": "59.1%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1692",
      "questionFrontendId": "1569",
      "title": "Number of Ways to Reorder Array to Get Same BST",
      "titleSlug": "number-of-ways-to-reorder-array-to-get-same-bst",
      "acRate": "53.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1696",
      "questionFrontendId": "1591",
      "title": "Strange Printer II",
      "titleSlug": "strange-printer-ii",
      "acRate": "58.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1697",
      "questionFrontendId": "1554",
      "title": "Strings Differ by One Character",
      "titleSlug": "strings-differ-by-one-character",
      "acRate": "41.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1701",
      "questionFrontendId": "1579",
      "title": "Remove Max Number of Edges to Keep Graph Fully Traversable",
      "titleSlug": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
      "acRate": "64.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1703",
      "questionFrontendId": "1564",
      "title": "Put Boxes Into the Warehouse I",
      "titleSlug": "put-boxes-into-the-warehouse-i",
      "acRate": "67.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1704",
      "questionFrontendId": "1582",
      "title": "Special Positions in a Binary Matrix",
      "titleSlug": "special-positions-in-a-binary-matrix",
      "acRate": "68.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1707",
      "questionFrontendId": "1585",
      "title": "Check If String Is Transformable With Substring Sort Operations",
      "titleSlug": "check-if-string-is-transformable-with-substring-sort-operations",
      "acRate": "48.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1710",
      "questionFrontendId": "1606",
      "title": "Find Servers That Handled Most Number of Requests",
      "titleSlug": "find-servers-that-handled-most-number-of-requests",
      "acRate": "43.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1711",
      "questionFrontendId": "1605",
      "title": "Find Valid Matrix Given Row and Column Sums",
      "titleSlug": "find-valid-matrix-given-row-and-column-sums",
      "acRate": "77.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1713",
      "questionFrontendId": "1570",
      "title": "Dot Product of Two Sparse Vectors",
      "titleSlug": "dot-product-of-two-sparse-vectors",
      "acRate": "89.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1714",
      "questionFrontendId": "1592",
      "title": "Rearrange Spaces Between Words",
      "titleSlug": "rearrange-spaces-between-words",
      "acRate": "43.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1715",
      "questionFrontendId": "1593",
      "title": "Split a String Into the Max Number of Unique Substrings",
      "titleSlug": "split-a-string-into-the-max-number-of-unique-substrings",
      "acRate": "56.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1716",
      "questionFrontendId": "1594",
      "title": "Maximum Non Negative Product in a Matrix",
      "titleSlug": "maximum-non-negative-product-in-a-matrix",
      "acRate": "33.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1717",
      "questionFrontendId": "1595",
      "title": "Minimum Cost to Connect Two Groups of Points",
      "titleSlug": "minimum-cost-to-connect-two-groups-of-points",
      "acRate": "47.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1719",
      "questionFrontendId": "1580",
      "title": "Put Boxes Into the Warehouse II",
      "titleSlug": "put-boxes-into-the-warehouse-ii",
      "acRate": "63.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1722",
      "questionFrontendId": "1600",
      "title": "Throne Inheritance",
      "titleSlug": "throne-inheritance",
      "acRate": "64.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1723",
      "questionFrontendId": "1601",
      "title": "Maximum Number of Achievable Transfer Requests",
      "titleSlug": "maximum-number-of-achievable-transfer-requests",
      "acRate": "64.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1727",
      "questionFrontendId": "1728",
      "title": "Cat and Mouse II",
      "titleSlug": "cat-and-mouse-ii",
      "acRate": "39.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1728",
      "questionFrontendId": "1622",
      "title": "Fancy Sequence",
      "titleSlug": "fancy-sequence",
      "acRate": "17.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1730",
      "questionFrontendId": "1608",
      "title": "Special Array With X Elements Greater Than or Equal X",
      "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
      "acRate": "60.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1733",
      "questionFrontendId": "1610",
      "title": "Maximum Number of Visible Points",
      "titleSlug": "maximum-number-of-visible-points",
      "acRate": "37.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1736",
      "questionFrontendId": "1597",
      "title": "Build Binary Expression Tree From Infix Expression",
      "titleSlug": "build-binary-expression-tree-from-infix-expression",
      "acRate": "62.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1739",
      "questionFrontendId": "1616",
      "title": "Split Two Strings to Make Palindrome",
      "titleSlug": "split-two-strings-to-make-palindrome",
      "acRate": "30.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1744",
      "questionFrontendId": "1639",
      "title": "Number of Ways to Form a Target String Given a Dictionary",
      "titleSlug": "number-of-ways-to-form-a-target-string-given-a-dictionary",
      "acRate": "51.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1745",
      "questionFrontendId": "1602",
      "title": "Find Nearest Right Node in Binary Tree",
      "titleSlug": "find-nearest-right-node-in-binary-tree",
      "acRate": "75.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1750",
      "questionFrontendId": "1612",
      "title": "Check If Two Expression Trees are Equivalent",
      "titleSlug": "check-if-two-expression-trees-are-equivalent",
      "acRate": "70.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1752",
      "questionFrontendId": "1630",
      "title": "Arithmetic Subarrays",
      "titleSlug": "arithmetic-subarrays",
      "acRate": "83.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1753",
      "questionFrontendId": "1631",
      "title": "Path With Minimum Effort",
      "titleSlug": "path-with-minimum-effort",
      "acRate": "59.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1758",
      "questionFrontendId": "1655",
      "title": "Distribute Repeating Integers",
      "titleSlug": "distribute-repeating-integers",
      "acRate": "39.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1762",
      "questionFrontendId": "1642",
      "title": "Furthest Building You Can Reach",
      "titleSlug": "furthest-building-you-can-reach",
      "acRate": "49.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1765",
      "questionFrontendId": "1669",
      "title": "Merge In Between Linked Lists",
      "titleSlug": "merge-in-between-linked-lists",
      "acRate": "81.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1770",
      "questionFrontendId": "1647",
      "title": "Minimum Deletions to Make Character Frequencies Unique",
      "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
      "acRate": "61.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1776",
      "questionFrontendId": "1658",
      "title": "Minimum Operations to Reduce X to Zero",
      "titleSlug": "minimum-operations-to-reduce-x-to-zero",
      "acRate": "39.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1777",
      "questionFrontendId": "1657",
      "title": "Determine if Two Strings Are Close",
      "titleSlug": "determine-if-two-strings-are-close",
      "acRate": "55.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1791",
      "questionFrontendId": "1672",
      "title": "Richest Customer Wealth",
      "titleSlug": "richest-customer-wealth",
      "acRate": "87.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1792",
      "questionFrontendId": "1673",
      "title": "Find the Most Competitive Subsequence",
      "titleSlug": "find-the-most-competitive-subsequence",
      "acRate": "50.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1796",
      "questionFrontendId": "1660",
      "title": "Correct a Binary Tree",
      "titleSlug": "correct-a-binary-tree",
      "acRate": "74.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1798",
      "questionFrontendId": "1679",
      "title": "Max Number of K-Sum Pairs",
      "titleSlug": "max-number-of-k-sum-pairs",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1801",
      "questionFrontendId": "1661",
      "title": "Average Time of Process per Machine",
      "titleSlug": "average-time-of-process-per-machine",
      "acRate": "66.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1805",
      "questionFrontendId": "1703",
      "title": "Minimum Adjacent Swaps for K Consecutive Ones",
      "titleSlug": "minimum-adjacent-swaps-for-k-consecutive-ones",
      "acRate": "42.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1810",
      "questionFrontendId": "1666",
      "title": "Change the Root of a Binary Tree",
      "titleSlug": "change-the-root-of-a-binary-tree",
      "acRate": "73.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1814",
      "questionFrontendId": "1696",
      "title": "Jump Game VI",
      "titleSlug": "jump-game-vi",
      "acRate": "45.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1815",
      "questionFrontendId": "1697",
      "title": "Checking Existence of Edge Length Limited Paths",
      "titleSlug": "checking-existence-of-edge-length-limited-paths",
      "acRate": "62.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1818",
      "questionFrontendId": "1717",
      "title": "Maximum Score From Removing Substrings",
      "titleSlug": "maximum-score-from-removing-substrings",
      "acRate": "46.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1826",
      "questionFrontendId": "1707",
      "title": "Maximum XOR With an Element From Array",
      "titleSlug": "maximum-xor-with-an-element-from-array",
      "acRate": "49.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1828",
      "questionFrontendId": "1692",
      "title": "Count Ways to Distribute Candies",
      "titleSlug": "count-ways-to-distribute-candies",
      "acRate": "63.1%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1829",
      "questionFrontendId": "1710",
      "title": "Maximum Units on a Truck",
      "titleSlug": "maximum-units-on-a-truck",
      "acRate": "73.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1832",
      "questionFrontendId": "1713",
      "title": "Minimum Operations to Make a Subsequence",
      "titleSlug": "minimum-operations-to-make-a-subsequence",
      "acRate": "48.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1839",
      "questionFrontendId": "1720",
      "title": "Decode XORed Array",
      "titleSlug": "decode-xored-array",
      "acRate": "86.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1840",
      "questionFrontendId": "1722",
      "title": "Minimize Hamming Distance After Swap Operations",
      "titleSlug": "minimize-hamming-distance-after-swap-operations",
      "acRate": "48.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1845",
      "questionFrontendId": "1727",
      "title": "Largest Submatrix With Rearrangements",
      "titleSlug": "largest-submatrix-with-rearrangements",
      "acRate": "75.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1847",
      "questionFrontendId": "1708",
      "title": "Largest Subarray Length K",
      "titleSlug": "largest-subarray-length-k",
      "acRate": "64.5%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1858",
      "questionFrontendId": "1736",
      "title": "Latest Time by Replacing Hidden Digits",
      "titleSlug": "latest-time-by-replacing-hidden-digits",
      "acRate": "42.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1859",
      "questionFrontendId": "1737",
      "title": "Change Minimum Characters to Satisfy One of Three Conditions",
      "titleSlug": "change-minimum-characters-to-satisfy-one-of-three-conditions",
      "acRate": "36.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1860",
      "questionFrontendId": "1738",
      "title": "Find Kth Largest XOR Coordinate Value",
      "titleSlug": "find-kth-largest-xor-coordinate-value",
      "acRate": "61.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1865",
      "questionFrontendId": "1724",
      "title": "Checking Existence of Edge Length Limited Paths II",
      "titleSlug": "checking-existence-of-edge-length-limited-paths-ii",
      "acRate": "52.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Minimum Spanning Tree",
          "slug": "minimum-spanning-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1875",
      "questionFrontendId": "1766",
      "title": "Tree of Coprimes",
      "titleSlug": "tree-of-coprimes",
      "acRate": "40.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1876",
      "questionFrontendId": "1765",
      "title": "Map of Highest Peak",
      "titleSlug": "map-of-highest-peak",
      "acRate": "61.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1879",
      "questionFrontendId": "1753",
      "title": "Maximum Score From Removing Stones",
      "titleSlug": "maximum-score-from-removing-stones",
      "acRate": "67.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1883",
      "questionFrontendId": "1740",
      "title": "Find Distance in a Binary Tree",
      "titleSlug": "find-distance-in-a-binary-tree",
      "acRate": "70.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1890",
      "questionFrontendId": "1781",
      "title": "Sum of Beauty of All Substrings",
      "titleSlug": "sum-of-beauty-of-all-substrings",
      "acRate": "64.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1894",
      "questionFrontendId": "1768",
      "title": "Merge Strings Alternately",
      "titleSlug": "merge-strings-alternately",
      "acRate": "79.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1895",
      "questionFrontendId": "1769",
      "title": "Minimum Number of Operations to Move All Balls to Each Box",
      "titleSlug": "minimum-number-of-operations-to-move-all-balls-to-each-box",
      "acRate": "85.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1896",
      "questionFrontendId": "1770",
      "title": "Maximum Score from Performing Multiplication Operations",
      "titleSlug": "maximum-score-from-performing-multiplication-operations",
      "acRate": "39.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1900",
      "questionFrontendId": "1774",
      "title": "Closest Dessert Cost",
      "titleSlug": "closest-dessert-cost",
      "acRate": "47.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1902",
      "questionFrontendId": "1776",
      "title": "Car Fleet II",
      "titleSlug": "car-fleet-ii",
      "acRate": "54.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1903",
      "questionFrontendId": "1756",
      "title": "Design Most Recently Used Queue",
      "titleSlug": "design-most-recently-used-queue",
      "acRate": "76.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1907",
      "questionFrontendId": "1803",
      "title": "Count Pairs With XOR in a Range",
      "titleSlug": "count-pairs-with-xor-in-a-range",
      "acRate": "48.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1908",
      "questionFrontendId": "1757",
      "title": "Recyclable and Low Fat Products",
      "titleSlug": "recyclable-and-low-fat-products",
      "acRate": "89.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1912",
      "questionFrontendId": "1786",
      "title": "Number of Restricted Paths From First to Last Node",
      "titleSlug": "number-of-restricted-paths-from-first-to-last-node",
      "acRate": "38.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1914",
      "questionFrontendId": "1767",
      "title": "Find the Subtasks That Did Not Execute",
      "titleSlug": "find-the-subtasks-that-did-not-execute",
      "acRate": "77.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1918",
      "questionFrontendId": "1793",
      "title": "Maximum Score of a Good Subarray",
      "titleSlug": "maximum-score-of-a-good-subarray",
      "acRate": "64.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1923",
      "questionFrontendId": "1813",
      "title": "Sentence Similarity III",
      "titleSlug": "sentence-similarity-iii",
      "acRate": "33.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1924",
      "questionFrontendId": "1815",
      "title": "Maximum Number of Groups Getting Fresh Donuts",
      "titleSlug": "maximum-number-of-groups-getting-fresh-donuts",
      "acRate": "40.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1934",
      "questionFrontendId": "1807",
      "title": "Evaluate the Bracket Pairs of a String",
      "titleSlug": "evaluate-the-bracket-pairs-of-a-string",
      "acRate": "66.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1935",
      "questionFrontendId": "1806",
      "title": "Minimum Number of Operations to Reinitialize a Permutation",
      "titleSlug": "minimum-number-of-operations-to-reinitialize-a-permutation",
      "acRate": "72.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1939",
      "questionFrontendId": "1828",
      "title": "Queries on Number of Points Inside a Circle",
      "titleSlug": "queries-on-number-of-points-inside-a-circle",
      "acRate": "86.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1943",
      "questionFrontendId": "1794",
      "title": "Count Pairs of Equal Substrings With Minimum Difference",
      "titleSlug": "count-pairs-of-equal-substrings-with-minimum-difference",
      "acRate": "65.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1949",
      "questionFrontendId": "1804",
      "title": "Implement Trie II (Prefix Tree)",
      "titleSlug": "implement-trie-ii-prefix-tree",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1950",
      "questionFrontendId": "1822",
      "title": "Sign of the Product of an Array",
      "titleSlug": "sign-of-the-product-of-an-array",
      "acRate": "65.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1951",
      "questionFrontendId": "1823",
      "title": "Find the Winner of the Circular Game",
      "titleSlug": "find-the-winner-of-the-circular-game",
      "acRate": "78.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1953",
      "questionFrontendId": "1825",
      "title": "Finding MK Average",
      "titleSlug": "finding-mk-average",
      "acRate": "36.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1954",
      "questionFrontendId": "1844",
      "title": "Replace All Digits with Characters",
      "titleSlug": "replace-all-digits-with-characters",
      "acRate": "80.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1959",
      "questionFrontendId": "1810",
      "title": "Minimum Path Cost in a Hidden Grid",
      "titleSlug": "minimum-path-cost-in-a-hidden-grid",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1960",
      "questionFrontendId": "1832",
      "title": "Check if the Sentence Is Pangram",
      "titleSlug": "check-if-the-sentence-is-pangram",
      "acRate": "83.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1962",
      "questionFrontendId": "1834",
      "title": "Single-Threaded CPU",
      "titleSlug": "single-threaded-cpu",
      "acRate": "45.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1966",
      "questionFrontendId": "1838",
      "title": "Frequency of the Most Frequent Element",
      "titleSlug": "frequency-of-the-most-frequent-element",
      "acRate": "45.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1969",
      "questionFrontendId": "1820",
      "title": "Maximum Number of Accepted Invitations",
      "titleSlug": "maximum-number-of-accepted-invitations",
      "acRate": "49.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1974",
      "questionFrontendId": "1821",
      "title": "Find Customers With Positive Revenue this Year",
      "titleSlug": "find-customers-with-positive-revenue-this-year",
      "acRate": "88.0%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1977",
      "questionFrontendId": "1851",
      "title": "Minimum Interval to Include Each Query",
      "titleSlug": "minimum-interval-to-include-each-query",
      "acRate": "49.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Line Sweep",
          "slug": "line-sweep"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1978",
      "questionFrontendId": "1850",
      "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
      "titleSlug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
      "acRate": "71.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1983",
      "questionFrontendId": "1854",
      "title": "Maximum Population Year",
      "titleSlug": "maximum-population-year",
      "acRate": "60.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1986",
      "questionFrontendId": "1857",
      "title": "Largest Color Value in a Directed Graph",
      "titleSlug": "largest-color-value-in-a-directed-graph",
      "acRate": "50.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1996",
      "questionFrontendId": "1866",
      "title": "Number of Ways to Rearrange Sticks With K Sticks Visible",
      "titleSlug": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
      "acRate": "56.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2000",
      "questionFrontendId": "1870",
      "title": "Minimum Speed to Arrive on Time",
      "titleSlug": "minimum-speed-to-arrive-on-time",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2001",
      "questionFrontendId": "1871",
      "title": "Jump Game VII",
      "titleSlug": "jump-game-vii",
      "acRate": "24.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2008",
      "questionFrontendId": "1896",
      "title": "Minimum Cost to Change the Final Value of Expression",
      "titleSlug": "minimum-cost-to-change-the-final-value-of-expression",
      "acRate": "53.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2009",
      "questionFrontendId": "1858",
      "title": "Longest Word With All Prefixes",
      "titleSlug": "longest-word-with-all-prefixes",
      "acRate": "68.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2012",
      "questionFrontendId": "1882",
      "title": "Process Tasks Using Servers",
      "titleSlug": "process-tasks-using-servers",
      "acRate": "40.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2013",
      "questionFrontendId": "1883",
      "title": "Minimum Skips to Arrive at Meeting On Time",
      "titleSlug": "minimum-skips-to-arrive-at-meeting-on-time",
      "acRate": "37.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2017",
      "questionFrontendId": "1888",
      "title": "Minimum Number of Flips to Make the Binary String Alternating",
      "titleSlug": "minimum-number-of-flips-to-make-the-binary-string-alternating",
      "acRate": "39.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2018",
      "questionFrontendId": "1889",
      "title": "Minimum Space Wasted From Packaging",
      "titleSlug": "minimum-space-wasted-from-packaging",
      "acRate": "31.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2026",
      "questionFrontendId": "1899",
      "title": "Merge Triplets to Form Target Triplet",
      "titleSlug": "merge-triplets-to-form-target-triplet",
      "acRate": "65.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2028",
      "questionFrontendId": "1900",
      "title": "The Earliest and Latest Rounds Where Players Compete",
      "titleSlug": "the-earliest-and-latest-rounds-where-players-compete",
      "acRate": "50.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2029",
      "questionFrontendId": "1874",
      "title": "Minimize Product Sum of Two Arrays",
      "titleSlug": "minimize-product-sum-of-two-arrays",
      "acRate": "89.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2034",
      "questionFrontendId": "1906",
      "title": "Minimum Absolute Difference Queries",
      "titleSlug": "minimum-absolute-difference-queries",
      "acRate": "44.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2036",
      "questionFrontendId": "1885",
      "title": "Count Pairs in Two Arrays",
      "titleSlug": "count-pairs-in-two-arrays",
      "acRate": "58.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2038",
      "questionFrontendId": "1926",
      "title": "Nearest Exit from Entrance in Maze",
      "titleSlug": "nearest-exit-from-entrance-in-maze",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2044",
      "questionFrontendId": "1915",
      "title": "Number of Wonderful Substrings",
      "titleSlug": "number-of-wonderful-substrings",
      "acRate": "46.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2045",
      "questionFrontendId": "1891",
      "title": "Cutting Ribbons",
      "titleSlug": "cutting-ribbons",
      "acRate": "49.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2047",
      "questionFrontendId": "1901",
      "title": "Find a Peak Element II",
      "titleSlug": "find-a-peak-element-ii",
      "acRate": "50.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2048",
      "questionFrontendId": "1920",
      "title": "Build Array from Permutation",
      "titleSlug": "build-array-from-permutation",
      "acRate": "89.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2049",
      "questionFrontendId": "1921",
      "title": "Eliminate Maximum Number of Monsters",
      "titleSlug": "eliminate-maximum-number-of-monsters",
      "acRate": "51.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2050",
      "questionFrontendId": "1922",
      "title": "Count Good Numbers",
      "titleSlug": "count-good-numbers",
      "acRate": "44.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2055",
      "questionFrontendId": "1943",
      "title": "Describe the Painting",
      "titleSlug": "describe-the-painting",
      "acRate": "49.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2058",
      "questionFrontendId": "1929",
      "title": "Concatenation of Array",
      "titleSlug": "concatenation-of-array",
      "acRate": "89.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2059",
      "questionFrontendId": "1930",
      "title": "Unique Length-3 Palindromic Subsequences",
      "titleSlug": "unique-length-3-palindromic-subsequences",
      "acRate": "66.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2061",
      "questionFrontendId": "1931",
      "title": "Painting a Grid With Three Different Colors",
      "titleSlug": "painting-a-grid-with-three-different-colors",
      "acRate": "57.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2067",
      "questionFrontendId": "1937",
      "title": "Maximum Number of Points with Cost",
      "titleSlug": "maximum-number-of-points-with-cost",
      "acRate": "35.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2069",
      "questionFrontendId": "1918",
      "title": "Kth Smallest Subarray Sum",
      "titleSlug": "kth-smallest-subarray-sum",
      "acRate": "52.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2071",
      "questionFrontendId": "1940",
      "title": "Longest Common Subsequence Between Sorted Arrays",
      "titleSlug": "longest-common-subsequence-between-sorted-arrays",
      "acRate": "78.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2074",
      "questionFrontendId": "1924",
      "title": "Erect the Fence II",
      "titleSlug": "erect-the-fence-ii",
      "acRate": "51.1%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2079",
      "questionFrontendId": "1948",
      "title": "Delete Duplicate Folders in System",
      "titleSlug": "delete-duplicate-folders-in-system",
      "acRate": "56.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2101",
      "questionFrontendId": "1970",
      "title": "Last Day Where You Can Still Cross",
      "titleSlug": "last-day-where-you-can-still-cross",
      "acRate": "62.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2104",
      "questionFrontendId": "1993",
      "title": "Operations on Tree",
      "titleSlug": "operations-on-tree",
      "acRate": "45.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2107",
      "questionFrontendId": "1980",
      "title": "Find Unique Binary String",
      "titleSlug": "find-unique-binary-string",
      "acRate": "74.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2111",
      "questionFrontendId": "1966",
      "title": "Binary Searchable Numbers in an Unsorted Array",
      "titleSlug": "binary-searchable-numbers-in-an-unsorted-array",
      "acRate": "65.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2114",
      "questionFrontendId": "1986",
      "title": "Minimum Number of Work Sessions to Finish the Tasks",
      "titleSlug": "minimum-number-of-work-sessions-to-finish-the-tasks",
      "acRate": "33.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2115",
      "questionFrontendId": "1987",
      "title": "Number of Unique Good Subsequences",
      "titleSlug": "number-of-unique-good-subsequences",
      "acRate": "52.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2117",
      "questionFrontendId": "2007",
      "title": "Find Original Array From Doubled Array",
      "titleSlug": "find-original-array-from-doubled-array",
      "acRate": "40.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2121",
      "questionFrontendId": "1971",
      "title": "Find if Path Exists in Graph",
      "titleSlug": "find-if-path-exists-in-graph",
      "acRate": "51.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2123",
      "questionFrontendId": "1996",
      "title": "The Number of Weak Characters in the Game",
      "titleSlug": "the-number-of-weak-characters-in-the-game",
      "acRate": "43.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2132",
      "questionFrontendId": "2022",
      "title": "Convert 1D Array Into 2D Array",
      "titleSlug": "convert-1d-array-into-2d-array",
      "acRate": "61.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2135",
      "questionFrontendId": "2025",
      "title": "Maximum Number of Ways to Partition an Array",
      "titleSlug": "maximum-number-of-ways-to-partition-an-array",
      "acRate": "33.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2139",
      "questionFrontendId": "2013",
      "title": "Detect Squares",
      "titleSlug": "detect-squares",
      "acRate": "50.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2146",
      "questionFrontendId": "2018",
      "title": "Check if Word Can Be Placed In Crossword",
      "titleSlug": "check-if-word-can-be-placed-in-crossword",
      "acRate": "49.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2161",
      "questionFrontendId": "2034",
      "title": "Stock Price Fluctuation ",
      "titleSlug": "stock-price-fluctuation",
      "acRate": "48.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2162",
      "questionFrontendId": "2035",
      "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
      "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
      "acRate": "20.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2176",
      "questionFrontendId": "2050",
      "title": "Parallel Courses III",
      "titleSlug": "parallel-courses-iii",
      "acRate": "67.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2181",
      "questionFrontendId": "2057",
      "title": "Smallest Index With Equal Value",
      "titleSlug": "smallest-index-with-equal-value",
      "acRate": "72.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2183",
      "questionFrontendId": "2059",
      "title": "Minimum Operations to Convert Number",
      "titleSlug": "minimum-operations-to-convert-number",
      "acRate": "48.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2193",
      "questionFrontendId": "2088",
      "title": "Count Fertile Pyramids in a Land",
      "titleSlug": "count-fertile-pyramids-in-a-land",
      "acRate": "64.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2198",
      "questionFrontendId": "2076",
      "title": "Process Restricted Friend Requests",
      "titleSlug": "process-restricted-friend-requests",
      "acRate": "54.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2206",
      "questionFrontendId": "2101",
      "title": "Detonate the Maximum Bombs",
      "titleSlug": "detonate-the-maximum-bombs",
      "acRate": "48.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2210",
      "questionFrontendId": "2089",
      "title": "Find Target Indices After Sorting Array",
      "titleSlug": "find-target-indices-after-sorting-array",
      "acRate": "76.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2212",
      "questionFrontendId": "2091",
      "title": "Removing Minimum and Maximum From Array",
      "titleSlug": "removing-minimum-and-maximum-from-array",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2213",
      "questionFrontendId": "2092",
      "title": "Find All People With Secret",
      "titleSlug": "find-all-people-with-secret",
      "acRate": "45.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2217",
      "questionFrontendId": "2096",
      "title": "Step-By-Step Directions From a Binary Tree Node to Another",
      "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
      "acRate": "48.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2218",
      "questionFrontendId": "2077",
      "title": "Paths in Maze That Lead to Same Room",
      "titleSlug": "paths-in-maze-that-lead-to-same-room",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2219",
      "questionFrontendId": "2114",
      "title": "Maximum Number of Words Found in Sentences",
      "titleSlug": "maximum-number-of-words-found-in-sentences",
      "acRate": "86.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2220",
      "questionFrontendId": "2115",
      "title": "Find All Possible Recipes from Given Supplies",
      "titleSlug": "find-all-possible-recipes-from-given-supplies",
      "acRate": "49.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2221",
      "questionFrontendId": "2116",
      "title": "Check if a Parentheses String Can Be Valid",
      "titleSlug": "check-if-a-parentheses-string-can-be-valid",
      "acRate": "31.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2226",
      "questionFrontendId": "2103",
      "title": "Rings and Rods",
      "titleSlug": "rings-and-rods",
      "acRate": "80.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2228",
      "questionFrontendId": "2105",
      "title": "Watering Plants II",
      "titleSlug": "watering-plants-ii",
      "acRate": "48.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2237",
      "questionFrontendId": "2131",
      "title": "Longest Palindrome by Concatenating Two Letter Words",
      "titleSlug": "longest-palindrome-by-concatenating-two-letter-words",
      "acRate": "48.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2241",
      "questionFrontendId": "2122",
      "title": "Recover the Original Array",
      "titleSlug": "recover-the-original-array",
      "acRate": "38.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2245",
      "questionFrontendId": "2126",
      "title": "Destroying Asteroids",
      "titleSlug": "destroying-asteroids",
      "acRate": "51.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2246",
      "questionFrontendId": "2127",
      "title": "Maximum Employees to Be Invited to a Meeting",
      "titleSlug": "maximum-employees-to-be-invited-to-a-meeting",
      "acRate": "36.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2256",
      "questionFrontendId": "2135",
      "title": "Count Words Obtained After Adding a Letter",
      "titleSlug": "count-words-obtained-after-adding-a-letter",
      "acRate": "42.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2261",
      "questionFrontendId": "2155",
      "title": "All Divisions With the Highest Score of a Binary Array",
      "titleSlug": "all-divisions-with-the-highest-score-of-a-binary-array",
      "acRate": "64.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2264",
      "questionFrontendId": "2160",
      "title": "Minimum Sum of Four Digit Number After Splitting Digits",
      "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
      "acRate": "86.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2265",
      "questionFrontendId": "2161",
      "title": "Partition Array According to Given Pivot",
      "titleSlug": "partition-array-according-to-given-pivot",
      "acRate": "84.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2266",
      "questionFrontendId": "2162",
      "title": "Minimum Cost to Set Cooking Time",
      "titleSlug": "minimum-cost-to-set-cooking-time",
      "acRate": "40.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2268",
      "questionFrontendId": "2128",
      "title": "Remove All Ones With Row and Column Flips",
      "titleSlug": "remove-all-ones-with-row-and-column-flips",
      "acRate": "76.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2270",
      "questionFrontendId": "2150",
      "title": "Find All Lonely Numbers in the Array",
      "titleSlug": "find-all-lonely-numbers-in-the-array",
      "acRate": "60.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2279",
      "questionFrontendId": "2178",
      "title": "Maximum Split of Positive Even Integers",
      "titleSlug": "maximum-split-of-positive-even-integers",
      "acRate": "59.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2286",
      "questionFrontendId": "2167",
      "title": "Minimum Time to Remove All Cars Containing Illegal Goods",
      "titleSlug": "minimum-time-to-remove-all-cars-containing-illegal-goods",
      "acRate": "41.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2290",
      "questionFrontendId": "2171",
      "title": "Removing Minimum Number of Magic Beans",
      "titleSlug": "removing-minimum-number-of-magic-beans",
      "acRate": "42.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2291",
      "questionFrontendId": "2172",
      "title": "Maximum AND Sum of Array",
      "titleSlug": "maximum-and-sum-of-array",
      "acRate": "48.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2292",
      "questionFrontendId": "2185",
      "title": "Counting Words With a Given Prefix",
      "titleSlug": "counting-words-with-a-given-prefix",
      "acRate": "77.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2294",
      "questionFrontendId": "2187",
      "title": "Minimum Time to Complete Trips",
      "titleSlug": "minimum-time-to-complete-trips",
      "acRate": "38.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2295",
      "questionFrontendId": "2188",
      "title": "Minimum Time to Finish the Race",
      "titleSlug": "minimum-time-to-finish-the-race",
      "acRate": "41.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2297",
      "questionFrontendId": "2158",
      "title": "Amount of New Area Painted Each Day",
      "titleSlug": "amount-of-new-area-painted-each-day",
      "acRate": "55.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2306",
      "questionFrontendId": "2196",
      "title": "Create Binary Tree From Descriptions",
      "titleSlug": "create-binary-tree-from-descriptions",
      "acRate": "72.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2311",
      "questionFrontendId": "2209",
      "title": "Minimum White Tiles After Covering With Carpets",
      "titleSlug": "minimum-white-tiles-after-covering-with-carpets",
      "acRate": "35.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2312",
      "questionFrontendId": "2190",
      "title": "Most Frequent Number Following Key In an Array",
      "titleSlug": "most-frequent-number-following-key-in-an-array",
      "acRate": "58.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2314",
      "questionFrontendId": "2174",
      "title": "Remove All Ones With Row and Column Flips II",
      "titleSlug": "remove-all-ones-with-row-and-column-flips-ii",
      "acRate": "67.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2320",
      "questionFrontendId": "2200",
      "title": "Find All K-Distant Indices in an Array",
      "titleSlug": "find-all-k-distant-indices-in-an-array",
      "acRate": "65.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2321",
      "questionFrontendId": "2203",
      "title": "Minimum Weighted Subgraph With the Required Paths",
      "titleSlug": "minimum-weighted-subgraph-with-the-required-paths",
      "acRate": "36.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2322",
      "questionFrontendId": "2184",
      "title": "Number of Ways to Build Sturdy Brick Wall",
      "titleSlug": "number-of-ways-to-build-sturdy-brick-wall",
      "acRate": "50.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2332",
      "questionFrontendId": "2249",
      "title": "Count Lattice Points Inside a Circle",
      "titleSlug": "count-lattice-points-inside-a-circle",
      "acRate": "52.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2333",
      "questionFrontendId": "2250",
      "title": "Count Number of Rectangles Containing Each Point",
      "titleSlug": "count-number-of-rectangles-containing-each-point",
      "acRate": "34.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2334",
      "questionFrontendId": "2251",
      "title": "Number of Flowers in Full Bloom",
      "titleSlug": "number-of-flowers-in-full-bloom",
      "acRate": "56.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2338",
      "questionFrontendId": "2260",
      "title": "Minimum Consecutive Cards to Pick Up",
      "titleSlug": "minimum-consecutive-cards-to-pick-up",
      "acRate": "50.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2341",
      "questionFrontendId": "2255",
      "title": "Count Prefixes of a Given String",
      "titleSlug": "count-prefixes-of-a-given-string",
      "acRate": "72.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2344",
      "questionFrontendId": "2258",
      "title": "Escape the Spreading Fire",
      "titleSlug": "escape-the-spreading-fire",
      "acRate": "35.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2345",
      "questionFrontendId": "2224",
      "title": "Minimum Number of Operations to Convert Time",
      "titleSlug": "minimum-number-of-operations-to-convert-time",
      "acRate": "65.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2347",
      "questionFrontendId": "2265",
      "title": "Count Nodes Equal to Average of Subtree",
      "titleSlug": "count-nodes-equal-to-average-of-subtree",
      "acRate": "86.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2349",
      "questionFrontendId": "2267",
      "title": " Check if There Is a Valid Parentheses String Path",
      "titleSlug": "check-if-there-is-a-valid-parentheses-string-path",
      "acRate": "38.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2350",
      "questionFrontendId": "2239",
      "title": "Find Closest Number to Zero",
      "titleSlug": "find-closest-number-to-zero",
      "acRate": "44.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2352",
      "questionFrontendId": "2241",
      "title": "Design an ATM Machine",
      "titleSlug": "design-an-atm-machine",
      "acRate": "40.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2353",
      "questionFrontendId": "2242",
      "title": "Maximum Score of a Node Sequence",
      "titleSlug": "maximum-score-of-a-node-sequence",
      "acRate": "38.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2357",
      "questionFrontendId": "2276",
      "title": "Count Integers in Intervals",
      "titleSlug": "count-integers-in-intervals",
      "acRate": "34.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2359",
      "questionFrontendId": "2271",
      "title": "Maximum White Tiles Covered by a Carpet",
      "titleSlug": "maximum-white-tiles-covered-by-a-carpet",
      "acRate": "33.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2367",
      "questionFrontendId": "2280",
      "title": "Minimum Lines to Represent a Line Chart",
      "titleSlug": "minimum-lines-to-represent-a-line-chart",
      "acRate": "25.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2375",
      "questionFrontendId": "2290",
      "title": "Minimum Obstacle Removal to Reach Corner",
      "titleSlug": "minimum-obstacle-removal-to-reach-corner",
      "acRate": "52.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2377",
      "questionFrontendId": "2283",
      "title": "Check if Number Has Equal Digit Count and Digit Value",
      "titleSlug": "check-if-number-has-equal-digit-count-and-digit-value",
      "acRate": "72.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2378",
      "questionFrontendId": "2284",
      "title": "Sender With Largest Word Count",
      "titleSlug": "sender-with-largest-word-count",
      "acRate": "56.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2380",
      "questionFrontendId": "2286",
      "title": "Booking Concert Tickets in Groups",
      "titleSlug": "booking-concert-tickets-in-groups",
      "acRate": "16.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2383",
      "questionFrontendId": "2235",
      "title": "Add Two Integers",
      "titleSlug": "add-two-integers",
      "acRate": "87.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2385",
      "questionFrontendId": "2237",
      "title": "Count Positions on Street With Required Brightness",
      "titleSlug": "count-positions-on-street-with-required-brightness",
      "acRate": "64.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2389",
      "questionFrontendId": "2296",
      "title": "Design a Text Editor",
      "titleSlug": "design-a-text-editor",
      "acRate": "43.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2394",
      "questionFrontendId": "2302",
      "title": "Count Subarrays With Score Less Than K",
      "titleSlug": "count-subarrays-with-score-less-than-k",
      "acRate": "54.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2395",
      "questionFrontendId": "2311",
      "title": "Longest Binary Subsequence Less Than or Equal to K",
      "titleSlug": "longest-binary-subsequence-less-than-or-equal-to-k",
      "acRate": "37.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2396",
      "questionFrontendId": "2254",
      "title": "Design Video Sharing Platform",
      "titleSlug": "design-video-sharing-platform",
      "acRate": "64.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2399",
      "questionFrontendId": "2313",
      "title": "Minimum Flips in Binary Tree to Get Result",
      "titleSlug": "minimum-flips-in-binary-tree-to-get-result",
      "acRate": "59.1%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2401",
      "questionFrontendId": "2315",
      "title": "Count Asterisks",
      "titleSlug": "count-asterisks",
      "acRate": "82.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2403",
      "questionFrontendId": "2316",
      "title": "Count Unreachable Pairs of Nodes in an Undirected Graph",
      "titleSlug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2413",
      "questionFrontendId": "2336",
      "title": "Smallest Number in Infinite Set",
      "titleSlug": "smallest-number-in-infinite-set",
      "acRate": "72.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2414",
      "questionFrontendId": "2337",
      "title": "Move Pieces to Obtain a String",
      "titleSlug": "move-pieces-to-obtain-a-string",
      "acRate": "47.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2416",
      "questionFrontendId": "2331",
      "title": "Evaluate Boolean Binary Tree",
      "titleSlug": "evaluate-boolean-binary-tree",
      "acRate": "77.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2417",
      "questionFrontendId": "2332",
      "title": "The Latest Time to Catch a Bus",
      "titleSlug": "the-latest-time-to-catch-a-bus",
      "acRate": "26.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2419",
      "questionFrontendId": "2334",
      "title": "Subarray With Elements Greater Than Varying Threshold",
      "titleSlug": "subarray-with-elements-greater-than-varying-threshold",
      "acRate": "42.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2420",
      "questionFrontendId": "2277",
      "title": "Closest Node to Path in Tree",
      "titleSlug": "closest-node-to-path-in-tree",
      "acRate": "62.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2427",
      "questionFrontendId": "2351",
      "title": "First Letter to Appear Twice",
      "titleSlug": "first-letter-to-appear-twice",
      "acRate": "73.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2432",
      "questionFrontendId": "2348",
      "title": "Number of Zero-Filled Subarrays",
      "titleSlug": "number-of-zero-filled-subarrays",
      "acRate": "66.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2434",
      "questionFrontendId": "2349",
      "title": "Design a Number Container System",
      "titleSlug": "design-a-number-container-system",
      "acRate": "44.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2435",
      "questionFrontendId": "2350",
      "title": "Shortest Impossible Sequence of Rolls",
      "titleSlug": "shortest-impossible-sequence-of-rolls",
      "acRate": "68.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2443",
      "questionFrontendId": "2369",
      "title": "Check if There is a Valid Partition For The Array",
      "titleSlug": "check-if-there-is-a-valid-partition-for-the-array",
      "acRate": "51.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2447",
      "questionFrontendId": "2363",
      "title": "Merge Similar Items",
      "titleSlug": "merge-similar-items",
      "acRate": "75.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2448",
      "questionFrontendId": "2364",
      "title": "Count Number of Bad Pairs",
      "titleSlug": "count-number-of-bad-pairs",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2450",
      "questionFrontendId": "2366",
      "title": "Minimum Replacements to Sort the Array",
      "titleSlug": "minimum-replacements-to-sort-the-array",
      "acRate": "53.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2454",
      "questionFrontendId": "2373",
      "title": "Largest Local Values in a Matrix",
      "titleSlug": "largest-local-values-in-a-matrix",
      "acRate": "83.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2472",
      "questionFrontendId": "2392",
      "title": "Build a Matrix With Conditions",
      "titleSlug": "build-a-matrix-with-conditions",
      "acRate": "61.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2479",
      "questionFrontendId": "2402",
      "title": "Meeting Rooms III",
      "titleSlug": "meeting-rooms-iii",
      "acRate": "45.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2481",
      "questionFrontendId": "2396",
      "title": "Strictly Palindromic Number",
      "titleSlug": "strictly-palindromic-number",
      "acRate": "87.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2485",
      "questionFrontendId": "2345",
      "title": "Finding the Number of Visible Mountains",
      "titleSlug": "finding-the-number-of-visible-mountains",
      "acRate": "37.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2489",
      "questionFrontendId": "2459",
      "title": "Sort Array by Moving Items to Empty Space",
      "titleSlug": "sort-array-by-moving-items-to-empty-space",
      "acRate": "45.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2494",
      "questionFrontendId": "2416",
      "title": "Sum of Prefix Scores of Strings",
      "titleSlug": "sum-of-prefix-scores-of-strings",
      "acRate": "45.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2505",
      "questionFrontendId": "2421",
      "title": "Number of Good Paths",
      "titleSlug": "number-of-good-paths",
      "acRate": "56.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2506",
      "questionFrontendId": "2371",
      "title": "Minimize Maximum Value in a Grid",
      "titleSlug": "minimize-maximum-value-in-a-grid",
      "acRate": "65.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2512",
      "questionFrontendId": "2424",
      "title": "Longest Uploaded Prefix",
      "titleSlug": "longest-uploaded-prefix",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2513",
      "questionFrontendId": "2426",
      "title": "Number of Pairs Satisfying Inequality",
      "titleSlug": "number-of-pairs-satisfying-inequality",
      "acRate": "43.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2521",
      "questionFrontendId": "2435",
      "title": "Paths in Matrix Whose Sum Is Divisible by K",
      "titleSlug": "paths-in-matrix-whose-sum-is-divisible-by-k",
      "acRate": "42.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2525",
      "questionFrontendId": "2442",
      "title": "Count Number of Distinct Integers After Reverse Operations",
      "titleSlug": "count-number-of-distinct-integers-after-reverse-operations",
      "acRate": "79.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2526",
      "questionFrontendId": "2407",
      "title": "Longest Increasing Subsequence II",
      "titleSlug": "longest-increasing-subsequence-ii",
      "acRate": "23.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2528",
      "questionFrontendId": "2437",
      "title": "Number of Valid Clock Times",
      "titleSlug": "number-of-valid-clock-times",
      "acRate": "46.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2536",
      "questionFrontendId": "2446",
      "title": "Determine if Two Events Have Conflict",
      "titleSlug": "determine-if-two-events-have-conflict",
      "acRate": "50.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2538",
      "questionFrontendId": "2448",
      "title": "Minimum Cost to Make Array Equal",
      "titleSlug": "minimum-cost-to-make-array-equal",
      "acRate": "45.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2545",
      "questionFrontendId": "2458",
      "title": "Height of Binary Tree After Subtree Removal Queries",
      "titleSlug": "height-of-binary-tree-after-subtree-removal-queries",
      "acRate": "39.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2550",
      "questionFrontendId": "2452",
      "title": "Words Within Two Edits of Dictionary",
      "titleSlug": "words-within-two-edits-of-dictionary",
      "acRate": "60.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2564",
      "questionFrontendId": "2467",
      "title": "Most Profitable Path in a Tree",
      "titleSlug": "most-profitable-path-in-a-tree",
      "acRate": "48.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2567",
      "questionFrontendId": "2476",
      "title": "Closest Nodes Queries in a Binary Search Tree",
      "titleSlug": "closest-nodes-queries-in-a-binary-search-tree",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2569",
      "questionFrontendId": "2478",
      "title": "Number of Beautiful Partitions",
      "titleSlug": "number-of-beautiful-partitions",
      "acRate": "30.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2574",
      "questionFrontendId": "2488",
      "title": "Count Subarrays With Median K",
      "titleSlug": "count-subarrays-with-median-k",
      "acRate": "44.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2591",
      "questionFrontendId": "2498",
      "title": "Frog Jump II",
      "titleSlug": "frog-jump-ii",
      "acRate": "61.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2615",
      "questionFrontendId": "2531",
      "title": "Make Number of Distinct Characters Equal",
      "titleSlug": "make-number-of-distinct-characters-equal",
      "acRate": "26.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2625",
      "questionFrontendId": "2536",
      "title": "Increment Submatrices by One",
      "titleSlug": "increment-submatrices-by-one",
      "acRate": "48.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2641",
      "questionFrontendId": "2556",
      "title": "Disconnect Path in a Binary Matrix by at Most One Flip",
      "titleSlug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
      "acRate": "27.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2653",
      "questionFrontendId": "2510",
      "title": "Check if There is a Path With Equal Number of 0's And 1's",
      "titleSlug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s",
      "acRate": "50.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2687",
      "questionFrontendId": "2663",
      "title": "Lexicographically Smallest Beautiful String",
      "titleSlug": "lexicographically-smallest-beautiful-string",
      "acRate": "36.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2707",
      "questionFrontendId": "2570",
      "title": "Merge Two 2D Arrays by Summing Values",
      "titleSlug": "merge-two-2d-arrays-by-summing-values",
      "acRate": "73.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2716",
      "questionFrontendId": "2601",
      "title": "Prime Subtraction Operation",
      "titleSlug": "prime-subtraction-operation",
      "acRate": "37.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2732",
      "questionFrontendId": "2620",
      "title": "Counter",
      "titleSlug": "counter",
      "acRate": "80.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2734",
      "questionFrontendId": "2619",
      "title": "Array Prototype Last",
      "titleSlug": "array-prototype-last",
      "acRate": "72.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2736",
      "questionFrontendId": "2645",
      "title": "Minimum Additions to Make Valid String",
      "titleSlug": "minimum-additions-to-make-valid-string",
      "acRate": "50.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2747",
      "questionFrontendId": "2635",
      "title": "Apply Transform Over Each Element in Array",
      "titleSlug": "apply-transform-over-each-element-in-array",
      "acRate": "85.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2774",
      "questionFrontendId": "2700",
      "title": "Differences Between Two Objects",
      "titleSlug": "differences-between-two-objects",
      "acRate": "79.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2809",
      "questionFrontendId": "2667",
      "title": "Create Hello World Function",
      "titleSlug": "create-hello-world-function",
      "acRate": "81.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2818",
      "questionFrontendId": "2713",
      "title": "Maximum Strictly Increasing Cells in a Matrix",
      "titleSlug": "maximum-strictly-increasing-cells-in-a-matrix",
      "acRate": "30.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2827",
      "questionFrontendId": "2709",
      "title": "Greatest Common Divisor Traversal",
      "titleSlug": "greatest-common-divisor-traversal",
      "acRate": "42.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2843",
      "questionFrontendId": "2689",
      "title": "Extract Kth Character From The Rope Tree",
      "titleSlug": "extract-kth-character-from-the-rope-tree",
      "acRate": "74.3%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2849",
      "questionFrontendId": "2763",
      "title": "Sum of Imbalance Numbers of All Subarrays",
      "titleSlug": "sum-of-imbalance-numbers-of-all-subarrays",
      "acRate": "45.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2859",
      "questionFrontendId": "2723",
      "title": "Add Two Promises",
      "titleSlug": "add-two-promises",
      "acRate": "90.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2868",
      "questionFrontendId": "2762",
      "title": "Continuous Subarrays",
      "titleSlug": "continuous-subarrays",
      "acRate": "40.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2875",
      "questionFrontendId": "2728",
      "title": "Count Houses in a Circular Street",
      "titleSlug": "count-houses-in-a-circular-street",
      "acRate": "84.5%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2891",
      "questionFrontendId": "2779",
      "title": "Maximum Beauty of an Array After Applying Operation",
      "titleSlug": "maximum-beauty-of-an-array-after-applying-operation",
      "acRate": "37.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2914",
      "questionFrontendId": "2812",
      "title": "Find the Safest Path in a Grid",
      "titleSlug": "find-the-safest-path-in-a-grid",
      "acRate": "31.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2953",
      "questionFrontendId": "2857",
      "title": "Count Pairs of Points With Distance k",
      "titleSlug": "count-pairs-of-points-with-distance-k",
      "acRate": "31.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3000",
      "questionFrontendId": "2817",
      "title": "Minimum Absolute Difference Between Elements With Constraint",
      "titleSlug": "minimum-absolute-difference-between-elements-with-constraint",
      "acRate": "32.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3024",
      "questionFrontendId": "2851",
      "title": "String Transformation",
      "titleSlug": "string-transformation",
      "acRate": "28.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3056",
      "questionFrontendId": "2849",
      "title": "Determine if a Cell Is Reachable at a Given Time",
      "titleSlug": "determine-if-a-cell-is-reachable-at-a-given-time",
      "acRate": "35.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3057",
      "questionFrontendId": "2842",
      "title": "Count K-Subsequences of a String With Maximum Beauty",
      "titleSlug": "count-k-subsequences-of-a-string-with-maximum-beauty",
      "acRate": "28.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3058",
      "questionFrontendId": "2872",
      "title": "Maximum Number of K-Divisible Components",
      "titleSlug": "maximum-number-of-k-divisible-components",
      "acRate": "58.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3062",
      "questionFrontendId": "2877",
      "title": "Create a DataFrame from List",
      "titleSlug": "create-a-dataframe-from-list",
      "acRate": "80.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3158",
      "questionFrontendId": "2863",
      "title": "Maximum Length of Semi-Decreasing Subarrays",
      "titleSlug": "maximum-length-of-semi-decreasing-subarrays",
      "acRate": "71.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3178",
      "questionFrontendId": "2919",
      "title": "Minimum Increment Operations to Make Array Beautiful",
      "titleSlug": "minimum-increment-operations-to-make-array-beautiful",
      "acRate": "33.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3188",
      "questionFrontendId": "2923",
      "title": "Find Champion I",
      "titleSlug": "find-champion-i",
      "acRate": "72.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3189",
      "questionFrontendId": "2924",
      "title": "Find Champion II",
      "titleSlug": "find-champion-ii",
      "acRate": "57.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3191",
      "questionFrontendId": "2925",
      "title": "Maximum Score After Applying Operations on a Tree",
      "titleSlug": "maximum-score-after-applying-operations-on-a-tree",
      "acRate": "48.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3212",
      "questionFrontendId": "2963",
      "title": "Count the Number of Good Partitions",
      "titleSlug": "count-the-number-of-good-partitions",
      "acRate": "49.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3218",
      "questionFrontendId": "2973",
      "title": "Find Number of Coins to Place in Tree Nodes",
      "titleSlug": "find-number-of-coins-to-place-in-tree-nodes",
      "acRate": "35.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3222",
      "questionFrontendId": "2936",
      "title": "Number of Equal Numbers Blocks",
      "titleSlug": "number-of-equal-numbers-blocks",
      "acRate": "70.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3229",
      "questionFrontendId": "2967",
      "title": "Minimum Cost to Make Array Equalindromic",
      "titleSlug": "minimum-cost-to-make-array-equalindromic",
      "acRate": "21.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3240",
      "questionFrontendId": "3007",
      "title": "Maximum Number That Sum of the Prices Is Less Than or Equal to K",
      "titleSlug": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3241",
      "questionFrontendId": "2966",
      "title": "Divide Array Into Arrays With Max Difference",
      "titleSlug": "divide-array-into-arrays-with-max-difference",
      "acRate": "71.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3266",
      "questionFrontendId": "2982",
      "title": "Find Longest Special Substring That Occurs Thrice II",
      "titleSlug": "find-longest-special-substring-that-occurs-thrice-ii",
      "acRate": "32.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3267",
      "questionFrontendId": "2981",
      "title": "Find Longest Special Substring That Occurs Thrice I",
      "titleSlug": "find-longest-special-substring-that-occurs-thrice-i",
      "acRate": "41.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3277",
      "questionFrontendId": "3027",
      "title": "Find the Number of Ways to Place People II",
      "titleSlug": "find-the-number-of-ways-to-place-people-ii",
      "acRate": "48.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3278",
      "questionFrontendId": "3025",
      "title": "Find the Number of Ways to Place People I",
      "titleSlug": "find-the-number-of-ways-to-place-people-i",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3298",
      "questionFrontendId": "3041",
      "title": "Maximize Consecutive Elements in an Array After Modification",
      "titleSlug": "maximize-consecutive-elements-in-an-array-after-modification",
      "acRate": "30.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3314",
      "questionFrontendId": "3044",
      "title": "Most Frequent Prime",
      "titleSlug": "most-frequent-prime",
      "acRate": "47.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3325",
      "questionFrontendId": "3047",
      "title": "Find the Largest Area of Square Inside Two Rectangles",
      "titleSlug": "find-the-largest-area-of-square-inside-two-rectangles",
      "acRate": "44.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    }
  ],
  "frequencies": "{\"734\": [1, 1, 1, 43, 0, 0, 0, 6.239808303772842, 4], \"737\": [0, 0, 1, 46, 0, 0, 0, 7.012723236936139, 4], \"754\": [0, 0, 2, 93, 0, 0, 0.7472144018302211, 7.730860334133597, 3], \"746\": [1, 1, 3, 29, 0, 0, 1.2332691738143668, 5.427045527498251, 3], \"19\": [4, 8, 12, 63, 0.06887402901251127, 0.25091823176225275, 0.49573913073261056, 2.924233778477576, 1], \"2\": [11, 18, 26, 474, 0.2776477655786764, 0.618917133126316, 1.0252838903642563, 6.3853341982469605, 1], \"616\": [0, 0, 2, 41, 0, 0, 1.0663514264498883, 6.682852077817722, 3], \"88\": [11, 22, 28, 103, 0.24985377437870784, 0.7586308917400785, 1.0434802179733935, 3.250107993190758, 1], \"1\": [37, 85, 141, 2437, 0.8334338155165444, 2.062704498670274, 2.990543471415, 8.51535116631123, 1], \"543\": [3, 4, 6, 76, 0.06693948267510934, 0.11607217125275403, 0.24445333790096083, 3.812586424263264, 1], \"48\": [5, 12, 16, 121, 0.15539881978094985, 0.6772173402317307, 1.0012151984157105, 4.596152230472333, 1], \"681\": [3, 3, 4, 197, 0.9582549309731873, 0.9582549309731873, 1.349926716949016, 8.630757386192682, 1], \"683\": [0, 0, 0, 163, 0, 0, 0, 9.07811894016826, 4], \"124\": [1, 1, 5, 142, 0, 0, 0.21302606499086962, 5.256446098331006, 3], \"226\": [3, 7, 11, 189, 0.05472489968924655, 0.2671604367309841, 0.5631808540999188, 5.409186183645549, 1], \"731\": [0, 0, 3, 47, 0, 0, 0.6987494361086152, 5.5146616169080485, 3], \"93\": [0, 1, 2, 25, 0, 0, 0.15123096972392353, 3.2739265309749515, 3], \"399\": [3, 4, 10, 218, 0.25562013999211797, 0.41726149154853387, 1.4436774890121544, 7.33528074059725, 1], \"98\": [2, 3, 4, 83, 0.022702450618306516, 0.050374387821627474, 0.08787208569288751, 3.698846233583949, 1], \"236\": [0, 2, 5, 105, 0, 0.034074846884502526, 0.19609113751771157, 4.566325877820355, 2], \"220\": [0, 1, 2, 27, 0, 0, 0.16989903679539747, 3.54457638442578, 3], \"280\": [0, 0, 0, 55, 0, 0, 0, 6.553868638426619, 4], \"235\": [1, 3, 3, 46, 0, 0.08952296190665864, 0.08952296190665864, 3.132705066015709, 2], \"207\": [5, 14, 24, 105, 0.16772812838918624, 0.8885914122865761, 1.6500904258291795, 4.397407552460896, 1], \"299\": [0, 0, 10, 162, 0, 0, 2.295416603515433, 7.705884612138127, 3], \"687\": [0, 0, 0, 50, 0, 0, 0, 6.014591080125422, 4], \"8\": [3, 3, 6, 90, 0.05543290940619299, 0.05543290940619299, 0.20538064098700973, 3.9533604880564925, 1], \"139\": [0, 2, 7, 172, 0, 0.03578199261680029, 0.3689850197376051, 5.596429832129393, 2], \"32\": [1, 2, 4, 64, 0, 0.05580248142881272, 0.20665250783725592, 4.08683610235462, 2], \"31\": [1, 5, 18, 156, 0, 0.18895508028958852, 1.30711788935922, 5.311878831803344, 2], \"84\": [3, 4, 6, 103, 0.08544093405001241, 0.14718894111845945, 0.30512080493483995, 4.6611907113854585, 1], \"146\": [11, 24, 40, 294, 0.6665635877708653, 1.7066683659340096, 2.6048625601422426, 6.5153488874600765, 1], \"4\": [7, 20, 39, 369, 0.20283781445990426, 1.0422903901163596, 2.076971766437449, 6.435552890807737, 1], \"686\": [0, 0, 1, 128, 0, 0, 0, 7.233077764396094, 4], \"412\": [2, 3, 10, 59, 0.057569851821477835, 0.12516314295400602, 0.9088557533866369, 3.958549472501532, 1], \"51\": [2, 3, 6, 44, 0.06044135415350092, 0.13119221027135036, 0.4451649779548489, 3.435396056261479, 1], \"349\": [1, 3, 8, 50, 0, 0.10201363230411753, 0.567427001026064, 3.424980267453142, 2], \"130\": [1, 1, 8, 97, 0, 0, 0.6520856937621714, 4.910424150093113, 3], \"780\": [0, 0, 1, 22, 0, 0, 0, 4.103214698608518, 4], \"162\": [2, 3, 12, 125, 0.03028240476917325, 0.06688971341093763, 0.7451896177902805, 4.793012828259118, 1], \"66\": [3, 4, 13, 292, 0.03731776300719518, 0.06540949787421028, 0.5388204536924633, 5.885883137920881, 1], \"205\": [2, 2, 9, 122, 0.02100917608934343, 0.02100917608934343, 0.35762990183400095, 4.378449986014831, 1], \"50\": [2, 6, 13, 135, 0.023229848279128662, 0.1918723554435858, 0.6896156877784743, 4.67926763627518, 1], \"102\": [1, 1, 3, 60, 0, 0, 0.05317259535592034, 3.125114212912705, 3], \"394\": [3, 7, 33, 299, 0.1428732864659515, 0.6076859511447171, 2.9746933875242427, 7.327204521536777, 1], \"20\": [7, 21, 37, 290, 0.10255738402861135, 0.679052279883632, 1.3906380105609695, 5.224102740202412, 1], \"448\": [0, 0, 2, 62, 0, 0, 0.061939299440290606, 4.130054243779798, 3], \"403\": [0, 0, 3, 77, 0, 0, 0.6190392084062234, 6.334401788981095, 3], \"650\": [2, 2, 2, 9, 0.4013413909243023, 0.4013413909243023, 0.4013413909243023, 2.3942920852133494, 1], \"788\": [0, 0, 0, 28, 0, 0, 0, 6.662080530197387, 4], \"56\": [7, 19, 43, 468, 0.23172820474532013, 1.0720063691364239, 2.383274416800675, 7.0582810268991665, 1], \"459\": [4, 6, 8, 55, 0.366872083420486, 0.6917611789520681, 1.0198768209823397, 4.4366335545503315, 1], \"142\": [1, 2, 2, 21, 0, 0.021517774809144227, 0.021517774809144227, 1.219596317739739, 2], \"75\": [3, 4, 6, 50, 0.05377639678080413, 0.09369047490667402, 0.19966567025192705, 2.790431330282335, 1], \"482\": [0, 0, 1, 231, 0, 0, 0, 7.860965370948574, 4], \"240\": [0, 2, 3, 62, 0, 0.09201889872025212, 0.19627990904466153, 4.535710339827623, 2], \"544\": [0, 1, 1, 20, 0, 0, 0, 6.682257759483338, 4], \"762\": [0, 0, 0, 9, 0, 0, 0, 3.236856208950354, 4], \"345\": [2, 2, 2, 87, 0.02375408600810714, 0.02375408600810714, 0.02375408600810714, 3.8355647586908557, 1], \"793\": [1, 2, 11, 95, 0, 0.6157605169445252, 3.286335606880189, 7.506890961351355, 2], \"425\": [0, 0, 0, 39, 0, 0, 0, 6.162470963841315, 4], \"435\": [1, 2, 3, 27, 0, 0.06613980250454501, 0.14310084364067333, 2.596233428876956, 2], \"695\": [1, 2, 8, 117, 0, 0.07816477284933626, 0.8332625422708201, 5.628438741744423, 2], \"36\": [2, 3, 5, 80, 0.026248226074936345, 0.05811835484037522, 0.15377066842234322, 3.7703797963662096, 1], \"296\": [0, 0, 3, 47, 0, 0, 0.8967461358011848, 5.874945492220685, 3], \"778\": [2, 4, 5, 69, 0.10734155493596446, 0.37380778823747274, 0.5354491397938886, 4.908113914793602, 1], \"117\": [0, 0, 2, 37, 0, 0, 0.10453372768183221, 3.652585153250873, 3], \"332\": [1, 4, 9, 80, 0, 0.5091644938159141, 1.4727004373862962, 5.581996794048964, 2], \"642\": [2, 2, 9, 107, 0.6257058997644127, 0.6257058997644127, 2.9236289796526473, 7.76618211335065, 1], \"208\": [4, 7, 12, 112, 0.190826678393621, 0.4970651526052253, 1.0620337236647759, 5.107394607541418, 1], \"38\": [1, 1, 7, 86, 0, 0, 0.6328040506524768, 4.8961844250514375, 3], \"53\": [2, 3, 16, 219, 0.014837067430467676, 0.03307909097658445, 0.6712347057816714, 5.190610969226417, 1], \"116\": [1, 3, 4, 44, 0, 0.1920777317393193, 0.3195226783074397, 3.8369869973100865, 2], \"322\": [7, 9, 13, 110, 0.28168804851157037, 0.43038443033304696, 0.7524428985263264, 4.395099691414434, 1], \"215\": [1, 12, 19, 163, 0, 0.6245845091226487, 1.155212760184819, 5.0781378714412675, 2], \"347\": [2, 5, 13, 115, 0.0182820448374491, 0.10913566861520116, 0.5763438309061376, 4.123546076530427, 1], \"166\": [0, 0, 1, 57, 0, 0, 0, 5.609616922176571, 4], \"777\": [0, 0, 0, 68, 0, 0, 0, 5.464112452642388, 4], \"189\": [6, 9, 12, 70, 0.1334322600346025, 0.27852048676186847, 0.4516967107336314, 3.0133534757906535, 1], \"3\": [15, 19, 36, 386, 0.3967694011406105, 0.5773913095953309, 1.3363671871633835, 5.77560261722123, 1], \"801\": [1, 3, 5, 34, 0, 0.27276297168838964, 0.6265158787492435, 3.7167445466101166, 2], \"388\": [2, 4, 10, 422, 0.325422400434628, 0.9315582040049435, 2.362304327695668, 8.947314753112906, 1], \"187\": [1, 1, 4, 36, 0, 0, 0.4825218476031389, 3.932772043523759, 3], \"518\": [4, 4, 6, 50, 0.33647223662121295, 0.33647223662121295, 0.6418538861723948, 4.1474367183136245, 1], \"524\": [0, 1, 4, 59, 0, 0, 1.6506808709681495, 6.81756167842128, 3], \"159\": [1, 1, 2, 109, 0, 0, 0.41836851294407224, 7.338520131686484, 3], \"252\": [1, 2, 11, 45, 0, 0.2016859239757458, 2.0489535369135887, 4.733721745561877, 2], \"46\": [1, 3, 6, 82, 0, 0.06234705801852781, 0.228987770072077, 3.8895000030406472, 2], \"63\": [1, 1, 4, 66, 0, 0, 0.21765740527742986, 4.204079106074826, 3], \"5\": [7, 18, 31, 276, 0.18529455998627847, 0.8527432718897647, 1.6079411551282279, 5.756802005281475, 1], \"604\": [1, 1, 2, 13, 0, 0, 1.252762968495368, 4.665714818226822, 3], \"308\": [0, 1, 2, 113, 0, 0, 1.0360919316867756, 8.543161923094546, 3], \"542\": [2, 4, 8, 60, 0.10084103435079068, 0.35375290706085394, 0.9923672086005493, 4.565843610747131, 1], \"217\": [4, 11, 19, 97, 0.04418167479066396, 0.29387404269970197, 0.7027004985105713, 3.312910581588596, 1], \"653\": [1, 2, 4, 16, 0, 0.15656906069153992, 0.5175824062288705, 2.4685101107430696, 2], \"216\": [0, 0, 2, 20, 0, 0, 0.07536521894921006, 2.1743013596196703, 3], \"118\": [4, 8, 11, 70, 0.13826991637100777, 0.46570804012471456, 0.7520803546944321, 3.8339638846803417, 1], \"785\": [0, 0, 2, 39, 0, 0, 0.4321333551903257, 5.3268935277775995, 3], \"685\": [2, 4, 4, 29, 0.38193461069797024, 1.0509842396788551, 1.0509842396788551, 4.589400259643191, 1], \"297\": [1, 1, 6, 125, 0, 0, 0.5560675878793254, 5.776617285618443, 3], \"228\": [1, 2, 2, 85, 0, 0.04808618666763778, 0.04808618666763778, 4.495960146988363, 2], \"125\": [2, 3, 9, 44, 0.011799546931155066, 0.026355844705362532, 0.2153985021723946, 1.90516970591516, 1], \"11\": [8, 12, 20, 219, 0.1782980213549832, 0.36405841488173923, 0.7974549922736096, 4.988645128129237, 1], \"229\": [2, 3, 5, 86, 0.07369816407476748, 0.1587834718712885, 0.39069758452249903, 4.9551415387594195, 1], \"328\": [0, 1, 4, 23, 0, 0, 0.17284281283941086, 1.975770411802757, 3], \"732\": [0, 0, 2, 26, 0, 0, 0.6931471805599453, 5.132195249465241, 3], \"269\": [2, 2, 5, 95, 0.19014428247516366, 0.19014428247516366, 0.8367714474002161, 6.156576367753527, 1], \"343\": [1, 1, 3, 22, 0, 0, 0.4992480704235479, 3.5749072259264696, 3], \"241\": [1, 2, 3, 36, 0, 0.41836851294407224, 0.7741883905630712, 5.128138138224074, 2], \"282\": [0, 2, 9, 40, 0, 0.2876820724517809, 2.0476928433652555, 4.896721085693552, 2], \"264\": [1, 2, 2, 26, 0, 0.18400364297693944, 0.18400364297693944, 3.555777137432331, 2], \"271\": [0, 0, 1, 96, 0, 0, 0, 6.17226408252074, 4], \"25\": [2, 7, 9, 63, 0.04480032475536626, 0.4455078758569304, 0.6563976383512038, 3.835072856602244, 1], \"387\": [2, 2, 3, 63, 0.06301296782873406, 0.06301296782873406, 0.1365755350057508, 4.179005354326162, 1], \"158\": [1, 1, 3, 98, 0, 0, 1.2939210409888755, 7.892692529027297, 3], \"647\": [0, 2, 6, 35, 0, 0.07710947515747849, 0.5431628262327367, 3.236998832801582, 2], \"17\": [5, 11, 19, 246, 0.1680671989503053, 0.6343510470935089, 1.29273959428828, 6.092257647651672, 1], \"490\": [2, 2, 3, 51, 0.3933437475758196, 0.3933437475758196, 0.734450986701181, 5.746978562723602, 1], \"803\": [1, 3, 7, 43, 0, 0.16989903679539747, 0.6972539625125987, 3.661118490311937, 2], \"67\": [3, 4, 5, 51, 0.07255397028698765, 0.12555653398976382, 0.18981846820813295, 3.120851694097777, 1], \"134\": [1, 2, 5, 78, 0, 0.03949180507446595, 0.22455242746553852, 4.127858629881213, 2], \"813\": [0, 0, 3, 18, 0, 0, 0.30538164955118186, 2.625197641863048, 3], \"825\": [0, 0, 2, 21, 0, 0, 0.41836851294407224, 4.061530996537278, 3], \"350\": [1, 2, 2, 50, 0, 0.07956481041235021, 0.07956481041235021, 3.96214700092122, 2], \"447\": [0, 0, 1, 35, 0, 0, 0, 5.829093555682741, 4], \"317\": [1, 1, 8, 87, 0, 0, 1.7537320736388158, 6.334727156671437, 3], \"62\": [0, 12, 32, 197, 0, 0.7911945883506789, 2.259282357871369, 5.783396951807179, 2], \"64\": [0, 1, 9, 93, 0, 0, 0.675128675057267, 4.640444245985398, 3], \"249\": [0, 0, 1, 50, 0, 0, 0, 5.06673299578683, 4], \"206\": [2, 6, 9, 130, 0.00645475857343839, 0.05664562791683043, 0.12321856285655154, 3.3413609870469134, 1], \"806\": [0, 1, 3, 13, 0, 0, 0.3290234126082223, 2.114580264661742, 3], \"149\": [1, 1, 3, 106, 0, 0, 0.3624832855344793, 6.299815638897064, 3], \"830\": [0, 0, 0, 5, 0, 0, 0, 1.5389404900190486, 4], \"729\": [2, 3, 49, 134, 0.2646925542270822, 0.5198754592859085, 5.1049324095908615, 7.2125944429670925, 1], \"289\": [0, 0, 3, 108, 0, 0, 0.19331931100349597, 5.621850486333652, 3], \"369\": [0, 0, 0, 17, 0, 0, 0, 4.837841353445263, 4], \"54\": [1, 6, 14, 157, 0, 0.2631357702277599, 0.9703227474551879, 5.329575971800686, 2], \"676\": [0, 0, 0, 20, 0, 0, 0, 4.51719675863708, 4], \"14\": [7, 14, 28, 176, 0.14609261849749594, 0.48809737268843456, 1.2575668208080133, 4.6059714099275, 1], \"358\": [0, 0, 0, 18, 0, 0, 0, 5.444979770578703, 4], \"169\": [4, 5, 11, 95, 0.05266106420759361, 0.08110798870964722, 0.34282482548058724, 3.44638972254981, 1], \"836\": [2, 4, 102, 205, 0.538996500732687, 1.349926716949016, 6.141749125642052, 8.708176186230478, 1], \"72\": [6, 6, 10, 107, 0.3570324485603081, 0.3570324485603081, 0.7847665181371148, 4.919730298359334, 1], \"79\": [3, 5, 13, 102, 0.07302513501488987, 0.19098203835840177, 0.8848243875247229, 4.480255016059744, 1], \"253\": [4, 15, 44, 263, 0.29352848825416117, 1.7574166761861914, 3.744298023152526, 7.293365020961828, 1], \"76\": [3, 5, 9, 148, 0.06620063715598122, 0.17404915836238866, 0.47993513674665234, 5.11780002898894, 1], \"227\": [1, 3, 4, 41, 0, 0.1625189294977749, 0.2728669866666403, 3.5216032688130334, 2], \"392\": [1, 2, 8, 77, 0, 0.022548869686613078, 0.3110667131857901, 3.5460928340936158, 2], \"103\": [1, 1, 2, 38, 0, 0, 0.04475019579861455, 2.859839158432512, 3], \"362\": [4, 4, 8, 73, 1.007640510462383, 1.007640510462383, 2.0739919369122712, 6.35983712483876, 1], \"43\": [0, 0, 8, 90, 0, 0, 0.6479829135058159, 4.753297168741798, 3], \"198\": [4, 11, 19, 132, 0.08682239465891518, 0.5223238904533638, 1.1139885526087, 4.599319576882998, 1], \"33\": [5, 11, 13, 168, 0.09656280495429714, 0.399227799751288, 0.5219556684948284, 4.745256476550343, 1], \"494\": [0, 2, 3, 22, 0, 0.08320805808821628, 0.17833676615626598, 2.438649530406136, 2], \"621\": [2, 3, 8, 60, 0.032897703507059034, 0.07255397028698765, 0.4286066366698587, 3.4336153855024896, 1], \"23\": [1, 8, 15, 209, 0, 0.38355653952648555, 0.9721171982752935, 5.76494376879899, 2], \"307\": [1, 1, 3, 46, 0, 0, 0.39465419200394874, 4.739269786175687, 3], \"821\": [0, 1, 2, 42, 0, 0, 1.0663514264498883, 6.730988472387927, 3], \"465\": [0, 1, 3, 80, 0, 0, 0.6019569424953487, 6.373388968854875, 3], \"415\": [0, 2, 2, 55, 0, 0.08994823666293948, 0.08994823666293948, 4.275510913069674, 2], \"315\": [6, 8, 17, 144, 1.0360919316867756, 1.4427510697875479, 2.7470118804501316, 6.951295879387724, 1], \"486\": [0, 0, 2, 38, 0, 0, 0.36101334553733055, 5.058716628707031, 3], \"539\": [0, 1, 19, 69, 0, 0, 3.633280448015174, 6.1842837114429665, 3], \"835\": [0, 0, 0, 30, 0, 0, 0, 4.65653956248082, 4], \"7\": [6, 17, 23, 180, 0.144830947878456, 0.8114111010536795, 1.1909007227585833, 4.946997137655145, 1], \"822\": [0, 0, 2, 21, 0, 0, 0.219455778235025, 3.3305713352662716, 3], \"140\": [0, 3, 4, 82, 0, 0.2972515234679316, 0.4795730802618863, 5.555598058260072, 2], \"6\": [1, 3, 5, 40, 0, 0.0751605712416521, 0.19624555983340192, 2.696202656555745, 2], \"353\": [0, 1, 4, 42, 0, 0, 1.9676501356917193, 6.517697441698574, 3], \"49\": [7, 10, 17, 115, 0.16919337026410322, 0.31934258967762036, 0.7358635421615316, 3.923415916766817, 1], \"679\": [3, 4, 7, 80, 1.0045833390198333, 1.4053425560905852, 2.344022282858219, 7.112603626275918, 1], \"487\": [0, 0, 3, 8, 0, 0, 0.5937747067467416, 1.9082722628667792, 3], \"41\": [2, 4, 9, 117, 0.03956994968697194, 0.14967187439189467, 0.5973828108459681, 4.931828551372985, 1], \"525\": [0, 1, 3, 28, 0, 0, 0.12893368337589317, 2.5604047718309966, 3], \"632\": [0, 0, 2, 20, 0, 0, 0.3933437475758196, 3.8921434959379564, 3], \"238\": [3, 6, 9, 103, 0.028118066108771662, 0.10801857683930276, 0.2284526271139764, 3.540693629464457, 1], \"864\": [0, 0, 0, 16, 0, 0, 0, 4.960794238017947, 4], \"42\": [5, 12, 26, 426, 0.12343063006821355, 0.5634370191239492, 1.5156294945939908, 6.8577218047394854, 1], \"127\": [2, 2, 6, 130, 0.0628149945792227, 0.0628149945792227, 0.45961762813739493, 5.6128260216753105, 1], \"268\": [2, 2, 6, 51, 0.021978906718775244, 0.021978906718775244, 0.18232155679395462, 2.7340058157587332, 1], \"862\": [4, 7, 18, 149, 0.9144198239383433, 1.7190882789306958, 3.4429908667494207, 7.584309761389152, 1], \"659\": [0, 0, 1, 53, 0, 0, 0, 6.2901714951817524, 4], \"26\": [6, 8, 12, 102, 0.07937174446305516, 0.1370245958903325, 0.2854997939770356, 3.210193214543388, 1], \"57\": [3, 10, 26, 153, 0.0658613976415558, 0.5632831418462052, 1.8104936252267874, 5.178588241572697, 1], \"334\": [1, 1, 7, 68, 0, 0, 0.4513499342235005, 4.0006349387873374, 3], \"330\": [1, 1, 1, 6, 0, 0, 0, 2.174108575527616, 4], \"287\": [2, 2, 5, 106, 0.0034977300437545075, 0.0034977300437545075, 0.021662748156910577, 2.379854412631218, 1], \"285\": [0, 0, 2, 47, 0, 0, 0.325422400434628, 5.359583174334115, 3], \"380\": [5, 6, 13, 118, 0.2927711419592522, 0.3986391430377645, 1.1937163041587469, 5.245745427419236, 1], \"874\": [0, 2, 7, 198, 0, 0.10508346897368827, 0.8575341702404932, 6.987558409172175, 2], \"91\": [2, 2, 8, 110, 0.06035013533317068, 0.06035013533317068, 0.6908116403780171, 5.239097892604358, 1], \"739\": [3, 5, 7, 46, 0.08376988306545878, 0.2173012756899814, 0.38915153261664065, 3.0664797471179366, 1], \"69\": [3, 5, 7, 76, 0.05074369283483175, 0.13504845991927522, 0.24951343724930342, 3.5346450272245344, 1], \"150\": [3, 5, 40, 167, 0.08837936625905458, 0.22846815942973628, 2.858026736887087, 5.657044558640722, 1], \"155\": [0, 1, 1, 93, 0, 0, 0, 4.147322925484726, 4], \"407\": [0, 1, 2, 50, 0, 0, 0.9088557533866369, 6.828270467480552, 3], \"418\": [2, 3, 12, 137, 0.462623521948113, 0.8430873278508602, 3.0990318433917947, 7.869580520195611, 1], \"873\": [1, 6, 28, 315, 0, 1.6945957207744073, 4.531908527501305, 8.869895953075108, 2], \"715\": [13, 23, 46, 96, 2.9878792479136793, 3.4502788538346927, 5.401017799314536, 7.111003645934348, 1], \"876\": [0, 1, 4, 70, 0, 0, 0.39931124253378614, 5.015706035428459, 3], \"359\": [28, 44, 96, 322, 3.3468065261069193, 3.597099630303247, 5.675936544972268, 8.329065791338945, 1], \"13\": [6, 24, 60, 297, 0.12148386958245866, 1.1206145956840698, 2.6331193904407146, 5.75687971621321, 1], \"304\": [0, 0, 2, 107, 0, 0, 0.20585205420414873, 6.481380951189537, 3], \"190\": [1, 2, 4, 36, 0, 0.07095173597228444, 0.2578291093020998, 3.2081887823947746, 2], \"879\": [0, 0, 0, 69, 0, 0, 0, 5.982220479632875, 4], \"560\": [4, 8, 24, 115, 0.12044615307586716, 0.4134332777573413, 1.724194149732289, 4.667354738941073, 1], \"288\": [0, 0, 0, 66, 0, 0, 0, 8.197550348258854, 4], \"70\": [7, 13, 18, 155, 0.1577815310966651, 0.46339832538051273, 0.7561694673397649, 4.436673434460761, 1], \"680\": [1, 3, 4, 19, 0, 0.11027072063891692, 0.188348264660815, 1.732672782545614, 2], \"382\": [0, 0, 1, 17, 0, 0, 0, 3.1492653377601454, 4], \"133\": [0, 0, 2, 91, 0, 0, 0.04908961019652358, 4.651913303657416, 3], \"337\": [2, 4, 6, 61, 0.219455778235025, 0.6839021224158942, 1.1658312632581607, 5.4313504091637155, 1], \"722\": [0, 0, 3, 47, 0, 0, 1.0045833390198333, 6.050384630252964, 3], \"111\": [0, 2, 2, 12, 0, 0.06080900459560568, 0.06080900459560568, 1.1772197007293612, 2], \"28\": [3, 4, 9, 53, 0.03636764417087485, 0.0637666183589893, 0.2876820724517809, 2.5268877614787777, 1], \"883\": [2, 3, 3, 70, 0.09287412500644375, 0.1980128865886302, 0.1980128865886302, 4.785731948371791, 1], \"882\": [1, 2, 3, 65, 0, 0.08068891125014274, 0.1731762239717629, 4.493541871393738, 2], \"135\": [2, 4, 10, 69, 0.05414041967458324, 0.20092353996413032, 0.8716366476618025, 4.204322528236855, 1], \"375\": [0, 1, 1, 52, 0, 0, 0, 5.693969570436866, 4], \"341\": [0, 0, 4, 54, 0, 0, 0.6014387540704463, 5.015722755522795, 3], \"692\": [1, 6, 15, 73, 0, 0.9925527167077854, 2.4521430320723865, 5.5272848531059005, 2], \"348\": [0, 1, 2, 32, 0, 0, 0.29626581614317243, 4.488127962180043, 3], \"73\": [2, 2, 3, 44, 0.02753098863445842, 0.02753098863445842, 0.06091192506698996, 2.6712430551729014, 1], \"400\": [0, 0, 3, 34, 0, 0, 0.5742859776832164, 4.60809735328262, 3], \"340\": [0, 1, 3, 139, 0, 0, 0.6931471805599453, 7.618368041665739, 3], \"126\": [0, 1, 2, 45, 0, 0, 0.18924199963852842, 4.664248327276218, 3], \"749\": [0, 0, 0, 10, 0, 0, 0, 2.822112464365394, 4], \"286\": [0, 1, 2, 44, 0, 0, 0.22825865198098017, 4.825530726101169, 3], \"163\": [1, 1, 2, 115, 0, 0, 0.19014428247516366, 6.5380159265899715, 3], \"413\": [2, 2, 4, 12, 0.4795730802618863, 0.4795730802618863, 1.241713132308783, 3.138557719702318, 1], \"283\": [5, 9, 14, 103, 0.0916391679026433, 0.27074481781742316, 0.5609858388416016, 3.7275099321187906, 1], \"173\": [0, 0, 4, 81, 0, 0, 0.33363937353690887, 5.092604054179989, 3], \"444\": [0, 2, 3, 36, 0, 1.6094379124341003, 2.302585092994046, 7.164205996731423, 2], \"346\": [4, 5, 8, 137, 0.462623521948113, 0.6518655215866413, 1.209837923778334, 6.534589839840945, 1], \"474\": [0, 0, 3, 12, 0, 0, 0.676886659688165, 2.798779198133537, 3], \"152\": [0, 1, 4, 81, 0, 0, 0.12399764165657076, 4.006157292406874, 3], \"360\": [0, 0, 1, 31, 0, 0, 0, 6.460465770468754, 4], \"9\": [5, 10, 24, 152, 0.06086083299032161, 0.22394644176280024, 0.8943653712451894, 4.073798109281686, 1], \"658\": [0, 1, 6, 40, 0, 0, 0.6563976383512038, 3.739696111458467, 3], \"68\": [6, 11, 34, 226, 0.6478319843479028, 1.4019932706629943, 3.4100191149913033, 7.161939197515598, 1], \"230\": [1, 1, 2, 48, 0, 0, 0.03603993648319687, 3.0936749958108667, 3], \"224\": [0, 3, 13, 97, 0, 0.21205871888971678, 1.6929874862688834, 5.50964562536645, 2], \"44\": [2, 3, 4, 73, 0.0760823064574395, 0.16370399777788422, 0.27475300125292357, 4.662814537070953, 1], \"12\": [0, 3, 11, 56, 0, 0.07878087785311429, 0.7428910055585142, 3.38285341522133, 2], \"351\": [0, 0, 0, 55, 0, 0, 0, 7.778920476023098, 4], \"250\": [0, 0, 2, 32, 0, 0, 0.6157605169445252, 5.384885451835951, 3], \"724\": [0, 0, 3, 34, 0, 0, 0.10438204199854623, 2.7132104581115386, 3], \"361\": [0, 0, 0, 66, 0, 0, 0, 8.197550348258854, 4], \"281\": [1, 1, 1, 57, 0, 0, 0, 6.748667188556721, 4], \"549\": [0, 0, 1, 26, 0, 0, 0, 5.873542710679504, 4], \"305\": [0, 1, 1, 67, 0, 0, 0, 6.2105603675980205, 4], \"210\": [3, 11, 25, 112, 0.10389959501815148, 0.9050354136421926, 2.1521582092612994, 5.030770809484437, 1], \"242\": [0, 3, 7, 78, 0, 0.025211419346496032, 0.13015691113449301, 2.9010863832623444, 2], \"121\": [6, 14, 27, 245, 0.0725101102602455, 0.34319405123491636, 0.9253989068828663, 4.8357825151902265, 1], \"122\": [0, 0, 5, 56, 0, 0, 0.15348688956060175, 3.0787450076475005, 3], \"200\": [9, 18, 48, 488, 0.3838584281439548, 1.0549217509184634, 2.660974337909329, 7.223884769033019, 1], \"274\": [1, 2, 10, 73, 0, 0.046737477851689815, 0.7867159580957341, 4.166838140214971, 2], \"214\": [1, 2, 3, 28, 0, 0.19290366612449156, 0.3911791508606879, 3.750645559501258, 2], \"266\": [0, 0, 2, 24, 0, 0, 0.4519851237430572, 4.418673849710157, 3], \"336\": [0, 1, 3, 40, 0, 0, 0.9694005571881035, 5.672839233706122, 3], \"137\": [0, 4, 8, 58, 0, 0.2173605493505622, 0.6786264821680923, 3.948544756122551, 2], \"138\": [2, 2, 3, 82, 0.04292504471703392, 0.04292504471703392, 0.09411329157047872, 4.310252606063324, 1], \"503\": [1, 1, 3, 18, 0, 0, 0.21408407022088655, 2.257551856919066, 3], \"381\": [0, 0, 2, 20, 0, 0, 0.37117603462953225, 3.823816163047481, 3], \"259\": [1, 1, 1, 42, 0, 0, 0, 5.752139026001891, 4], \"799\": [0, 0, 0, 5, 0, 0, 0, 0.8939076496375373, 4], \"148\": [1, 2, 4, 35, 0, 0.05675281659244948, 0.20991778909494854, 2.9346700687728826, 2], \"300\": [8, 9, 20, 133, 0.436021094285696, 0.5257436831008336, 1.485208008798504, 5.02066491601362, 1], \"176\": [0, 1, 3, 28, 0, 0, 0.07857443263262014, 2.090825394427617, 3], \"101\": [1, 1, 7, 65, 0, 0, 0.33029160575240424, 3.544461453786294, 3], \"498\": [0, 0, 0, 36, 0, 0, 0, 3.9915347245536315, 4], \"393\": [1, 1, 5, 68, 0, 0, 1.6558038329920262, 6.661735010078201, 3], \"391\": [0, 0, 0, 21, 0, 0, 0, 4.869346438558338, 4], \"136\": [2, 7, 11, 75, 0.0204506104712908, 0.22561982166747313, 0.48550781578170077, 3.3994175995330562, 1], \"193\": [0, 0, 2, 17, 0, 0, 0.3393540829961018, 3.4039711245643267, 3], \"105\": [0, 1, 3, 50, 0, 0, 0.09758549364146035, 3.3798986846557604, 3], \"141\": [2, 3, 5, 47, 0.010280224177866015, 0.022983647044268543, 0.06258298076116925, 1.8994793527146827, 1], \"295\": [5, 5, 13, 173, 0.30803628344355427, 0.30803628344355427, 1.235085477908839, 6.0668478985911305, 1], \"807\": [0, 0, 3, 16, 0, 0, 0.19290366612449156, 1.949709417883449, 3], \"128\": [6, 15, 32, 194, 0.16682130998799968, 0.7583001120011277, 1.8187085732574668, 5.247587154459094, 1], \"273\": [0, 1, 3, 43, 0, 0, 0.4578330936254804, 4.786304988108653, 3], \"540\": [0, 3, 6, 49, 0, 0.15521621002929656, 0.5138062519041285, 3.8205668385016303, 2], \"15\": [9, 20, 28, 290, 0.20547213489967855, 0.7544507508603376, 1.1655943159568243, 5.467972683642199, 1], \"10\": [0, 1, 7, 174, 0, 0, 0.48452867147552864, 5.952728463056772, 3], \"168\": [0, 2, 3, 53, 0, 0.1118483001365689, 0.23607730009877803, 4.428480770878746, 2], \"812\": [2, 2, 3, 14, 0.07651914983419623, 0.07651914983419623, 0.16460422889798626, 1.5849420404357772, 1], \"310\": [0, 0, 2, 29, 0, 0, 0.21472498084861397, 3.935242480988645, 3], \"211\": [1, 3, 10, 53, 0, 0.20909179785855941, 1.2764737272850497, 4.294824142284117, 2], \"279\": [0, 1, 3, 108, 0, 0, 0.2520218920528967, 5.916539800584858, 3], \"22\": [6, 12, 15, 153, 0.2071597101203954, 0.6526980917787689, 0.8914318650551081, 5.011514797843868, 1], \"222\": [1, 1, 6, 172, 0, 0, 0.33742734653145134, 5.7979424539493785, 3], \"329\": [4, 7, 31, 191, 0.3828597229337993, 0.8873031950009028, 3.3678988450801235, 6.96673808806527, 1], \"219\": [0, 0, 2, 36, 0, 0, 0.03731776300719518, 2.585617803434701, 3], \"29\": [0, 1, 6, 57, 0, 0, 0.3117796240308414, 3.5232952124363086, 3], \"218\": [0, 0, 1, 113, 0, 0, 0, 7.110180784740261, 4], \"662\": [1, 2, 3, 33, 0, 0.13534134786976212, 0.2822324676842163, 3.6966246725681344, 2], \"184\": [0, 1, 2, 8, 0, 0, 0.08875000391266996, 0.9066367927589795, 3], \"151\": [0, 1, 3, 36, 0, 0, 0.04467244005159257, 2.0217358812161805, 3], \"323\": [3, 3, 8, 24, 0.35105168638437023, 0.35105168638437023, 1.3839551787667184, 3.3255927961691825, 1], \"471\": [0, 0, 1, 35, 0, 0, 0, 7.2131878751737535, 4], \"365\": [5, 10, 12, 37, 1.0576858609588922, 2.1422751328062524, 2.470390774836524, 4.640136834657582, 1], \"485\": [3, 9, 16, 40, 0.061621134106173814, 0.4523702575818251, 1.0324402935227996, 2.5059501410756972, 1], \"34\": [2, 5, 9, 156, 0.02514274492135322, 0.1476734414719868, 0.41580820823124165, 5.045660991367237, 1], \"71\": [3, 4, 8, 63, 0.1005310110120055, 0.17228309044709728, 0.5607901861913642, 3.86005377053893, 1], \"371\": [1, 1, 2, 19, 0, 0, 0.06485254217956125, 1.9489847826128974, 3], \"747\": [0, 1, 2, 22, 0, 0, 0.04357988070402507, 1.8510927406540891, 3], \"284\": [0, 0, 0, 69, 0, 0, 0, 6.779344440803768, 4], \"645\": [1, 2, 2, 6, 0, 0.061557892999433365, 0.061557892999433365, 0.4519851237430572, 2], \"112\": [0, 1, 5, 31, 0, 0, 0.2173012756899814, 2.3314584940869327, 3], \"246\": [0, 0, 0, 73, 0, 0, 0, 6.949031724907466, 4], \"327\": [0, 0, 0, 18, 0, 0, 0, 4.089225074119115, 4], \"109\": [0, 1, 2, 29, 0, 0, 0.15355773584309076, 3.577030079104698, 3], \"684\": [0, 1, 1, 39, 0, 0, 0, 4.0525847717345265, 4], \"153\": [3, 3, 3, 54, 0.05221603708224446, 0.05221603708224446, 0.05221603708224446, 2.906978557067458, 1], \"298\": [0, 0, 1, 89, 0, 0, 0, 7.894185797340446, 4], \"143\": [2, 2, 5, 52, 0.0006417249787060122, 0.0006417249787060122, 0.004004041417863671, 0.36042960162087806, 1], \"80\": [1, 2, 3, 16, 0, 0.02177549295653461, 0.04834453720424788, 0.8755735812097027, 2], \"572\": [0, 1, 2, 25, 0, 0, 0.056194558343641995, 2.302156053219041, 3], \"85\": [9, 10, 11, 143, 1.2986847190810076, 1.4561640410803764, 1.6054827325911725, 6.509128985852085, 1], \"541\": [1, 2, 2, 7, 0, 0.17135825199668508, 0.17135825199668508, 1.1871991535511697, 2], \"463\": [0, 1, 1, 56, 0, 0, 0, 4.770914619151635, 4], \"721\": [4, 5, 7, 68, 0.40032370860774574, 0.5705448584676129, 0.9193629309111252, 4.961176095040999, 1], \"21\": [9, 14, 22, 150, 0.21034523817090028, 0.44882722638192196, 0.8749869257329194, 4.186489363651146, 1], \"89\": [2, 3, 3, 21, 0.15123096972392353, 0.3128723212803395, 0.3128723212803395, 2.940835791581419, 1], \"652\": [1, 4, 13, 82, 0, 0.7328875092094594, 2.5192210291515176, 6.117406778156958, 2], \"100\": [2, 5, 10, 63, 0.02139118998131756, 0.12675170563914387, 0.4321333551903257, 3.1078679917727117, 1], \"221\": [0, 0, 3, 115, 0, 0, 0.24783616390458124, 6.022941903414102, 3], \"630\": [0, 0, 2, 16, 0, 0, 0.4519851237430572, 3.62264069553743, 3], \"535\": [0, 0, 0, 23, 0, 0, 0, 4.166697895347202, 4], \"636\": [1, 1, 5, 47, 0, 0, 0.9009692771797215, 4.865324803362648, 3], \"78\": [0, 6, 9, 71, 0, 0.23210185425173346, 0.46235471196826794, 3.622922102019913, 2], \"568\": [0, 0, 0, 38, 0, 0, 0, 7.914844747265817, 4], \"203\": [0, 0, 4, 27, 0, 0, 0.18571714579509285, 2.328392093477457, 3], \"419\": [0, 2, 15, 51, 0, 0.3281156420302715, 3.1287174004977265, 5.531856377784509, 2], \"556\": [1, 2, 5, 18, 0, 0.25452986513488046, 1.0337516544660688, 3.1941822246255196, 2], \"833\": [0, 0, 2, 34, 0, 0, 0.3030501026800949, 4.634042755355301, 3], \"35\": [4, 8, 14, 64, 0.06259375686392714, 0.22982285027797753, 0.5829303218895499, 2.8606602743751504, 1], \"110\": [2, 2, 3, 47, 0.030962225603966897, 0.030962225603966897, 0.06836374280939023, 2.9069171182305524, 1], \"312\": [2, 4, 4, 39, 0.19478832555908462, 0.620692101344523, 0.620692101344523, 4.412513153105414, 1], \"402\": [0, 3, 3, 20, 0, 0.24852405325795715, 0.24852405325795715, 2.6019848825908354, 2], \"720\": [0, 0, 9, 27, 0, 0, 2.8080115520822657, 4.946519657890331, 3], \"820\": [1, 1, 1, 17, 0, 0, 0, 2.7771328829650166, 4], \"887\": [0, 0, 1, 64, 0, 0, 0, 7.006733072048383, 4], \"202\": [2, 2, 20, 117, 0.03673507632532181, 0.03673507632532181, 1.556419927447304, 4.85662971993662, 1], \"213\": [1, 7, 21, 55, 0, 0.5598345345183796, 2.048137342693478, 3.8534282286903507, 2], \"237\": [0, 1, 3, 31, 0, 0, 0.11027072063891692, 2.5952410787773768, 3], \"406\": [2, 3, 4, 77, 0.5108256237659907, 0.9162907318741551, 1.2992829841302609, 6.893259650230692, 1], \"818\": [0, 0, 0, 8, 0, 0, 0, 4.390845967087418, 4], \"318\": [0, 0, 1, 28, 0, 0, 0, 4.351344410821905, 4], \"808\": [2, 3, 14, 92, 0.33647223662121295, 0.6418538861723948, 3.0252910757955354, 6.738569650607437, 1], \"865\": [1, 7, 19, 214, 0, 1.9218125974762528, 3.783648361915872, 8.480575098111991, 2], \"483\": [0, 0, 0, 3, 0, 0, 0, 1.5882904151981694, 4], \"324\": [1, 1, 1, 38, 0, 0, 0, 4.803237957376775, 4], \"903\": [2, 2, 2, 9, 0.4054651081081644, 0.4054651081081644, 0.4054651081081644, 2.4055916404672826, 1], \"562\": [0, 0, 10, 63, 0, 0, 4.355722146787147, 7.970411719908933, 3], \"18\": [5, 7, 9, 96, 0.2408507727676819, 0.4277281460974972, 0.6325225587435105, 4.615392552086874, 1], \"247\": [3, 3, 3, 68, 0.8187244879431477, 0.8187244879431477, 0.8187244879431477, 6.476851728223615, 1], \"115\": [1, 3, 5, 43, 0, 0.23483959107740104, 0.5511769192895581, 4.01065781645597, 2], \"384\": [1, 4, 9, 64, 0, 0.9315582040049435, 2.173439672312777, 5.974893017513745, 2], \"850\": [0, 0, 0, 35, 0, 0, 0, 3.8928664174977547, 4], \"302\": [0, 0, 3, 23, 0, 0, 1.9459101490553132, 5.864751662360852, 3], \"765\": [1, 2, 4, 36, 0, 0.7777045685880084, 1.7414976344471667, 5.942279279239294, 2], \"792\": [0, 1, 8, 52, 0, 0, 0.2869029528175109, 2.7070742274177095, 3], \"727\": [0, 0, 2, 82, 0, 0, 0.680877087968131, 7.39945790350507, 3], \"857\": [0, 0, 0, 11, 0, 0, 0, 2.8759073308795386, 4], \"884\": [0, 0, 0, 6, 0, 0, 0, 2.2989819054090246, 4], \"278\": [2, 3, 20, 107, 0.05691436258797462, 0.12378418901663191, 1.9251993496127517, 5.124092577618004, 1], \"320\": [0, 0, 0, 20, 0, 0, 0, 5.728741825220359, 4], \"527\": [0, 0, 0, 18, 0, 0, 0, 8.02981624994113, 4], \"689\": [0, 0, 1, 8, 0, 0, 0, 2.584739049451221, 4], \"912\": [3, 6, 38, 178, 0.2166710368085923, 0.676886659688165, 3.684299087760357, 6.744828557190525, 1], \"564\": [3, 4, 5, 14, 0.7672551527136672, 1.1155618469818829, 1.436304781694552, 3.259412199508057, 1], \"27\": [3, 6, 8, 52, 0.023666631812186485, 0.09148070761432414, 0.15726299114129585, 2.0999596642299263, 1], \"209\": [1, 1, 3, 50, 0, 0, 0.07598590697792203, 3.1288352582046506, 3], \"39\": [6, 10, 14, 64, 0.20800057121164617, 0.4960738034571883, 0.8148474606399841, 3.3035399155148153, 1], \"657\": [0, 0, 0, 8, 0, 0, 0, 1.2777822270876968, 4], \"188\": [0, 1, 6, 42, 0, 0, 0.6782113971423434, 3.878932711144601, 3], \"94\": [2, 2, 5, 69, 0.028013036227673965, 0.028013036227673965, 0.16344179897725258, 3.5464141322731626, 1], \"239\": [3, 8, 25, 155, 0.09531017980432487, 0.537142932083364, 2.0724728723637424, 5.587176474587786, 1], \"276\": [0, 0, 1, 34, 0, 0, 0, 5.385985338108615, 4], \"104\": [3, 6, 11, 84, 0.03527011350445505, 0.13417936772507644, 0.39383007213895876, 3.3686868216779624, 1], \"199\": [0, 1, 2, 24, 0, 0, 0.02730545069026746, 1.6030627203020686, 3], \"377\": [0, 1, 3, 22, 0, 0, 0.37948962170490375, 3.2475660590038946, 3], \"55\": [1, 4, 8, 89, 0, 0.07229886582761733, 0.2622921690130782, 3.637085735102406, 2], \"605\": [0, 1, 2, 17, 0, 0, 0.03025949476311255, 1.1656732156473422, 3], \"37\": [3, 5, 11, 87, 0.17351092711179975, 0.42285685082003355, 1.2662060387518208, 5.073739326951139, 1], \"404\": [1, 1, 2, 14, 0, 0, 0.1616413515564159, 2.2577943470024096, 3], \"363\": [0, 0, 1, 41, 0, 0, 0, 6.2017860770806355, 4], \"460\": [2, 3, 4, 48, 0.23922968906583414, 0.47505839990735965, 0.7328875092094594, 5.050574721110487, 1], \"595\": [1, 3, 6, 37, 0, 0.0458328688072345, 0.17193253323798435, 2.092440266365692, 2], \"416\": [4, 5, 6, 52, 0.21158957890851005, 0.3134876112551424, 0.4253928635405313, 3.705649062473327, 1], \"501\": [2, 2, 2, 23, 0.17666954336260812, 0.17666954336260812, 0.17666954336260812, 3.27563578701027, 1], \"609\": [1, 1, 3, 24, 0, 0, 1.5260563034950494, 5.440544627174555, 3], \"157\": [1, 1, 2, 56, 0, 0, 0.6576404921030354, 6.589855405455246, 3], \"261\": [0, 0, 3, 38, 0, 0, 0.37156355643248307, 4.289592233382245, 3], \"417\": [8, 9, 18, 137, 0.9617082115649478, 1.11365016603265, 2.217225244042889, 6.1596371851842004, 1], \"567\": [1, 3, 5, 30, 0, 0.11701645838618793, 0.29626581614317243, 2.592680326046951, 2], \"629\": [0, 0, 2, 8, 0, 0, 0.4978384282391795, 2.4231958313956983, 3], \"505\": [0, 0, 0, 31, 0, 0, 0, 5.364965517507274, 4], \"370\": [0, 0, 1, 16, 0, 0, 0, 4.522832957860566, 4], \"496\": [1, 2, 2, 20, 0, 0.06118115647508111, 0.06118115647508111, 1.9855235629700743, 2], \"424\": [11, 15, 25, 81, 0.7940891310855219, 1.1800414249701046, 1.9827275714113513, 4.197223505538272, 1], \"719\": [1, 2, 2, 15, 0, 0.46813621507094005, 0.46813621507094005, 3.539732717456389, 2], \"421\": [0, 1, 1, 22, 0, 0, 0, 4.021748503150128, 4], \"410\": [4, 4, 9, 212, 0.41181433578682314, 0.41181433578682314, 1.275256044545383, 7.263459872109861, 1], \"123\": [1, 2, 4, 21, 0, 0.08552217343816201, 0.30538164955118186, 2.3799856895621114, 2], \"395\": [1, 1, 3, 28, 0, 0, 0.43318965612301924, 3.872355563610954, 3], \"378\": [0, 0, 2, 50, 0, 0, 0.13959908918694763, 4.546402629502198, 3], \"523\": [0, 0, 2, 14, 0, 0, 0.11848160362052347, 1.965398573641929, 3], \"678\": [1, 1, 4, 14, 0, 0, 0.41726149154853387, 1.990150020297075, 3], \"131\": [0, 0, 2, 32, 0, 0, 0.07369816407476748, 3.020684953614354, 3], \"270\": [0, 0, 0, 26, 0, 0, 0, 3.4624193713726092, 4], \"181\": [1, 1, 3, 17, 0, 0, 0.12014431184206324, 1.6254982797578572, 3], \"593\": [0, 1, 8, 50, 0, 0, 2.7652947438772277, 6.3635463230657185, 3], \"74\": [3, 5, 10, 44, 0.05230710012187697, 0.13903531131604252, 0.4679131402060907, 2.5262220660821852, 1], \"389\": [1, 3, 3, 47, 0, 0.17452286430813568, 0.17452286430813568, 3.863440180994289, 2], \"383\": [0, 1, 4, 22, 0, 0, 0.1343172472818617, 1.6732330342928239, 3], \"552\": [0, 1, 10, 74, 0, 0, 3.0834378539730967, 7.036787249189823, 3], \"60\": [1, 1, 5, 21, 0, 0, 0.49432189693530426, 2.5042687609605534, 3], \"405\": [0, 1, 2, 11, 0, 0, 0.2529118727100632, 2.269041735492043, 3], \"408\": [0, 0, 1, 13, 0, 0, 0, 1.689384298683862, 4], \"344\": [1, 3, 5, 58, 0, 0.07067304315127977, 0.18516535314476498, 3.3417941641607616, 2], \"45\": [1, 3, 8, 63, 0, 0.05658328801532509, 0.34640243958911665, 3.2800375234838866, 2], \"611\": [1, 1, 2, 12, 0, 0, 0.31760375231683013, 2.667640828526139, 3], \"97\": [0, 1, 5, 43, 0, 0, 0.5118945709548958, 3.917151637777599, 3], \"231\": [0, 0, 2, 44, 0, 0, 0.029306126585499394, 2.730378016358707, 3], \"191\": [0, 0, 2, 29, 0, 0, 0.06506359334706188, 2.7133706644794056, 3], \"293\": [0, 0, 0, 15, 0, 0, 0, 5.013676649229903, 4], \"294\": [0, 0, 0, 22, 0, 0, 0, 5.998636432690919, 4], \"338\": [0, 0, 2, 27, 0, 0, 0.054067221270275766, 2.4055916404672826, 3], \"251\": [0, 0, 0, 13, 0, 0, 0, 3.866439745602242, 4], \"373\": [0, 0, 3, 33, 0, 0, 0.2608348224155929, 3.608924311385426, 3], \"83\": [2, 2, 5, 26, 0.032762963124623665, 0.032762963124623665, 0.1890984308042043, 1.8877968894235733, 1], \"95\": [1, 1, 3, 25, 0, 0, 0.3981923487790846, 3.5508127626049646, 3], \"309\": [0, 1, 2, 30, 0, 0, 0.12361395596717664, 3.4175688052072575, 3], \"397\": [0, 0, 0, 8, 0, 0, 0, 1.7378944468621453, 4], \"292\": [0, 1, 2, 17, 0, 0, 0.2016859239757458, 2.83811806119396, 3], \"401\": [0, 0, 0, 27, 0, 0, 0, 4.381408118955882, 4], \"321\": [0, 0, 1, 8, 0, 0, 0, 2.6589846394404315, 4], \"24\": [1, 3, 3, 33, 0, 0.09551262944566821, 0.09551262944566821, 2.5710640879703646, 2], \"306\": [1, 1, 3, 9, 0, 0, 0.6987494361086152, 2.309043477154459, 3], \"225\": [0, 1, 3, 14, 0, 0, 0.11233744121460561, 1.2743171684038774, 3], \"179\": [0, 1, 2, 21, 0, 0, 0.12247703235966204, 2.728477348112043, 3], \"409\": [2, 2, 3, 22, 0.06311242331005625, 0.06311242331005625, 0.13678342801089993, 2.18050644767337, 1], \"354\": [0, 1, 6, 75, 0, 0, 1.4954936530848826, 6.291414415137924, 3], \"154\": [0, 1, 4, 21, 0, 0, 0.36350090900913223, 2.5676487117473177, 3], \"47\": [0, 0, 2, 20, 0, 0, 0.07696104113612832, 2.1936213897511982, 3], \"16\": [0, 1, 5, 46, 0, 0, 0.2924262358737592, 3.3892259444066175, 3], \"411\": [0, 0, 0, 5, 0, 0, 0, 3.9282224451393044, 4], \"379\": [1, 1, 3, 25, 0, 0, 1.9459101490553132, 6.031080478642937, 3], \"374\": [0, 0, 1, 23, 0, 0, 0, 2.3394337246613026, 4], \"40\": [1, 2, 4, 18, 0, 0.04180336980436055, 0.15765117803680806, 1.4910620946737319, 2], \"442\": [0, 0, 2, 39, 0, 0, 0.09055957704572704, 3.608466872661531, 3], \"368\": [1, 1, 1, 25, 0, 0, 0, 3.912662772271659, 4], \"272\": [0, 0, 2, 6, 0, 0, 0.680877087968131, 2.27678617301724, 3], \"356\": [1, 1, 1, 9, 0, 0, 0, 3.5859362386526716, 4], \"119\": [1, 1, 2, 24, 0, 0, 0.07893642545877254, 2.5479893168259586, 3], \"451\": [2, 2, 2, 23, 0.09958470542943662, 0.09958470542943662, 0.09958470542943662, 2.694273272020367, 1], \"422\": [0, 0, 0, 7, 0, 0, 0, 2.2736640974247346, 4], \"61\": [0, 1, 3, 14, 0, 0, 0.08593070021460303, 1.0796035720266084, 3], \"185\": [1, 3, 3, 14, 0, 0.18232155679395462, 0.18232155679395462, 1.6745312561353138, 2], \"313\": [0, 0, 0, 7, 0, 0, 0, 1.6427516686767207, 4], \"469\": [0, 0, 0, 5, 0, 0, 0, 4.832678719366457, 4], \"475\": [0, 1, 2, 24, 0, 0, 0.5042466526679481, 4.554750295513403, 3], \"438\": [0, 1, 3, 36, 0, 0, 0.20812125379246896, 3.532014223452265, 3], \"484\": [0, 0, 0, 9, 0, 0, 0, 4.403116059679232, 4], \"530\": [0, 0, 2, 13, 0, 0, 0.10371982620036639, 1.7222811055886682, 3], \"516\": [0, 1, 3, 15, 0, 0, 0.25708853309999324, 2.116139040118968, 3], \"458\": [0, 0, 5, 17, 0, 0, 1.37147927533475, 3.551744873904392, 3], \"557\": [0, 0, 2, 21, 0, 0, 0.11060987154397002, 2.6279069363948544, 3], \"175\": [2, 2, 4, 37, 0.03724825388061888, 0.03724825388061888, 0.14132824251813592, 2.63464058266333, 1], \"545\": [0, 0, 1, 5, 0, 0, 0, 1.423006710713329, 4], \"301\": [0, 0, 3, 29, 0, 0, 0.401795379219202, 3.850976942086829, 3], \"172\": [1, 1, 2, 13, 0, 0, 0.07786032177227234, 1.4827746320918518, 3], \"644\": [0, 0, 0, 3, 0, 0, 0, 2.501922749405715, 4], \"914\": [0, 0, 0, 20, 0, 0, 0, 5.001336907262104, 4], \"761\": [3, 7, 15, 43, 0.7221347174331976, 1.911718784307034, 3.3131159136126813, 5.383317425510622, 1], \"212\": [2, 4, 9, 86, 0.08739182211500984, 0.31137184357418557, 1.047078638552927, 5.131362240777966, 1], \"257\": [2, 2, 2, 20, 0.1147388932751553, 0.1147388932751553, 0.1147388932751553, 2.5734309090915874, 1], \"314\": [0, 0, 0, 12, 0, 0, 0, 1.3921400627328016, 4], \"316\": [2, 3, 6, 40, 0.21357410029805904, 0.42899560551835847, 1.1451323043030026, 4.5632220920951765, 1], \"326\": [0, 0, 2, 20, 0, 0, 0.06136894637629212, 1.9882514375209523, 3], \"331\": [0, 0, 0, 4, 0, 0, 0, 1.2491597809103467, 4], \"357\": [0, 0, 0, 3, 0, 0, 0, 0.5456944494168147, 4], \"480\": [0, 0, 0, 29, 0, 0, 0, 4.319532664224936, 4], \"481\": [0, 0, 0, 2, 0, 0, 0, 0.8837000074158814, 4], \"493\": [2, 2, 6, 31, 0.11918851726511835, 0.11918851726511835, 0.760450862456052, 3.4435674549754527, 1], \"506\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"514\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"520\": [0, 0, 0, 3, 0, 0, 0, 0.29924289485285693, 4], \"521\": [0, 0, 0, 4, 0, 0, 0, 0.8733264704085533, 4], \"522\": [1, 1, 1, 5, 0, 0, 0, 2.6466692128503775, 4], \"526\": [0, 0, 0, 2, 0, 0, 0, 0.4978384282391795, 4], \"531\": [0, 0, 0, 3, 0, 0, 0, 2.0017303819410928, 4], \"533\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"551\": [0, 0, 4, 39, 0, 0, 0.6520856937621714, 4.478424800469066, 3], \"569\": [0, 0, 1, 2, 0, 0, 0, 0.774101381002987, 4], \"581\": [0, 0, 0, 11, 0, 0, 0, 2.3087088807164626, 4], \"583\": [0, 0, 0, 7, 0, 0, 0, 1.4472296946724406, 4], \"587\": [0, 0, 1, 11, 0, 0, 0, 3.785444755484316, 4], \"638\": [0, 0, 0, 4, 0, 0, 0, 1.9640469481066978, 4], \"643\": [1, 2, 3, 11, 0, 0.042833099994136516, 0.0939167287975245, 0.839622623322658, 2], \"651\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"656\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"665\": [1, 1, 3, 21, 0, 0, 0.41689380393178715, 3.2676687715950252, 3], \"667\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"668\": [0, 0, 0, 3, 0, 0, 0, 1.1100469784476288, 4], \"726\": [1, 1, 6, 23, 0, 0, 2.662587827025453, 5.279224459914988, 3], \"748\": [0, 0, 1, 8, 0, 0, 0, 1.4053787138016638, 4], \"757\": [0, 0, 2, 5, 0, 0, 1.6945957207744073, 3.356000296778297, 3], \"760\": [0, 0, 0, 5, 0, 0, 0, 3.9282224451393044, 4], \"770\": [0, 0, 1, 8, 0, 0, 0, 2.719153160906884, 4], \"779\": [0, 0, 0, 5, 0, 0, 0, 1.9561480128821631, 4], \"786\": [0, 0, 1, 19, 0, 0, 0, 4.670873546178666, 4], \"794\": [1, 1, 18, 56, 0, 0, 3.1179499062782403, 5.343821753070043, 3], \"795\": [1, 1, 1, 7, 0, 0, 0, 1.1375687155018843, 4], \"796\": [0, 0, 0, 8, 0, 0, 0, 1.4090400032316208, 4], \"798\": [0, 0, 0, 4, 0, 0, 0, 2.4531325852362826, 4], \"804\": [0, 0, 2, 42, 0, 0, 0.7777045685880084, 6.249886199876767, 3], \"805\": [0, 0, 0, 2, 0, 0, 0, 0.5465437063680699, 4], \"826\": [0, 2, 2, 14, 0, 0.9315582040049435, 0.9315582040049435, 4.332178118998614, 2], \"827\": [0, 0, 1, 109, 0, 0, 0, 7.680653763515835, 4], \"831\": [0, 0, 0, 3, 0, 0, 0, 1.2491597809103467, 4], \"834\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"861\": [3, 4, 7, 34, 0.24116205681688807, 0.3953127366441464, 0.9102116857977729, 3.58075714763928, 1], \"863\": [2, 3, 4, 18, 0.538996500732687, 0.9582549309731873, 1.349926716949016, 4.071510012709192, 1], \"867\": [0, 2, 3, 49, 0, 0.8286926725561692, 1.3618033411115948, 6.649925593051601, 2], \"868\": [0, 0, 0, 3, 0, 0, 0, 1.2296659862293455, 4], \"869\": [0, 1, 7, 18, 0, 0, 2.607426785728653, 4.42812894312998, 3], \"870\": [0, 0, 1, 16, 0, 0, 0, 5.077801177399442, 4], \"871\": [0, 0, 1, 27, 0, 0, 0, 2.5790004597872014, 4], \"875\": [0, 1, 3, 27, 0, 0, 0.9582549309731873, 4.872956348059442, 3], \"877\": [0, 1, 3, 24, 0, 0, 1.4118276631250553, 5.29281582650751, 3], \"885\": [0, 0, 0, 27, 0, 0, 0, 4.946519657890331, 4], \"889\": [0, 1, 1, 14, 0, 0, 0, 2.6781790866965784, 4], \"894\": [0, 0, 0, 19, 0, 0, 0, 5.359344607641665, 4], \"895\": [0, 1, 1, 10, 0, 0, 0, 2.764310444325766, 4], \"911\": [0, 0, 0, 2, 0, 0, 0, 0.9279550164199221, 4], \"913\": [0, 0, 0, 3, 0, 0, 0, 1.2903178534038542, 4], \"923\": [0, 1, 2, 23, 0, 0, 0.36772478012531734, 4.087030795240544, 3], \"925\": [0, 0, 3, 23, 0, 0, 1.1291490125281913, 4.816865907322018, 3], \"930\": [0, 0, 4, 38, 0, 0, 1.1797378334804782, 5.316379196864756, 3], \"753\": [0, 0, 3, 61, 0, 0, 0.7282385003712154, 6.0921677483557035, 3], \"904\": [1, 1, 2, 10, 0, 0, 0.06911212496035019, 1.0220472083176562, 3], \"907\": [5, 7, 15, 65, 0.2018084444674513, 0.3634497960238672, 1.1027777216471728, 3.654577279640108, 1], \"854\": [0, 1, 3, 19, 0, 0, 0.35105168638437023, 2.8794730715644192, 3], \"893\": [0, 3, 7, 24, 0, 0.23607730009877803, 0.8959672589022409, 2.8890670444801603, 2], \"936\": [5, 6, 16, 72, 1.3130221600135648, 1.591893602783191, 3.361280774256713, 6.332298684846083, 1], \"940\": [2, 4, 5, 330, 0.12477221253464107, 0.4262877782477728, 0.6046245444040388, 8.107235049978925, 1], \"942\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"784\": [1, 1, 2, 11, 0, 0, 0.07522342123758753, 1.209313872363147, 3], \"114\": [1, 2, 4, 32, 0, 0.06495789627477239, 0.23780070911418325, 2.896785348554615, 2], \"947\": [0, 0, 2, 34, 0, 0, 0.5705448584676129, 5.404947418978072, 3], \"949\": [0, 0, 0, 23, 0, 0, 0, 5.438814522936772, 4], \"950\": [0, 0, 1, 19, 0, 0, 0, 3.2911672960201988, 4], \"952\": [0, 0, 1, 6, 0, 0, 0, 2.0173421474132063, 4], \"52\": [0, 3, 4, 10, 0, 0.16135093247964982, 0.27100684545714193, 1.0766839809572075, 2], \"144\": [0, 1, 4, 19, 0, 0, 0.10821358464023274, 1.271360490890539, 3], \"86\": [0, 2, 2, 12, 0, 0.08644688360743705, 0.08644688360743705, 1.4434485710269955, 2], \"92\": [1, 2, 4, 33, 0, 0.04292504471703392, 0.1616413515564159, 2.5567811099577615, 2], \"258\": [1, 4, 5, 20, 0, 0.2124355370417375, 0.31468115860321527, 1.9304020589639737, 2], \"789\": [0, 0, 3, 33, 0, 0, 0.18687737332981533, 3.2492107179720335, 3], \"234\": [3, 3, 8, 70, 0.0015086498771319354, 0.0015086498771319354, 0.01067904894350243, 0.5999325707049771, 1], \"815\": [0, 0, 0, 11, 0, 0, 0, 3.414523256177582, 4], \"926\": [0, 0, 3, 19, 0, 0, 0.9064059726416132, 4.093742331738501, 3], \"962\": [0, 0, 0, 8, 0, 0, 0, 2.8779579406289884, 4], \"917\": [0, 0, 3, 16, 0, 0, 0.38441169891033206, 2.6589846394404315, 3], \"965\": [0, 1, 2, 360, 0, 0, 0.1451820098444979, 8.406484591376742, 3], \"967\": [1, 1, 3, 16, 0, 0, 0.2943140247555322, 2.369798208490703, 3], \"969\": [1, 3, 3, 16, 0, 0.15257958759521711, 0.15257958759521711, 1.7348688403787058, 2], \"972\": [1, 1, 4, 40, 0, 0, 1.4505139538541845, 5.787978335625509, 3], \"968\": [0, 0, 0, 13, 0, 0, 0, 4.665714818226822, 4], \"902\": [1, 1, 7, 54, 0, 0, 2.6817822742815998, 6.694664866530392, 3], \"976\": [11, 13, 19, 139, 2.621127679176508, 2.806959438371944, 3.749368840282048, 7.652254073303758, 1], \"956\": [0, 0, 2, 23, 0, 0, 1.0986122886681096, 5.578011653096972, 3], \"977\": [1, 1, 2, 16, 0, 0, 0.9808292530117262, 4.675436846969526, 3], \"978\": [2, 3, 3, 30, 0.17985546429876115, 0.36696662997527996, 0.36696662997527996, 3.810475630212048, 1], \"979\": [0, 0, 2, 9, 0, 0, 0.3281156420302715, 2.1784037047803113, 3], \"981\": [0, 1, 2, 5, 0, 0, 0.42285685082003355, 1.452560853495355, 3], \"741\": [1, 2, 3, 14, 0, 0.5316597106688327, 0.9473813189441862, 3.5627120825346403, 2], \"945\": [0, 0, 0, 23, 0, 0, 0, 2.930862423071428, 4], \"984\": [0, 0, 10, 128, 0, 0, 2.0724728723637424, 7.034107653910322, 3], \"953\": [0, 0, 0, 3, 0, 0, 0, 0.33520721431462625, 4], \"955\": [0, 0, 0, 10, 0, 0, 0, 3.303861716414427, 4], \"985\": [0, 0, 1, 11, 0, 0, 0, 1.7512517247075827, 4], \"886\": [0, 1, 2, 9, 0, 0, 0.3281156420302715, 2.1784037047803113, 3], \"87\": [0, 1, 2, 17, 0, 0, 0.30774963550259016, 3.2935674565430118, 3], \"90\": [2, 3, 5, 18, 0.050707947552847715, 0.1106779524786114, 0.28148606371708085, 1.6476029555518417, 1], \"988\": [1, 1, 6, 82, 0, 0, 1.684590634813445, 6.7069199218674065, 3], \"989\": [0, 0, 0, 4, 0, 0, 0, 1.900634265069724, 4], \"766\": [0, 0, 2, 28, 0, 0, 0.27008631056140137, 4.119898701451055, 3], \"838\": [0, 2, 5, 14, 0, 0.06747921922147183, 0.3620704839623302, 1.4826707457019142, 2], \"991\": [0, 0, 0, 15, 0, 0, 0, 4.203719858574718, 4], \"992\": [0, 0, 1, 3, 0, 0, 0, 2.2989819054090246, 4], \"932\": [2, 2, 3, 11, 0.18485641239714268, 0.18485641239714268, 0.3762784870216326, 1.962408140791379, 1], \"810\": [0, 0, 2, 20, 0, 0, 0.9315582040049435, 5.0388288805932335, 3], \"975\": [1, 4, 12, 34, 0, 0.29461728296402334, 1.4069573479315218, 3.244976956056698, 2], \"1000\": [0, 0, 0, 4, 0, 0, 0, 3.492904373881459, 4], \"1003\": [0, 0, 0, 32, 0, 0, 0, 7.034107653910322, 4], \"1002\": [1, 2, 2, 3, 0, 0.6157605169445252, 0.6157605169445252, 1.0662301365330449, 2], \"733\": [1, 3, 6, 48, 0, 0.15283920422944758, 0.5071491490366821, 3.763977213470097, 2], \"744\": [2, 2, 14, 74, 0.10763066419236544, 0.10763066419236544, 1.882237054194171, 5.049888394089914, 1], \"178\": [2, 2, 3, 7, 0.0950834481402768, 0.0950834481402768, 0.2024827004879514, 0.7947798125792187, 1], \"476\": [0, 0, 2, 6, 0, 0, 0.16635770580494058, 0.9629848677491369, 3], \"1008\": [0, 1, 3, 27, 0, 0, 0.9367692632176957, 4.838137248203576, 3], \"547\": [1, 2, 3, 30, 0, 0.05533915290709426, 0.12046632982418308, 2.6212303156296133, 2], \"816\": [0, 1, 2, 14, 0, 0, 0.13133600206108695, 2.060368432322683, 3], \"1017\": [7, 13, 22, 157, 2.144580843850797, 3.0829919463205044, 4.323623102103826, 8.154251652050036, 1], \"1014\": [0, 1, 5, 79, 0, 0, 0.3031426755581592, 4.489511157077296, 3], \"1021\": [0, 0, 0, 25, 0, 0, 0, 4.557583445764086, 4], \"860\": [0, 0, 2, 16, 0, 0, 0.19014428247516366, 2.6638431452929234, 3], \"1019\": [3, 3, 4, 58, 0.07857443263262014, 0.07857443263262014, 0.1356861992422396, 3.448098500335053, 1], \"443\": [1, 2, 4, 35, 0, 0.05096644359202753, 0.18991790368588934, 2.8303787960171087, 2], \"1030\": [0, 0, 0, 3, 0, 0, 0, 1.1415291167179813, 4], \"772\": [1, 3, 7, 28, 0, 0.3999856423435388, 1.302259176803307, 3.7769783553272136, 2], \"960\": [0, 0, 2, 8, 0, 0, 0.3856624808119847, 2.139917210779337, 3], \"106\": [1, 1, 2, 13, 0, 0, 0.06053284922884233, 1.2874199945300657, 3], \"473\": [0, 0, 2, 4, 0, 0, 0.44183275227903923, 1.1664680650652333, 3], \"691\": [1, 2, 3, 7, 0, 0.2835752904991275, 0.5525652299387559, 1.609108050194048, 2], \"958\": [1, 1, 2, 5, 0, 0, 0.2295744416445002, 0.956858762602271, 3], \"1013\": [1, 2, 8, 39, 0, 0.031058397019972775, 0.40861471701106056, 2.560982114293343, 2], \"1023\": [3, 3, 9, 107, 0.16281358156492662, 0.16281358156492662, 0.9521811361667919, 5.416627507519862, 1], \"690\": [3, 5, 7, 92, 0.7884573603642702, 1.4663370687934272, 2.0193376176101303, 7.025956659470875, 1], \"1036\": [0, 0, 3, 29, 0, 0, 0.10155280044326445, 2.3932118215239817, 3], \"197\": [2, 3, 3, 13, 0.020769178531802948, 0.04613837265726187, 0.04613837265726187, 0.6348153113773635, 1], \"366\": [1, 6, 55, 196, 0, 2.005333569526114, 5.898256329575592, 8.620580723132342, 2], \"1042\": [0, 0, 4, 14, 0, 0, 2.3978952727983707, 4.812637968483011, 3], \"1028\": [0, 1, 3, 46, 0, 0, 0.3469503940467376, 4.5865703155538, 3], \"1049\": [1, 4, 5, 202, 0, 1.376991968457577, 1.7280436548419473, 8.715058352999515, 2], \"511\": [0, 0, 1, 2, 0, 0, 0, 0.6257058997644127, 4], \"1051\": [0, 0, 14, 72, 0, 0, 3.8878302678794254, 7.139532659205864, 3], \"1052\": [0, 0, 1, 93, 0, 0, 0, 8.79247715303731, 4], \"1025\": [0, 0, 4, 17, 0, 0, 0.8425641237370047, 3.2106337952999713, 3], \"1056\": [1, 4, 6, 44, 0, 0.283070227229218, 0.5516966968364753, 3.699943229952684, 2], \"1057\": [0, 0, 0, 2, 0, 0, 0, 0.8436946728021821, 4], \"1064\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1065\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"735\": [0, 0, 2, 61, 0, 0, 0.05564717871439152, 3.989689900079326, 3], \"1067\": [0, 0, 0, 41, 0, 0, 0, 7.32888492440839, 4], \"1069\": [0, 0, 0, 19, 0, 0, 0, 5.016432231023149, 4], \"1073\": [0, 1, 2, 16, 0, 0, 0.17904823144898546, 2.6027110034583227, 3], \"1076\": [0, 0, 1, 42, 0, 0, 0, 7.290094533016417, 4], \"1022\": [2, 2, 3, 17, 0.325422400434628, 0.325422400434628, 0.6234672599219555, 3.35637147825318, 1], \"1078\": [0, 0, 3, 15, 0, 0, 0.16957814342550975, 1.7227503983730679, 3], \"1080\": [0, 0, 0, 8, 0, 0, 0, 3.0116345805932263, 4], \"1081\": [0, 0, 0, 16, 0, 0, 0, 4.907114839129883, 4], \"1087\": [0, 0, 1, 21, 0, 0, 0, 3.964466502830383, 4], \"1034\": [0, 0, 2, 18, 0, 0, 0.22190054307461277, 3.046817232437711, 3], \"1097\": [1, 2, 2, 43, 0, 0.8109302162163288, 0.8109302162163288, 6.357375403345467, 2], \"1101\": [10, 20, 26, 46, 2.176171168138387, 3.2298127227890587, 3.9855057821879494, 5.110265361152886, 1], \"998\": [0, 2, 2, 19, 0, 0.24664152258151367, 0.24664152258151367, 3.2638629812900923, 2], \"1115\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1116\": [0, 0, 1, 12, 0, 0, 0, 1.867611617787201, 4], \"1118\": [0, 0, 0, 2, 0, 0, 0, 3.0409192501384017, 4], \"201\": [1, 2, 2, 8, 0, 0.1292117314800062, 0.1292117314800062, 1.1617004755817604, 2], \"1123\": [0, 0, 0, 12, 0, 0, 0, 4.149146997505953, 4], \"1124\": [0, 0, 2, 85, 0, 0, 2.3978952727983707, 9.000700140130462, 3], \"1126\": [0, 1, 2, 9, 0, 0, 0.4096756406445079, 2.417046195461862, 3], \"983\": [0, 1, 2, 93, 0, 0, 0.2113090936672069, 6.230346070658618, 3], \"1134\": [0, 0, 0, 2, 0, 0, 0, 1.7881562816430336, 4], \"1122\": [1, 2, 3, 16, 0, 0.7621400520468967, 1.2729656758128876, 4.302390546525554, 2], \"1128\": [2, 2, 4, 27, 0.09787757530957068, 0.09787757530957068, 0.34451909789108437, 2.979062078127076, 1], \"1142\": [0, 0, 5, 58, 0, 0, 1.3457090810048122, 5.945143629837807, 3], \"1144\": [2, 2, 3, 39, 0.4978384282391795, 0.4978384282391795, 0.8967461358011848, 5.50303879277547, 1], \"1029\": [1, 3, 5, 22, 0, 0.17486281150627858, 0.42578104326853133, 2.4190741388209602, 2], \"1106\": [1, 2, 2, 8, 0, 1.0360919316867756, 1.0360919316867756, 3.400619914993671, 2], \"1145\": [0, 2, 5, 28, 0, 0.5543107357057295, 1.7280436548419473, 4.981271022073496, 2], \"1167\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"922\": [0, 0, 2, 17, 0, 0, 0.41397579777607296, 3.635331590012658, 3], \"1129\": [3, 3, 46, 187, 0.5260930958967791, 0.5260930958967791, 4.994484298348103, 7.8438186118050535, 1], \"1077\": [0, 0, 2, 52, 0, 0, 1.6945957207744073, 7.954359784477926, 3], \"1156\": [0, 0, 1, 2, 0, 0, 0, 0.6257058997644127, 4], \"1160\": [0, 0, 0, 5, 0, 0, 0, 1.423006710713329, 4], \"1177\": [0, 0, 0, 4, 0, 0, 0, 1.0950091010830882, 4], \"1168\": [0, 0, 0, 7, 0, 0, 0, 0.8539309826554717, 4], \"1188\": [0, 0, 0, 28, 0, 0, 0, 6.884969271980342, 4], \"1169\": [0, 0, 0, 3, 0, 0, 0, 1.7433057154776819, 4], \"1192\": [0, 0, 1, 71, 0, 0, 0, 7.136255384082798, 4], \"971\": [1, 8, 13, 37, 0, 1.9042374526547454, 2.7781535668731885, 4.8104667293004315, 2], \"1171\": [0, 0, 8, 46, 0, 0, 0.8472978603872036, 3.80490944147346, 3], \"1185\": [0, 0, 0, 13, 0, 0, 0, 2.8906890457891077, 4], \"1200\": [0, 0, 1, 7, 0, 0, 0, 3.652037625053181, 4], \"1207\": [21, 39, 45, 189, 3.1518778958916336, 3.6783254652096185, 4.715110795511103, 7.626774502523614, 1], \"1196\": [0, 0, 11, 18, 0, 0, 3.824607506388159, 4.79218735801172, 3], \"1210\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1211\": [0, 0, 0, 7, 0, 0, 0, 3.18824396489526, 4], \"1221\": [0, 0, 0, 9, 0, 0, 0, 2.2890425635064666, 4], \"1224\": [0, 0, 0, 6, 0, 0, 0, 2.3694151804579446, 4], \"1037\": [1, 2, 2, 12, 0, 0.8472978603872036, 0.8472978603872036, 3.888217110525605, 2], \"1232\": [0, 0, 0, 3, 0, 0, 0, 1.7433057154776819, 4], \"1203\": [0, 1, 1, 9, 0, 0, 0, 1.9813998872615692, 4], \"1241\": [1, 2, 4, 11, 0, 0.22314355131420976, 0.6931471805599453, 2.143789016003322, 2], \"1242\": [0, 0, 0, 15, 0, 0, 0, 3.9959072719662405, 4], \"1244\": [0, 0, 0, 4, 0, 0, 0, 2.287808604810899, 4], \"1238\": [1, 1, 3, 30, 0, 0, 1.7047480922384253, 6.107864151917657, 3], \"1159\": [0, 0, 0, 3, 0, 0, 0, 0.7996875720733498, 4], \"1247\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1248\": [0, 0, 0, 26, 0, 0, 0, 5.523324243114408, 4], \"1249\": [2, 6, 24, 188, 0.3030501026800949, 1.4317075697795925, 3.950733036810179, 7.994579910446378, 1], \"1251\": [0, 1, 1, 5, 0, 0, 0, 2.5111564253526604, 4], \"1254\": [0, 1, 6, 9, 0, 0, 1.0107179094136018, 1.5921492717638248, 3], \"1256\": [0, 0, 2, 4, 0, 0, 0.27380672595816385, 0.8116919417160084, 3], \"1257\": [0, 0, 3, 13, 0, 0, 1.791759469228055, 4.549103428867329, 3], \"1273\": [0, 0, 0, 34, 0, 0, 0, 6.462887079157764, 4], \"267\": [0, 0, 2, 11, 0, 0, 0.7621400520468967, 3.567939559824373, 3], \"1229\": [0, 1, 2, 14, 0, 0, 0.31259842371631547, 2.939869607931378, 3], \"1287\": [0, 0, 0, 2, 0, 0, 0, 0.5316597106688327, 4], \"1296\": [1, 1, 2, 15, 0, 0, 0.9315582040049435, 4.468475069639718, 3], \"1305\": [1, 1, 2, 7, 0, 0, 0.37827896780400755, 1.8883309602684943, 3], \"1263\": [0, 0, 5, 19, 0, 0, 1.1039742318094952, 3.40135057091161, 3], \"1310\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"817\": [1, 1, 3, 25, 0, 0, 0.23545681154756673, 2.9635535759483482, 3], \"1319\": [1, 4, 8, 74, 0, 0.21271903397832567, 0.6668792537393351, 4.404650563748901, 2], \"1250\": [0, 3, 8, 36, 0, 0.08820601831269737, 0.5042466526679481, 2.6551649250941702, 2], \"1324\": [0, 0, 3, 36, 0, 0, 1.4954936530848826, 6.209927407461929, 3], \"1325\": [1, 3, 3, 18, 0, 0.5229653783166013, 0.5229653783166013, 3.244164204447888, 2], \"1330\": [2, 3, 8, 32, 0.41397579777607296, 0.7672551527136672, 2.2197607423586323, 4.881333207529982, 1], \"1331\": [0, 1, 1, 30, 0, 0, 0, 4.805500179434718, 4], \"1335\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1337\": [0, 0, 1, 5, 0, 0, 0, 2.5990864978593624, 4], \"1350\": [1, 1, 1, 7, 0, 0, 0, 3.5129050405881284, 4], \"1358\": [0, 0, 2, 18, 0, 0, 0.5245244681241525, 4.037025304988103, 3], \"1361\": [0, 0, 4, 30, 0, 0, 3.044522437723423, 7.022823621114615, 3], \"1364\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1165\": [0, 0, 2, 12, 0, 0, 1.133098464739279, 4.337464381771324, 3], \"1380\": [2, 8, 13, 69, 0.33363937353690887, 1.9928801084548275, 2.875408885219452, 6.1541935538306785, 1], \"1384\": [0, 0, 1, 13, 0, 0, 0, 7.429472161313559, 4], \"892\": [2, 4, 6, 26, 0.3856624808119847, 1.0586069540544105, 1.6554230256759237, 4.385019293647211, 1], \"843\": [1, 1, 2, 4, 0, 0, 0.2561688067457042, 0.7701480253895533, 3], \"1387\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1392\": [1, 1, 4, 6, 0, 0, 0.17026150009995664, 0.34898886906784754, 3], \"1393\": [0, 1, 1, 3, 0, 0, 0, 1.4627338812084059, 4], \"1394\": [0, 0, 0, 3, 0, 0, 0, 1.5224531159100279, 4], \"1396\": [0, 0, 0, 4, 0, 0, 0, 1.7378944468621453, 4], \"1398\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"986\": [0, 2, 3, 21, 0, 0.6257058997644127, 1.084013489246957, 4.569762197533003, 2], \"1402\": [0, 0, 7, 105, 0, 0, 2.030989158293889, 7.303508489178767, 3], \"1397\": [1, 2, 5, 22, 0, 0.1529693447814272, 0.7095409903356217, 3.0409192501384017, 2], \"1405\": [0, 0, 0, 4, 0, 0, 0, 1.762579439853384, 4], \"1099\": [0, 1, 7, 17, 0, 0, 3.453947947047684, 5.198340934305426, 3], \"1413\": [0, 0, 0, 10, 0, 0, 0, 4.352118959202126, 4], \"1414\": [1, 2, 67, 237, 0, 0.3308542443169896, 5.760796956746725, 8.490585508927982, 2], \"1417\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1060\": [1, 3, 3, 9, 0, 1.3156767939059373, 1.3156767939059373, 3.236856208950354, 2], \"1406\": [0, 0, 2, 8, 0, 0, 0.09958470542943662, 0.9804929745720531, 3], \"1422\": [0, 1, 5, 36, 0, 0, 1.7129785913749407, 5.462921444611173, 3], \"775\": [1, 1, 3, 10, 0, 0, 0.5168226432383649, 2.138671945221231, 3], \"1138\": [0, 0, 2, 6, 0, 0, 0.46813621507094005, 1.8484882062526373, 3], \"1443\": [0, 0, 0, 10, 0, 0, 0, 4.031620251629282, 4], \"1447\": [0, 1, 6, 35, 0, 0, 1.8520913938376586, 5.210439893965497, 3], \"1409\": [0, 0, 3, 25, 0, 0, 1.4954936530848826, 5.48278838824642, 3], \"174\": [1, 1, 2, 28, 0, 0, 0.27570588140506525, 4.14305266920509, 3], \"943\": [1, 2, 2, 26, 0, 0.19197498849459727, 0.19197498849459727, 3.6010028406696635, 2], \"507\": [0, 0, 2, 4, 0, 0, 0.1415787733316046, 0.4752181468685134, 3], \"718\": [1, 3, 4, 13, 0, 0.6190392084062234, 0.9257694758286988, 2.8351967631798347, 2], \"1468\": [0, 1, 1, 6, 0, 0, 0, 0.9949256425261057, 4], \"1477\": [2, 2, 7, 42, 0.3746934494414107, 0.3746934494414107, 1.882237054194171, 5.301960587483783, 1], \"1220\": [3, 3, 3, 10, 1.1616252564968437, 1.1616252564968437, 1.1616252564968437, 3.2307618143256396, 1], \"1482\": [1, 3, 6, 14, 0, 0.166126870873974, 0.5440040224633094, 1.5929000255163057, 2], \"1483\": [0, 0, 1, 8, 0, 0, 0, 2.853456293844028, 4], \"1485\": [0, 0, 1, 35, 0, 0, 0, 6.11604281859149, 4], \"1488\": [0, 0, 11, 15, 0, 0, 3.1354942159291497, 3.7318995826132566, 3], \"1489\": [0, 1, 1, 9, 0, 0, 0, 3.5859362386526716, 4], \"554\": [0, 2, 2, 9, 0, 0.49159426183810306, 0.49159426183810306, 2.625197641863048, 2], \"1127\": [0, 1, 2, 7, 0, 0, 0.05748709091768152, 0.5451412908674736, 3], \"1492\": [0, 2, 13, 118, 0, 0.2629424662760252, 2.6178896464569092, 6.950956755511002, 2], \"1493\": [0, 1, 1, 20, 0, 0, 0, 5.001336907262104, 4], \"1501\": [0, 2, 2, 4, 0, 1.0360919316867756, 1.0360919316867756, 2.109361046133458, 2], \"1055\": [0, 0, 3, 10, 0, 0, 0.6371529112053704, 2.385250432296399, 3], \"1508\": [1, 1, 1, 2, 0, 0, 0, 0.27193371548364176, 4], \"420\": [1, 1, 5, 21, 0, 0, 1.2599520720678372, 3.815107640701473, 3], \"1515\": [0, 0, 0, 2, 0, 0, 0, 0.9052525658016155, 4], \"1522\": [0, 0, 1, 40, 0, 0, 0, 5.965727969327512, 4], \"1176\": [0, 1, 3, 30, 0, 0, 1.11365016603265, 5.322064011894578, 3], \"1537\": [1, 1, 1, 4, 0, 0, 0, 1.055003766469389, 4], \"1539\": [1, 1, 1, 7, 0, 0, 0, 1.4575228219956533, 4], \"1543\": [0, 0, 0, 3, 0, 0, 0, 1.3582001535265733, 4], \"1545\": [0, 0, 1, 4, 0, 0, 0, 2.339333200932592, 4], \"446\": [2, 2, 2, 11, 0.5245244681241525, 0.5245244681241525, 0.5245244681241525, 3.0811499368657307, 1], \"1121\": [2, 3, 3, 11, 0.26826398659467937, 0.5260930958967791, 0.5260930958967791, 2.3292872549043535, 1], \"1549\": [1, 1, 5, 73, 0, 0, 1.3984157216522355, 6.474719108013037, 3], \"1538\": [2, 2, 14, 187, 0.13176927763112334, 0.13176927763112334, 2.067041028481381, 7.113036719245763, 1], \"1552\": [0, 0, 1, 6, 0, 0, 0, 1.1707424891838825, 4], \"1555\": [0, 0, 0, 9, 0, 0, 0, 4.223230557683158, 4], \"1557\": [0, 1, 1, 5, 0, 0, 0, 1.8050200876950382, 4], \"1559\": [1, 1, 2, 13, 0, 0, 0.4369283775639494, 3.1807095536644576, 3], \"1063\": [0, 0, 4, 11, 0, 0, 1.1797378334804782, 2.8891132372703976, 3], \"1562\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1428\": [0, 0, 2, 11, 0, 0, 0.3393540829961018, 2.5782957281902887, 3], \"1573\": [0, 0, 2, 35, 0, 0, 1.5339303599259553, 7.012680311848995, 3], \"937\": [0, 2, 3, 13, 0, 0.1217306453046817, 0.25562013999211797, 1.863457870017633, 2], \"1528\": [0, 0, 2, 12, 0, 0, 0.02195477864696893, 0.5872932641273382, 3], \"1581\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1587\": [1, 2, 4, 10, 0, 0.4978384282391795, 1.2755429968271879, 2.8371716291717712, 2], \"1352\": [3, 4, 8, 30, 0.30854721091574266, 0.4962622595780941, 1.272644339049197, 3.6112146325045313, 1], \"1603\": [2, 7, 11, 48, 0.05320403606346461, 0.5124636257702291, 0.9756931348899587, 3.4768799949402185, 1], \"1605\": [1, 1, 1, 12, 0, 0, 0, 1.6014050387574907, 4], \"1046\": [4, 7, 16, 32, 0.16098937604759944, 0.4284877076964799, 1.3336211217111524, 2.4961131964882277, 1], \"1612\": [0, 0, 0, 4, 0, 0, 0, 1.7378944468621453, 4], \"1615\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1616\": [2, 5, 8, 87, 0.4572413776318843, 1.5310845981875851, 2.329749021934868, 6.99760283601295, 1], \"1621\": [0, 1, 1, 10, 0, 0, 0, 2.7367692188427646, 4], \"1622\": [0, 0, 4, 46, 0, 0, 1.4053425560905852, 6.007475432090572, 3], \"454\": [0, 3, 3, 15, 0, 0.42285685082003355, 0.42285685082003355, 2.6466692128503775, 2], \"1627\": [1, 1, 2, 2, 0, 0, 0.5968160716215132, 0.5968160716215132, 3], \"1628\": [0, 0, 3, 27, 0, 0, 1.6650077635889111, 5.849009716984872, 3], \"1632\": [0, 1, 5, 47, 0, 0, 1.8617180578349655, 6.1727159373926455, 3], \"1633\": [0, 1, 2, 20, 0, 0, 1.0663514264498883, 5.25116028158883, 3], \"1170\": [1, 1, 2, 14, 0, 0, 0.2421400520048648, 2.665335883400563, 3], \"1580\": [0, 1, 3, 15, 0, 0, 0.11824782767032843, 1.4166275921061802, 3], \"1636\": [0, 0, 1, 3, 0, 0, 0, 1.6614045760038896, 4], \"1649\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1277\": [1, 1, 4, 6, 0, 0, 3.044522437723423, 3.8250382089040738, 3], \"1371\": [0, 3, 6, 20, 0, 0.18269268316674286, 0.5887760293162374, 2.289808555478766, 2], \"1650\": [1, 1, 5, 8, 0, 0, 2.557596383156278, 3.445628214543242, 3], \"1653\": [0, 0, 0, 3, 0, 0, 0, 0.8479499983723205, 4], \"1085\": [8, 14, 40, 71, 1.8966774090875531, 2.6995500225953153, 4.857024925519236, 6.099192950826803, 1], \"1655\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1661\": [1, 2, 2, 9, 0, 0.27380672595816385, 0.27380672595816385, 1.9948930081948095, 2], \"1016\": [0, 2, 2, 8, 0, 0.29626581614317243, 0.29626581614317243, 1.8708479974881471, 2], \"1117\": [0, 0, 2, 14, 0, 0, 0.6931471805599453, 3.9084198178431246, 3], \"1666\": [0, 0, 1, 2, 0, 0, 0, 0.2363887780642304, 4], \"1669\": [1, 1, 1, 12, 0, 0, 0, 2.872454728005873, 4], \"1676\": [0, 0, 0, 13, 0, 0, 0, 3.627094311146179, 4], \"1681\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1684\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1687\": [0, 0, 0, 20, 0, 0, 0, 6.905151591730199, 4], \"1692\": [0, 1, 2, 4, 0, 0, 1.5339303599259553, 2.740165096119268, 3], \"1696\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"697\": [0, 1, 2, 5, 0, 0, 0.19014428247516366, 0.8331682598151947, 3], \"1286\": [2, 2, 2, 5, 0.5623075796011341, 0.5623075796011341, 0.5623075796011341, 1.739837704372226, 1], \"1703\": [0, 0, 0, 8, 0, 0, 0, 5.077801177399442, 4], \"1704\": [0, 0, 0, 4, 0, 0, 0, 1.120651531696426, 4], \"1707\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1711\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"164\": [0, 0, 2, 9, 0, 0, 0.17589066646366422, 1.5844539298241287, 3], \"1714\": [0, 0, 4, 28, 0, 0, 1.6722858160937641, 5.357181299474078, 3], \"1715\": [1, 1, 1, 2, 0, 0, 0, 0.9772260654267048, 4], \"1716\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1717\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"58\": [2, 2, 4, 14, 0.01847627616757318, 0.01847627616757318, 0.07194112406863154, 0.6490661905244113, 1], \"1381\": [0, 0, 2, 11, 0, 0, 0.9555114450274365, 3.8963472366088556, 3], \"1646\": [1, 1, 3, 19, 0, 0, 0.1652099163212334, 2.1012122982279924, 3], \"1719\": [0, 0, 0, 2, 0, 0, 0, 3.0409192501384017, 4], \"1722\": [0, 0, 0, 3, 0, 0, 0, 1.491890465499861, 4], \"1727\": [0, 0, 1, 6, 0, 0, 0, 4.10727067658829, 4], \"1728\": [0, 0, 1, 2, 0, 0, 0, 1.4627338812084059, 4], \"1730\": [0, 0, 2, 3, 0, 0, 0.41836851294407224, 0.7705852029780498, 3], \"1739\": [0, 0, 0, 7, 0, 0, 0, 2.8181596496831993, 4], \"1745\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1733\": [0, 0, 18, 74, 0, 0, 4.851939146322179, 7.721820036700576, 3], \"1750\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1752\": [2, 2, 3, 8, 0.3746934494414107, 0.3746934494414107, 0.7044467358138786, 2.109361046133458, 1], \"1753\": [2, 4, 17, 67, 0.17985546429876115, 0.5811968552230635, 2.723690793643282, 5.399673136174528, 1], \"1758\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1408\": [1, 2, 2, 7, 0, 0.10033471483971139, 0.10033471483971139, 0.8262037325979442, 2], \"1762\": [2, 3, 9, 30, 0.18658595558041216, 0.37948962170490375, 1.6397432619294294, 3.849812390889653, 1], \"1776\": [0, 0, 1, 14, 0, 0, 0, 3.363692642401453, 4], \"673\": [0, 0, 2, 14, 0, 0, 0.2629424662760252, 2.752401406639225, 3], \"1791\": [0, 3, 8, 20, 0, 0.08907963005368878, 0.5083380602941889, 1.6336029442705726, 2], \"1792\": [0, 0, 0, 5, 0, 0, 0, 2.5990864978593624, 4], \"1796\": [0, 0, 0, 2, 0, 0, 0, 1.690992533189386, 4], \"1805\": [0, 0, 0, 2, 0, 0, 0, 1.6058347248490787, 4], \"1810\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1815\": [0, 0, 4, 10, 0, 0, 2.5199979695992702, 4.278997666950849, 3], \"1818\": [0, 0, 0, 3, 0, 0, 0, 2.2989819054090246, 4], \"655\": [3, 3, 3, 8, 0.8690378470236095, 0.8690378470236095, 0.8690378470236095, 2.3802073453316104, 1], \"1826\": [0, 1, 2, 11, 0, 0, 0.5968160716215132, 3.242649548348699, 3], \"1828\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1832\": [0, 0, 0, 3, 0, 0, 0, 1.7881562816430336, 4], \"588\": [2, 3, 5, 18, 0.4096756406445079, 0.760450862456052, 1.4266098982983504, 3.734367771667932, 1], \"1770\": [0, 1, 6, 9, 0, 0, 1.5105920777974677, 2.187063989205039, 3], \"1840\": [0, 0, 0, 3, 0, 0, 0, 2.940835791581419, 4], \"1845\": [2, 2, 3, 6, 0.5705448584676129, 0.5705448584676129, 1.0045833390198333, 2.066176443183078, 1], \"1847\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1858\": [0, 1, 1, 3, 0, 0, 0, 1.4627338812084059, 4], \"1859\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1860\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1865\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1875\": [0, 0, 0, 3, 0, 0, 0, 2.2989819054090246, 4], \"1876\": [0, 0, 0, 4, 0, 0, 0, 2.07038874932725, 4], \"1879\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1890\": [1, 1, 1, 2, 0, 0, 0, 0.24817962947553462, 4], \"1526\": [1, 1, 2, 3, 0, 0, 1.6094379124341003, 2.2989819054090246, 3], \"1895\": [0, 0, 1, 11, 0, 0, 0, 2.5690090426220844, 4], \"1896\": [0, 1, 3, 21, 0, 0, 0.8602012652231115, 4.213227139820369, 3], \"1839\": [0, 1, 2, 3, 0, 0, 0.21357410029805904, 0.42899560551835847, 3], \"1900\": [0, 1, 1, 3, 0, 0, 0, 1.6614045760038896, 4], \"1902\": [0, 0, 2, 21, 0, 0, 1.0986122886681096, 5.396819401900169, 3], \"1903\": [1, 1, 2, 5, 0, 0, 1.4663370687934272, 3.0798346663880753, 3], \"1914\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1829\": [0, 0, 2, 10, 0, 0, 0.30774963550259016, 2.2998824007422747, 3], \"1912\": [0, 0, 1, 4, 0, 0, 0, 2.07038874932725, 4], \"1918\": [2, 2, 5, 13, 0.5175824062288705, 0.5175824062288705, 1.6558038329920262, 3.385658843527861, 1], \"1713\": [0, 1, 4, 17, 0, 0, 0.44685032427101873, 2.410170475340127, 3], \"1736\": [0, 0, 3, 5, 0, 0, 2.9444389791664403, 3.9282224451393044, 3], \"1923\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"1924\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1943\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1934\": [0, 0, 1, 5, 0, 0, 0, 2.4703743916707888, 4], \"1935\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1939\": [0, 0, 1, 2, 0, 0, 0, 0.7436112142451997, 4], \"1959\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1953\": [8, 12, 16, 34, 2.2312704187459365, 2.7708702863667245, 3.5335917644996027, 5.014536346669372, 1], \"1974\": [0, 0, 0, 2, 0, 0, 0, 0.8250894849711478, 4], \"1954\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1962\": [3, 7, 11, 56, 0.9264088620397397, 2.230560997603811, 3.0684470238086683, 6.274027452950515, 1], \"1582\": [2, 2, 4, 12, 0.18485641239714268, 0.18485641239714268, 0.5945320530416506, 2.113813661048125, 1], \"1635\": [4, 4, 6, 21, 0.22377031410501885, 0.22377031410501885, 0.4474149929666741, 2.064805933291238, 1], \"1267\": [1, 1, 4, 8, 0, 0, 0.3593740009078974, 1.0005994166120136, 3], \"1977\": [1, 1, 4, 8, 0, 0, 0.9088557533866369, 1.931668563265236, 3], \"1978\": [1, 1, 1, 4, 0, 0, 0, 2.6589846394404315, 4], \"908\": [2, 4, 6, 23, 0.02257432203853903, 0.08739182211500984, 0.18687737332981533, 1.3875310406336396, 1], \"1630\": [0, 0, 2, 12, 0, 0, 0.219455778235025, 2.2822787642177693, 3], \"1986\": [0, 2, 2, 5, 0, 0.6931471805599453, 0.6931471805599453, 1.977398281281562, 2], \"670\": [0, 1, 3, 8, 0, 0, 0.3731218633879398, 1.4353026941576923, 3], \"2009\": [1, 1, 2, 5, 0, 0, 2.03688192726104, 3.749814787666486, 3], \"1996\": [0, 0, 0, 7, 0, 0, 0, 3.5799157508710886, 4], \"2000\": [0, 0, 0, 5, 0, 0, 0, 1.6801932921676257, 4], \"2001\": [0, 0, 1, 2, 0, 0, 0, 0.5968160716215132, 4], \"550\": [2, 2, 4, 11, 0.462623521948113, 0.462623521948113, 1.209837923778334, 2.929940742176352, 1], \"2008\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2013\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2017\": [0, 0, 0, 3, 0, 0, 0, 1.1100469784476288, 4], \"2029\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2012\": [0, 0, 3, 21, 0, 0, 1.0045833390198333, 4.4485054688260295, 3], \"2026\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2028\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2045\": [0, 0, 0, 2, 0, 0, 0, 0.729284321624438, 4], \"1478\": [0, 0, 2, 8, 0, 0, 0.3856624808119847, 2.139917210779337, 3], \"2034\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2047\": [0, 1, 2, 6, 0, 0, 0.2876820724517809, 1.382691173534869, 3], \"2044\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2069\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2049\": [0, 0, 0, 3, 0, 0, 0, 0.8654346594385881, 4], \"2050\": [0, 0, 0, 2, 0, 0, 0, 0.18232155679395462, 4], \"1883\": [1, 2, 3, 6, 0, 1.0986122886681096, 1.7047480922384253, 2.940835791581419, 2], \"2074\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2061\": [0, 0, 0, 2, 0, 0, 0, 2.1936213897511982, 4], \"2067\": [0, 1, 20, 84, 0, 0, 4.394449154672439, 7.249300863497226, 3], \"2055\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2071\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2111\": [0, 0, 1, 6, 0, 0, 0, 4.10727067658829, 4], \"1197\": [0, 2, 2, 4, 0, 0.7328875092094594, 0.7328875092094594, 1.6686826285087428, 2], \"1499\": [0, 0, 2, 5, 0, 0, 0.6690496289808848, 1.935480996399892, 3], \"2121\": [0, 4, 6, 13, 0, 0.3007541540191337, 0.581921545449721, 1.5452649260912361, 2], \"441\": [2, 2, 2, 6, 0.08682239465891518, 0.08682239465891518, 0.08682239465891518, 0.5968160716215132, 1], \"948\": [0, 1, 3, 19, 0, 0, 0.11840357554598269, 1.7951152519673372, 3], \"957\": [1, 2, 6, 9, 0, 0.09983345855568045, 0.6652012501693859, 1.1361460066435778, 2], \"1032\": [1, 1, 3, 22, 0, 0, 0.9367692632176957, 4.432536039380673, 3], \"1983\": [0, 2, 5, 14, 0, 0.3513978868378886, 1.289667525430819, 3.0705510477447726, 2], \"2058\": [1, 2, 7, 14, 0, 0.02827043393825548, 0.3010334056266451, 0.8739541675652948, 2], \"2115\": [0, 0, 1, 6, 0, 0, 0, 3.0954286558067734, 4], \"2104\": [0, 0, 0, 2, 0, 0, 0, 1.0950091010830882, 4], \"2123\": [0, 0, 10, 20, 0, 0, 3.6753264877092326, 5.0388288805932335, 3], \"2117\": [0, 6, 8, 58, 0, 2.005333569526114, 2.5199979695992702, 6.3961795366135314, 2], \"2139\": [2, 5, 27, 66, 0.31508104663989533, 1.1984017592764806, 4.22683374526818, 5.998636432690919, 1], \"1651\": [0, 0, 2, 13, 0, 0, 0.09884583463663262, 1.6808699107919929, 3], \"2146\": [0, 1, 8, 16, 0, 0, 3.5988331734291528, 4.960794238017947, 3], \"2132\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2135\": [0, 0, 0, 5, 0, 0, 0, 3.4699148556567603, 4], \"2161\": [1, 2, 46, 99, 0, 0.4274440148269396, 5.401017799314536, 7.172498427542155, 2], \"510\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1389\": [0, 0, 4, 10, 0, 0, 2.743768283704289, 4.51719675863708, 3], \"1308\": [0, 0, 2, 5, 0, 0, 0.680877087968131, 1.9561480128821631, 3], \"2183\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2176\": [1, 1, 2, 4, 0, 0, 0.5705448584676129, 1.401739368505564, 3], \"2101\": [1, 2, 2, 8, 0, 1.007640510462383, 1.007640510462383, 3.3576775866716915, 2], \"2181\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1710\": [0, 0, 5, 11, 0, 0, 2.5147596129376817, 4.021748503150128, 3], \"2079\": [0, 0, 2, 5, 0, 0, 1.4663370687934272, 3.0798346663880753, 3], \"495\": [1, 2, 2, 3, 0, 0.22440062250426088, 0.22440062250426088, 0.4485486942444761, 2], \"1400\": [0, 0, 2, 15, 0, 0, 0.4096756406445079, 3.380143229832298, 3], \"1697\": [1, 1, 7, 24, 0, 0, 3.340109689682317, 5.7678379355449945, 3], \"2198\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2218\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"910\": [2, 2, 2, 7, 0.5790338737925242, 0.5790338737925242, 0.5790338737925242, 2.3579904585371345, 1], \"2210\": [1, 2, 5, 16, 0, 0.1559573650522073, 0.7202039819474586, 2.4646393644818074, 2], \"2213\": [1, 1, 5, 18, 0, 0, 1.1731453405306764, 3.3952104027218577, 3], \"2217\": [1, 1, 58, 153, 0, 0, 6.004289752813186, 8.251646991301149, 3], \"2193\": [0, 3, 3, 6, 0, 2.505525936990736, 2.505525936990736, 3.8250382089040738, 2], \"2226\": [0, 0, 0, 9, 0, 0, 0, 2.5545357008739886, 4], \"2206\": [7, 30, 43, 66, 1.5383105684185163, 3.4020345061002377, 4.831397616238261, 5.783523084350105, 1], \"2228\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2220\": [1, 3, 34, 78, 0, 0.6716409753389817, 4.717141031091024, 6.470648620338237, 2], \"1951\": [0, 1, 3, 8, 0, 0, 0.5596157879354227, 1.8422235029133094, 3], \"2219\": [0, 0, 0, 4, 0, 0, 0, 0.32879599515977564, 4], \"2241\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2268\": [0, 0, 9, 46, 0, 0, 4.075113200294213, 7.317868775703045, 3], \"2245\": [0, 0, 0, 3, 0, 0, 0, 0.7996875720733498, 4], \"2237\": [2, 2, 3, 9, 0.41397579777607296, 0.41397579777607296, 0.7672551527136672, 2.428659728717557, 1], \"2256\": [0, 0, 10, 20, 0, 0, 4.151039905898646, 5.521849751546762, 3], \"2162\": [2, 3, 8, 22, 0.322773392263051, 0.6190392084062234, 1.9594238682220362, 3.8485687063142677, 1], \"2270\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2048\": [1, 1, 2, 15, 0, 0, 0.07786032177227234, 1.711033284072832, 3], \"2297\": [0, 0, 29, 45, 0, 0, 5.538477172143402, 6.735437538009378, 3], \"2261\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1801\": [1, 2, 2, 5, 0, 0.05038849241281318, 0.05038849241281318, 0.27989993200972596, 2], \"2286\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2266\": [0, 1, 8, 14, 0, 0, 5.26355842648567, 6.48001371802333, 3], \"2291\": [0, 0, 8, 19, 0, 0, 3.172083663361442, 4.863381661317843, 3], \"2314\": [0, 0, 0, 4, 0, 0, 0, 2.829610156471195, 4], \"2322\": [0, 0, 4, 8, 0, 0, 3.3202283191284883, 4.675436846969526, 3], \"2279\": [0, 0, 24, 32, 0, 0, 5.126099053656803, 5.7994892770956366, 3], \"2294\": [0, 0, 2, 4, 0, 0, 0.44685032427101873, 1.176134645895457, 3], \"2295\": [1, 2, 5, 10, 0, 1.349926716949016, 2.9368917735310576, 4.278997666950849, 2], \"2292\": [0, 0, 6, 11, 0, 0, 1.33828514193353, 2.343297789183535, 3], \"1431\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2306\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2312\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"355\": [0, 0, 3, 8, 0, 0, 0.34967374847974886, 1.3768602532240761, 3], \"2320\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2321\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1969\": [0, 0, 2, 7, 0, 0, 2.3978952727983707, 4.812637968483011, 3], \"2311\": [0, 0, 1, 2, 0, 0, 0, 1.6058347248490787, 4], \"696\": [0, 0, 2, 4, 0, 0, 0.245122458032985, 0.7436112142451997, 3], \"966\": [2, 3, 9, 13, 0.06971463261536112, 0.1505340393570698, 0.9010121516561236, 1.3952473923102815, 1], \"2345\": [0, 0, 3, 4, 0, 0, 1.2729656758128876, 1.7140483094893115, 3], \"2353\": [0, 0, 6, 16, 0, 0, 2.993097225915986, 4.907114839129883, 3], \"2383\": [6, 11, 29, 50, 0.48285177172358457, 1.1269427952943356, 2.740840023925201, 3.7829347840073475, 1], \"586\": [0, 0, 3, 4, 0, 0, 0.19125886127980457, 0.3182408065994719, 3], \"933\": [1, 2, 3, 5, 0, 0.322773392263051, 0.6190392084062234, 1.2145542517328711, 2], \"2334\": [2, 2, 3, 7, 0.4795730802618863, 0.4795730802618863, 0.8690378470236095, 2.140977656265776, 1], \"2352\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2385\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2114\": [0, 0, 4, 6, 0, 0, 1.629743178594846, 2.3217965831751957, 3], \"2333\": [0, 0, 3, 3, 0, 0, 1.33828514193353, 1.3346819543485084, 3], \"1701\": [0, 1, 3, 8, 0, 0, 1.2939210409888755, 2.9832663987111245, 3], \"2332\": [1, 1, 2, 3, 0, 0, 0.9315582040049435, 1.491890465499861, 3], \"2338\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2341\": [0, 1, 1, 2, 0, 0, 0, 0.4321333551903257, 4], \"2396\": [0, 0, 0, 2, 0, 0, 0, 1.5303271723409337, 4], \"2359\": [0, 0, 4, 9, 0, 0, 2.3978952727983707, 3.9404028636961757, 3], \"2349\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2357\": [0, 0, 3, 4, 0, 0, 1.11365016603265, 1.5303271723409337, 3], \"2367\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2344\": [1, 2, 4, 7, 0, 0.9315582040049435, 1.9676501356917193, 2.9844070398750593, 2], \"2375\": [1, 1, 2, 3, 0, 0, 0.705886206337375, 1.1926475706470043, 3], \"2377\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2378\": [0, 1, 1, 2, 0, 0, 0, 0.863207487025764, 4], \"2380\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1765\": [0, 0, 2, 4, 0, 0, 0.026526754333428628, 0.10212949507637983, 3], \"2389\": [0, 0, 1, 3, 0, 0, 0, 1.1415291167179813, 4], \"2420\": [0, 0, 2, 2, 0, 0, 1.5339303599259553, 1.5303271723409337, 3], \"2394\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2395\": [0, 0, 4, 4, 0, 0, 2.588342237036242, 2.584739049451221, 3], \"1677\": [1, 2, 3, 8, 0, 0.0955379961853079, 0.20340107258500856, 0.9534493866243424, 2], \"1966\": [2, 2, 4, 7, 0.1578069910303688, 0.1578069910303688, 0.5210297939402324, 1.1258670894429934, 1], \"2246\": [1, 1, 3, 3, 0, 0, 1.2729656758128876, 1.2693624882278662, 3], \"2399\": [0, 1, 1, 2, 0, 0, 0, 1.4627338812084059, 4], \"2401\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"244\": [0, 1, 2, 4, 0, 0, 1.007640510462383, 2.07038874932725, 3], \"1583\": [0, 0, 3, 5, 0, 0, 1.55814461804655, 2.4314710884551034, 3], \"2036\": [0, 0, 2, 2, 0, 0, 2.03688192726104, 2.033278739676019, 3], \"2416\": [0, 1, 3, 4, 0, 0, 0.6061358035703156, 0.9052525658016155, 3], \"2290\": [0, 0, 2, 3, 0, 0, 0.8873031950009028, 1.4348769267054395, 3], \"2413\": [0, 0, 2, 2, 0, 0, 0.13862989729590636, 0.13862989729590636, 3], \"2414\": [0, 0, 3, 9, 0, 0, 1.4663370687934272, 3.430384016900125, 3], \"2417\": [1, 4, 7, 11, 0, 1.376991968457577, 2.309965200291668, 3.1494493405575072, 2], \"2419\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1814\": [0, 1, 2, 2, 0, 0, 0.8286926725561692, 0.8250894849711478, 3], \"2485\": [0, 1, 5, 7, 0, 0, 2.3281806401830094, 2.9486028209190787, 3], \"1949\": [1, 1, 2, 2, 0, 0, 1.252762968495368, 1.2491597809103467, 3], \"2264\": [1, 1, 2, 3, 0, 0, 0.18067002875548166, 0.368486104867077, 3], \"2265\": [0, 0, 3, 3, 0, 0, 0.5937747067467416, 0.5937747067467416, 3], \"2427\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2432\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2434\": [0, 0, 1, 2, 0, 0, 0, 1.2956797965452393, 4], \"2435\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2038\": [0, 0, 2, 5, 0, 0, 0.13720112151348504, 0.6518655215866413, 3], \"2448\": [0, 0, 3, 5, 0, 0, 1.1962507582320256, 1.9992618543977643, 3], \"1332\": [0, 0, 3, 9, 0, 0, 0.44628710262841953, 1.7985190686785804, 3], \"1544\": [0, 1, 3, 4, 0, 0, 0.09106388892287375, 0.15656906069153992, 3], \"2450\": [0, 3, 6, 23, 0, 1.084013489246957, 2.1777117631126375, 4.749987003521343, 2], \"2506\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2447\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2350\": [0, 1, 3, 4, 0, 0, 0.6418538861723948, 0.951908257442415, 3], \"2454\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"900\": [0, 0, 2, 3, 0, 0, 0.7191226669632059, 1.21084091660821, 3], \"1054\": [0, 1, 2, 7, 0, 0, 0.1425898574261823, 1.0532820568564198, 3], \"1960\": [1, 2, 4, 8, 0, 0.0907652093142671, 0.3221179231695298, 0.9207311173465803, 2], \"1007\": [0, 0, 4, 8, 0, 0, 1.363304842895192, 2.5329754727473, 3], \"2472\": [1, 1, 1, 3, 0, 0, 0, 2.3942920852133494, 4], \"2479\": [23, 42, 57, 93, 2.8579235274342225, 3.378462591471105, 4.6992526985267515, 5.772574871638654, 1], \"2443\": [0, 3, 4, 6, 0, 1.3862943611198906, 1.8458266904983307, 2.5613461698765154, 2], \"2526\": [2, 4, 6, 12, 0.24973714088765747, 0.7583503743707075, 1.2678462107066966, 2.4134497592462827, 1], \"2494\": [0, 1, 11, 15, 0, 0, 4.169517130399594, 4.77905231802838, 3], \"2505\": [0, 0, 12, 30, 0, 0, 3.7410652072845068, 5.549909953951894, 3], \"2512\": [0, 0, 1, 2, 0, 0, 0, 1.0324887441017543, 4], \"2513\": [0, 0, 3, 5, 0, 0, 0.6234672599219555, 1.2213028264073804, 3], \"1418\": [1, 2, 3, 11, 0, 0.6257058997644127, 1.084013489246957, 3.3034427629540275, 2], \"2521\": [0, 1, 3, 8, 0, 0, 1.9459101490553132, 3.7729818469480203, 3], \"1463\": [1, 1, 2, 5, 0, 0, 0.23780070911418325, 0.9814119233593829, 3], \"1744\": [0, 2, 3, 3, 0, 1.0986122886681096, 1.7047480922384253, 1.701144904653404, 2], \"2481\": [0, 0, 2, 4, 0, 0, 0.23922968906583414, 0.729284321624438, 3], \"2525\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2528\": [7, 8, 9, 10, 1.9636097261547143, 2.1972245773362196, 2.409194828052304, 2.5990864978593624, 1], \"2536\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2018\": [0, 0, 2, 2, 0, 0, 2.03688192726104, 2.033278739676019, 3], \"2489\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2545\": [8, 27, 31, 40, 2.175305891628573, 3.6424979179609407, 4.669367900330172, 5.2751334782588195, 1], \"2550\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1584\": [0, 1, 2, 5, 0, 0, 0.2815658454343448, 1.1057908766863767, 3], \"2569\": [0, 0, 1, 2, 0, 0, 0, 2.1936213897511982, 4], \"2567\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1777\": [0, 0, 2, 6, 0, 0, 0.0891458495182624, 0.6093094019178573, 3], \"2574\": [0, 0, 1, 2, 0, 0, 0, 1.401739368505564, 4], \"2591\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2653\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2615\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"2625\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2641\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2707\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2716\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2564\": [0, 2, 2, 2, 0, 1.133098464739279, 1.133098464739279, 1.1294952771542577, 2], \"2734\": [1, 3, 3, 8, 0, 0.2520218920528967, 0.2520218920528967, 1.1076674979550116, 2], \"2809\": [22, 26, 26, 70, 1.7159099684431856, 1.9976005639876282, 1.9976005639876282, 3.850427214616008, 1], \"2687\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1894\": [11, 15, 15, 44, 0.5123730983756724, 0.8084689794336383, 0.8084689794336383, 2.456666157817594, 1], \"2747\": [1, 2, 2, 2, 0, 0.09835932019884275, 0.09835932019884275, 0.09835932019884275, 2], \"570\": [1, 2, 2, 6, 0, 0.02701041988276247, 0.02701041988276247, 0.22026466797690847, 2], \"2843\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1186\": [1, 2, 2, 4, 0, 0.5790338737925242, 0.5790338737925242, 1.4164293131667192, 2], \"1258\": [3, 5, 5, 8, 0.03593200922606334, 0.0967872849473381, 0.0967872849473381, 0.23124076154682915, 1], \"1950\": [1, 2, 2, 3, 0, 0.15718558352241233, 0.15718558352241233, 0.32423966818557853, 2], \"2818\": [2, 12, 12, 23, 1.0360919316867756, 3.376633499257613, 4.196518186951408, 5.483078050212932, 1], \"1907\": [1, 3, 3, 5, 0, 2.069779630768099, 2.069779630768099, 3.0036014871312062, 2], \"2403\": [3, 6, 6, 9, 0.6931471805599453, 1.6094379124341003, 1.6094379124341003, 2.2989819054090246, 1], \"2736\": [1, 2, 2, 2, 0, 0.5877866649021191, 0.5877866649021191, 0.5877866649021191, 2], \"2875\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1798\": [0, 2, 2, 4, 0, 0.06538275926285174, 0.06538275926285174, 0.23922968906583414, 2], \"2538\": [0, 2, 2, 6, 0, 0.705886206337375, 0.705886206337375, 2.3217965831751957, 2], \"2732\": [1, 5, 5, 12, 0, 0.2743358304988864, 0.2743358304988864, 1.0324887441017543, 2], \"2868\": [0, 1, 1, 3, 0, 0, 0, 1.0390504474350437, 4], \"2849\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2891\": [0, 1, 1, 2, 0, 0, 0, 0.9772260654267048, 4], \"584\": [2, 4, 4, 13, 0.013624188939543626, 0.05341723749698583, 0.05341723749698583, 0.4571469872520818, 1], \"1390\": [1, 2, 2, 3, 0, 0.03524593906167478, 0.03524593906167478, 0.07762516203053624, 2], \"1487\": [1, 3, 3, 8, 0, 1.084013489246957, 1.084013489246957, 2.698633043651769, 2], \"1908\": [3, 9, 9, 28, 0.040219898111907335, 0.3143413195654421, 0.3143413195654421, 1.5170060029227033, 1], \"2774\": [4, 5, 5, 8, 2.662994897218937, 2.9537802148404984, 3.166625134524323, 4.077011181825178, 1], \"2914\": [0, 1, 1, 2, 0, 0, 0, 0.6466271649250525, 4], \"3000\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"1278\": [2, 4, 4, 5, 0.0775582343458745, 0.27958486221916157, 0.27958486221916157, 0.40814967347883335, 1], \"2347\": [14, 15, 15, 16, 2.426199048961222, 2.5527292461267614, 2.5527292461267614, 2.6687289309151097, 1], \"2859\": [2, 3, 3, 4, 0.14897379164772453, 0.30854721091574266, 0.30854721091574266, 0.4962622595780941, 1], \"2212\": [1, 2, 2, 2, 0, 0.5543107357057295, 0.5543107357057295, 0.5543107357057295, 2], \"3057\": [4, 7, 7, 8, 1.4200325007517407, 2.361593646122156, 2.361593646122156, 2.6027110034583227, 1], \"1153\": [2, 3, 3, 4, 0.018957913744614106, 0.04216081082427801, 0.04216081082427801, 0.07376615023960913, 1], \"1723\": [1, 2, 2, 4, 0, 0.9808292530117262, 0.9808292530117262, 2.033278739676019, 2], \"3024\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3056\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"455\": [2, 3, 3, 10, 0.07740806841223596, 0.16643479373146772, 0.16643479373146772, 1.0990251707379781, 1], \"2953\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"3158\": [5, 5, 5, 5, 1.4766784225881597, 1.4766784225881597, 1.4766784225881597, 1.4730752350031384, 1], \"3058\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"1275\": [2, 2, 2, 4, 0.38946476676172326, 0.38946476676172326, 0.38946476676172326, 1.062748238864867, 1], \"3178\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1509\": [2, 2, 2, 4, 0.01847627616757318, 0.01847627616757318, 0.01847627616757318, 0.07194112406863154, 1], \"3188\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3189\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2221\": [4, 4, 4, 4, 0.9315582040049435, 0.9315582040049435, 0.9315582040049435, 0.9279550164199221, 1], \"3191\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"577\": [2, 2, 2, 3, 0.026650477991494073, 0.026650477991494073, 0.026650477991494073, 0.058994823987822374, 1], \"2059\": [2, 2, 2, 5, 0.4013413909243023, 0.4013413909243023, 0.4013413909243023, 1.4040660331196029, 1], \"2107\": [2, 2, 2, 5, 0.3643378166843015, 0.3643378166843015, 0.3643378166843015, 1.3174197831816454, 1], \"3222\": [0, 0, 0, 2, 0, 0, 0, 1.4627338812084059, 4], \"3212\": [1, 1, 1, 2, 0, 0, 0, 0.8073270286313073, 4], \"3062\": [2, 2, 2, 6, 0.06570507304885383, 0.06570507304885383, 0.06570507304885383, 0.47698261495834116, 1], \"3229\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"3241\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3218\": [3, 3, 3, 3, 1.0698333241180664, 1.0698333241180664, 1.0698333241180664, 1.0662301365330449, 1], \"3266\": [2, 2, 2, 4, 0.5968160716215132, 0.5968160716215132, 0.5968160716215132, 1.4469107662691632, 1], \"3267\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"3240\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3277\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3278\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3298\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3314\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2827\": [2, 2, 2, 5, 0.5316597106688327, 0.5316597106688327, 0.5316597106688327, 1.6801932921676257, 1], \"3325\": [0, 0, 0, 0, 0, 0, 0, 0, 4]}"
}