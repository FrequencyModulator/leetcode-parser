{
  "name": "Amazon",
  "slug": "amazon",
  "questions": [
    {
      "status": "ac",
      "questionId": "1",
      "questionFrontendId": "1",
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "acRate": "52.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2",
      "questionFrontendId": "2",
      "title": "Add Two Numbers",
      "titleSlug": "add-two-numbers",
      "acRate": "42.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "3",
      "questionFrontendId": "3",
      "title": "Longest Substring Without Repeating Characters",
      "titleSlug": "longest-substring-without-repeating-characters",
      "acRate": "34.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "4",
      "questionFrontendId": "4",
      "title": "Median of Two Sorted Arrays",
      "titleSlug": "median-of-two-sorted-arrays",
      "acRate": "39.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "5",
      "questionFrontendId": "5",
      "title": "Longest Palindromic Substring",
      "titleSlug": "longest-palindromic-substring",
      "acRate": "33.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "6",
      "questionFrontendId": "6",
      "title": "Zigzag Conversion",
      "titleSlug": "zigzag-conversion",
      "acRate": "47.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "7",
      "questionFrontendId": "7",
      "title": "Reverse Integer",
      "titleSlug": "reverse-integer",
      "acRate": "28.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "8",
      "questionFrontendId": "8",
      "title": "String to Integer (atoi)",
      "titleSlug": "string-to-integer-atoi",
      "acRate": "17.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "9",
      "questionFrontendId": "9",
      "title": "Palindrome Number",
      "titleSlug": "palindrome-number",
      "acRate": "56.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "10",
      "questionFrontendId": "10",
      "title": "Regular Expression Matching",
      "titleSlug": "regular-expression-matching",
      "acRate": "28.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "11",
      "questionFrontendId": "11",
      "title": "Container With Most Water",
      "titleSlug": "container-with-most-water",
      "acRate": "55.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "12",
      "questionFrontendId": "12",
      "title": "Integer to Roman",
      "titleSlug": "integer-to-roman",
      "acRate": "64.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "13",
      "questionFrontendId": "13",
      "title": "Roman to Integer",
      "titleSlug": "roman-to-integer",
      "acRate": "60.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "14",
      "questionFrontendId": "14",
      "title": "Longest Common Prefix",
      "titleSlug": "longest-common-prefix",
      "acRate": "42.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "15",
      "questionFrontendId": "15",
      "title": "3Sum",
      "titleSlug": "3sum",
      "acRate": "34.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "16",
      "questionFrontendId": "16",
      "title": "3Sum Closest",
      "titleSlug": "3sum-closest",
      "acRate": "45.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "17",
      "questionFrontendId": "17",
      "title": "Letter Combinations of a Phone Number",
      "titleSlug": "letter-combinations-of-a-phone-number",
      "acRate": "60.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "18",
      "questionFrontendId": "18",
      "title": "4Sum",
      "titleSlug": "4sum",
      "acRate": "36.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "19",
      "questionFrontendId": "19",
      "title": "Remove Nth Node From End of List",
      "titleSlug": "remove-nth-node-from-end-of-list",
      "acRate": "45.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "20",
      "questionFrontendId": "20",
      "title": "Valid Parentheses",
      "titleSlug": "valid-parentheses",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "21",
      "questionFrontendId": "21",
      "title": "Merge Two Sorted Lists",
      "titleSlug": "merge-two-sorted-lists",
      "acRate": "64.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "22",
      "questionFrontendId": "22",
      "title": "Generate Parentheses",
      "titleSlug": "generate-parentheses",
      "acRate": "74.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "23",
      "questionFrontendId": "23",
      "title": "Merge k Sorted Lists",
      "titleSlug": "merge-k-sorted-lists",
      "acRate": "52.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "24",
      "questionFrontendId": "24",
      "title": "Swap Nodes in Pairs",
      "titleSlug": "swap-nodes-in-pairs",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "25",
      "questionFrontendId": "25",
      "title": "Reverse Nodes in k-Group",
      "titleSlug": "reverse-nodes-in-k-group",
      "acRate": "58.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "26",
      "questionFrontendId": "26",
      "title": "Remove Duplicates from Sorted Array",
      "titleSlug": "remove-duplicates-from-sorted-array",
      "acRate": "55.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "27",
      "questionFrontendId": "27",
      "title": "Remove Element",
      "titleSlug": "remove-element",
      "acRate": "56.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "28",
      "questionFrontendId": "28",
      "title": "Find the Index of the First Occurrence in a String",
      "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
      "acRate": "42.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "29",
      "questionFrontendId": "29",
      "title": "Divide Two Integers",
      "titleSlug": "divide-two-integers",
      "acRate": "17.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "30",
      "questionFrontendId": "30",
      "title": "Substring with Concatenation of All Words",
      "titleSlug": "substring-with-concatenation-of-all-words",
      "acRate": "32.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "31",
      "questionFrontendId": "31",
      "title": "Next Permutation",
      "titleSlug": "next-permutation",
      "acRate": "39.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "32",
      "questionFrontendId": "32",
      "title": "Longest Valid Parentheses",
      "titleSlug": "longest-valid-parentheses",
      "acRate": "34.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "33",
      "questionFrontendId": "33",
      "title": "Search in Rotated Sorted Array",
      "titleSlug": "search-in-rotated-sorted-array",
      "acRate": "40.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "34",
      "questionFrontendId": "34",
      "title": "Find First and Last Position of Element in Sorted Array",
      "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
      "acRate": "44.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "35",
      "questionFrontendId": "35",
      "title": "Search Insert Position",
      "titleSlug": "search-insert-position",
      "acRate": "45.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "36",
      "questionFrontendId": "36",
      "title": "Valid Sudoku",
      "titleSlug": "valid-sudoku",
      "acRate": "59.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "37",
      "questionFrontendId": "37",
      "title": "Sudoku Solver",
      "titleSlug": "sudoku-solver",
      "acRate": "60.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "38",
      "questionFrontendId": "38",
      "title": "Count and Say",
      "titleSlug": "count-and-say",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "39",
      "questionFrontendId": "39",
      "title": "Combination Sum",
      "titleSlug": "combination-sum",
      "acRate": "71.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "40",
      "questionFrontendId": "40",
      "title": "Combination Sum II",
      "titleSlug": "combination-sum-ii",
      "acRate": "54.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "41",
      "questionFrontendId": "41",
      "title": "First Missing Positive",
      "titleSlug": "first-missing-positive",
      "acRate": "37.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "42",
      "questionFrontendId": "42",
      "title": "Trapping Rain Water",
      "titleSlug": "trapping-rain-water",
      "acRate": "60.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "43",
      "questionFrontendId": "43",
      "title": "Multiply Strings",
      "titleSlug": "multiply-strings",
      "acRate": "40.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "44",
      "questionFrontendId": "44",
      "title": "Wildcard Matching",
      "titleSlug": "wildcard-matching",
      "acRate": "27.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "45",
      "questionFrontendId": "45",
      "title": "Jump Game II",
      "titleSlug": "jump-game-ii",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "46",
      "questionFrontendId": "46",
      "title": "Permutations",
      "titleSlug": "permutations",
      "acRate": "78.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "47",
      "questionFrontendId": "47",
      "title": "Permutations II",
      "titleSlug": "permutations-ii",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "48",
      "questionFrontendId": "48",
      "title": "Rotate Image",
      "titleSlug": "rotate-image",
      "acRate": "74.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "49",
      "questionFrontendId": "49",
      "title": "Group Anagrams",
      "titleSlug": "group-anagrams",
      "acRate": "68.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "50",
      "questionFrontendId": "50",
      "title": "Pow(x, n)",
      "titleSlug": "powx-n",
      "acRate": "34.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "51",
      "questionFrontendId": "51",
      "title": "N-Queens",
      "titleSlug": "n-queens",
      "acRate": "67.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "53",
      "questionFrontendId": "53",
      "title": "Maximum Subarray",
      "titleSlug": "maximum-subarray",
      "acRate": "50.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "54",
      "questionFrontendId": "54",
      "title": "Spiral Matrix",
      "titleSlug": "spiral-matrix",
      "acRate": "49.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "55",
      "questionFrontendId": "55",
      "title": "Jump Game",
      "titleSlug": "jump-game",
      "acRate": "38.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "56",
      "questionFrontendId": "56",
      "title": "Merge Intervals",
      "titleSlug": "merge-intervals",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "57",
      "questionFrontendId": "57",
      "title": "Insert Interval",
      "titleSlug": "insert-interval",
      "acRate": "41.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "58",
      "questionFrontendId": "58",
      "title": "Length of Last Word",
      "titleSlug": "length-of-last-word",
      "acRate": "49.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "59",
      "questionFrontendId": "59",
      "title": "Spiral Matrix II",
      "titleSlug": "spiral-matrix-ii",
      "acRate": "70.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "60",
      "questionFrontendId": "60",
      "title": "Permutation Sequence",
      "titleSlug": "permutation-sequence",
      "acRate": "46.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "61",
      "questionFrontendId": "61",
      "title": "Rotate List",
      "titleSlug": "rotate-list",
      "acRate": "37.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "62",
      "questionFrontendId": "62",
      "title": "Unique Paths",
      "titleSlug": "unique-paths",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "63",
      "questionFrontendId": "63",
      "title": "Unique Paths II",
      "titleSlug": "unique-paths-ii",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "64",
      "questionFrontendId": "64",
      "title": "Minimum Path Sum",
      "titleSlug": "minimum-path-sum",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "65",
      "questionFrontendId": "65",
      "title": "Valid Number",
      "titleSlug": "valid-number",
      "acRate": "19.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "66",
      "questionFrontendId": "66",
      "title": "Plus One",
      "titleSlug": "plus-one",
      "acRate": "45.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "67",
      "questionFrontendId": "67",
      "title": "Add Binary",
      "titleSlug": "add-binary",
      "acRate": "53.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "68",
      "questionFrontendId": "68",
      "title": "Text Justification",
      "titleSlug": "text-justification",
      "acRate": "43.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "69",
      "questionFrontendId": "69",
      "title": "Sqrt(x)",
      "titleSlug": "sqrtx",
      "acRate": "38.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "70",
      "questionFrontendId": "70",
      "title": "Climbing Stairs",
      "titleSlug": "climbing-stairs",
      "acRate": "52.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "71",
      "questionFrontendId": "71",
      "title": "Simplify Path",
      "titleSlug": "simplify-path",
      "acRate": "42.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "72",
      "questionFrontendId": "72",
      "title": "Edit Distance",
      "titleSlug": "edit-distance",
      "acRate": "56.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "73",
      "questionFrontendId": "73",
      "title": "Set Matrix Zeroes",
      "titleSlug": "set-matrix-zeroes",
      "acRate": "55.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "74",
      "questionFrontendId": "74",
      "title": "Search a 2D Matrix",
      "titleSlug": "search-a-2d-matrix",
      "acRate": "49.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "75",
      "questionFrontendId": "75",
      "title": "Sort Colors",
      "titleSlug": "sort-colors",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "76",
      "questionFrontendId": "76",
      "title": "Minimum Window Substring",
      "titleSlug": "minimum-window-substring",
      "acRate": "42.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "77",
      "questionFrontendId": "77",
      "title": "Combinations",
      "titleSlug": "combinations",
      "acRate": "70.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "78",
      "questionFrontendId": "78",
      "title": "Subsets",
      "titleSlug": "subsets",
      "acRate": "77.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "79",
      "questionFrontendId": "79",
      "title": "Word Search",
      "titleSlug": "word-search",
      "acRate": "41.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "80",
      "questionFrontendId": "80",
      "title": "Remove Duplicates from Sorted Array II",
      "titleSlug": "remove-duplicates-from-sorted-array-ii",
      "acRate": "57.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "81",
      "questionFrontendId": "81",
      "title": "Search in Rotated Sorted Array II",
      "titleSlug": "search-in-rotated-sorted-array-ii",
      "acRate": "37.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "82",
      "questionFrontendId": "82",
      "title": "Remove Duplicates from Sorted List II",
      "titleSlug": "remove-duplicates-from-sorted-list-ii",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "83",
      "questionFrontendId": "83",
      "title": "Remove Duplicates from Sorted List",
      "titleSlug": "remove-duplicates-from-sorted-list",
      "acRate": "52.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "84",
      "questionFrontendId": "84",
      "title": "Largest Rectangle in Histogram",
      "titleSlug": "largest-rectangle-in-histogram",
      "acRate": "44.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "85",
      "questionFrontendId": "85",
      "title": "Maximal Rectangle",
      "titleSlug": "maximal-rectangle",
      "acRate": "46.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "86",
      "questionFrontendId": "86",
      "title": "Partition List",
      "titleSlug": "partition-list",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "87",
      "questionFrontendId": "87",
      "title": "Scramble String",
      "titleSlug": "scramble-string",
      "acRate": "39.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "88",
      "questionFrontendId": "88",
      "title": "Merge Sorted Array",
      "titleSlug": "merge-sorted-array",
      "acRate": "49.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "89",
      "questionFrontendId": "89",
      "title": "Gray Code",
      "titleSlug": "gray-code",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "90",
      "questionFrontendId": "90",
      "title": "Subsets II",
      "titleSlug": "subsets-ii",
      "acRate": "57.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "91",
      "questionFrontendId": "91",
      "title": "Decode Ways",
      "titleSlug": "decode-ways",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "92",
      "questionFrontendId": "92",
      "title": "Reverse Linked List II",
      "titleSlug": "reverse-linked-list-ii",
      "acRate": "47.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "93",
      "questionFrontendId": "93",
      "title": "Restore IP Addresses",
      "titleSlug": "restore-ip-addresses",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "94",
      "questionFrontendId": "94",
      "title": "Binary Tree Inorder Traversal",
      "titleSlug": "binary-tree-inorder-traversal",
      "acRate": "75.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "95",
      "questionFrontendId": "95",
      "title": "Unique Binary Search Trees II",
      "titleSlug": "unique-binary-search-trees-ii",
      "acRate": "57.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "96",
      "questionFrontendId": "96",
      "title": "Unique Binary Search Trees",
      "titleSlug": "unique-binary-search-trees",
      "acRate": "60.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "97",
      "questionFrontendId": "97",
      "title": "Interleaving String",
      "titleSlug": "interleaving-string",
      "acRate": "39.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "98",
      "questionFrontendId": "98",
      "title": "Validate Binary Search Tree",
      "titleSlug": "validate-binary-search-tree",
      "acRate": "32.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "99",
      "questionFrontendId": "99",
      "title": "Recover Binary Search Tree",
      "titleSlug": "recover-binary-search-tree",
      "acRate": "52.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "100",
      "questionFrontendId": "100",
      "title": "Same Tree",
      "titleSlug": "same-tree",
      "acRate": "61.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "101",
      "questionFrontendId": "101",
      "title": "Symmetric Tree",
      "titleSlug": "symmetric-tree",
      "acRate": "56.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "102",
      "questionFrontendId": "102",
      "title": "Binary Tree Level Order Traversal",
      "titleSlug": "binary-tree-level-order-traversal",
      "acRate": "66.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "103",
      "questionFrontendId": "103",
      "title": "Binary Tree Zigzag Level Order Traversal",
      "titleSlug": "binary-tree-zigzag-level-order-traversal",
      "acRate": "58.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "104",
      "questionFrontendId": "104",
      "title": "Maximum Depth of Binary Tree",
      "titleSlug": "maximum-depth-of-binary-tree",
      "acRate": "75.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "105",
      "questionFrontendId": "105",
      "title": "Construct Binary Tree from Preorder and Inorder Traversal",
      "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "106",
      "questionFrontendId": "106",
      "title": "Construct Binary Tree from Inorder and Postorder Traversal",
      "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
      "acRate": "62.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "107",
      "questionFrontendId": "107",
      "title": "Binary Tree Level Order Traversal II",
      "titleSlug": "binary-tree-level-order-traversal-ii",
      "acRate": "63.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "108",
      "questionFrontendId": "108",
      "title": "Convert Sorted Array to Binary Search Tree",
      "titleSlug": "convert-sorted-array-to-binary-search-tree",
      "acRate": "71.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "109",
      "questionFrontendId": "109",
      "title": "Convert Sorted List to Binary Search Tree",
      "titleSlug": "convert-sorted-list-to-binary-search-tree",
      "acRate": "61.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "110",
      "questionFrontendId": "110",
      "title": "Balanced Binary Tree",
      "titleSlug": "balanced-binary-tree",
      "acRate": "51.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "111",
      "questionFrontendId": "111",
      "title": "Minimum Depth of Binary Tree",
      "titleSlug": "minimum-depth-of-binary-tree",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "112",
      "questionFrontendId": "112",
      "title": "Path Sum",
      "titleSlug": "path-sum",
      "acRate": "50.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "113",
      "questionFrontendId": "113",
      "title": "Path Sum II",
      "titleSlug": "path-sum-ii",
      "acRate": "58.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "114",
      "questionFrontendId": "114",
      "title": "Flatten Binary Tree to Linked List",
      "titleSlug": "flatten-binary-tree-to-linked-list",
      "acRate": "64.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "115",
      "questionFrontendId": "115",
      "title": "Distinct Subsequences",
      "titleSlug": "distinct-subsequences",
      "acRate": "46.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "116",
      "questionFrontendId": "116",
      "title": "Populating Next Right Pointers in Each Node",
      "titleSlug": "populating-next-right-pointers-in-each-node",
      "acRate": "62.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "117",
      "questionFrontendId": "117",
      "title": "Populating Next Right Pointers in Each Node II",
      "titleSlug": "populating-next-right-pointers-in-each-node-ii",
      "acRate": "52.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "118",
      "questionFrontendId": "118",
      "title": "Pascal's Triangle",
      "titleSlug": "pascals-triangle",
      "acRate": "74.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "119",
      "questionFrontendId": "119",
      "title": "Pascal's Triangle II",
      "titleSlug": "pascals-triangle-ii",
      "acRate": "63.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "120",
      "questionFrontendId": "120",
      "title": "Triangle",
      "titleSlug": "triangle",
      "acRate": "56.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "121",
      "questionFrontendId": "121",
      "title": "Best Time to Buy and Sell Stock",
      "titleSlug": "best-time-to-buy-and-sell-stock",
      "acRate": "53.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "122",
      "questionFrontendId": "122",
      "title": "Best Time to Buy and Sell Stock II",
      "titleSlug": "best-time-to-buy-and-sell-stock-ii",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "123",
      "questionFrontendId": "123",
      "title": "Best Time to Buy and Sell Stock III",
      "titleSlug": "best-time-to-buy-and-sell-stock-iii",
      "acRate": "47.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "124",
      "questionFrontendId": "124",
      "title": "Binary Tree Maximum Path Sum",
      "titleSlug": "binary-tree-maximum-path-sum",
      "acRate": "40.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "125",
      "questionFrontendId": "125",
      "title": "Valid Palindrome",
      "titleSlug": "valid-palindrome",
      "acRate": "47.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "126",
      "questionFrontendId": "126",
      "title": "Word Ladder II",
      "titleSlug": "word-ladder-ii",
      "acRate": "27.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "127",
      "questionFrontendId": "127",
      "title": "Word Ladder",
      "titleSlug": "word-ladder",
      "acRate": "38.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "128",
      "questionFrontendId": "128",
      "title": "Longest Consecutive Sequence",
      "titleSlug": "longest-consecutive-sequence",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "129",
      "questionFrontendId": "129",
      "title": "Sum Root to Leaf Numbers",
      "titleSlug": "sum-root-to-leaf-numbers",
      "acRate": "63.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "130",
      "questionFrontendId": "130",
      "title": "Surrounded Regions",
      "titleSlug": "surrounded-regions",
      "acRate": "39.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "131",
      "questionFrontendId": "131",
      "title": "Palindrome Partitioning",
      "titleSlug": "palindrome-partitioning",
      "acRate": "67.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "132",
      "questionFrontendId": "132",
      "title": "Palindrome Partitioning II",
      "titleSlug": "palindrome-partitioning-ii",
      "acRate": "33.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "133",
      "questionFrontendId": "133",
      "title": "Clone Graph",
      "titleSlug": "clone-graph",
      "acRate": "56.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "134",
      "questionFrontendId": "134",
      "title": "Gas Station",
      "titleSlug": "gas-station",
      "acRate": "45.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "135",
      "questionFrontendId": "135",
      "title": "Candy",
      "titleSlug": "candy",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "136",
      "questionFrontendId": "136",
      "title": "Single Number",
      "titleSlug": "single-number",
      "acRate": "72.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "137",
      "questionFrontendId": "137",
      "title": "Single Number II",
      "titleSlug": "single-number-ii",
      "acRate": "62.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "138",
      "questionFrontendId": "138",
      "title": "Copy List with Random Pointer",
      "titleSlug": "copy-list-with-random-pointer",
      "acRate": "55.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "139",
      "questionFrontendId": "139",
      "title": "Word Break",
      "titleSlug": "word-break",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "140",
      "questionFrontendId": "140",
      "title": "Word Break II",
      "titleSlug": "word-break-ii",
      "acRate": "47.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "141",
      "questionFrontendId": "141",
      "title": "Linked List Cycle",
      "titleSlug": "linked-list-cycle",
      "acRate": "50.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "142",
      "questionFrontendId": "142",
      "title": "Linked List Cycle II",
      "titleSlug": "linked-list-cycle-ii",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "143",
      "questionFrontendId": "143",
      "title": "Reorder List",
      "titleSlug": "reorder-list",
      "acRate": "58.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "144",
      "questionFrontendId": "144",
      "title": "Binary Tree Preorder Traversal",
      "titleSlug": "binary-tree-preorder-traversal",
      "acRate": "69.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "145",
      "questionFrontendId": "145",
      "title": "Binary Tree Postorder Traversal",
      "titleSlug": "binary-tree-postorder-traversal",
      "acRate": "70.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "146",
      "questionFrontendId": "146",
      "title": "LRU Cache",
      "titleSlug": "lru-cache",
      "acRate": "42.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "148",
      "questionFrontendId": "148",
      "title": "Sort List",
      "titleSlug": "sort-list",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "149",
      "questionFrontendId": "149",
      "title": "Max Points on a Line",
      "titleSlug": "max-points-on-a-line",
      "acRate": "26.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "150",
      "questionFrontendId": "150",
      "title": "Evaluate Reverse Polish Notation",
      "titleSlug": "evaluate-reverse-polish-notation",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "151",
      "questionFrontendId": "151",
      "title": "Reverse Words in a String",
      "titleSlug": "reverse-words-in-a-string",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "152",
      "questionFrontendId": "152",
      "title": "Maximum Product Subarray",
      "titleSlug": "maximum-product-subarray",
      "acRate": "35.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "153",
      "questionFrontendId": "153",
      "title": "Find Minimum in Rotated Sorted Array",
      "titleSlug": "find-minimum-in-rotated-sorted-array",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "154",
      "questionFrontendId": "154",
      "title": "Find Minimum in Rotated Sorted Array II",
      "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
      "acRate": "43.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "155",
      "questionFrontendId": "155",
      "title": "Min Stack",
      "titleSlug": "min-stack",
      "acRate": "54.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "157",
      "questionFrontendId": "157",
      "title": "Read N Characters Given Read4",
      "titleSlug": "read-n-characters-given-read4",
      "acRate": "41.4%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "159",
      "questionFrontendId": "159",
      "title": "Longest Substring with At Most Two Distinct Characters",
      "titleSlug": "longest-substring-with-at-most-two-distinct-characters",
      "acRate": "54.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "160",
      "questionFrontendId": "160",
      "title": "Intersection of Two Linked Lists",
      "titleSlug": "intersection-of-two-linked-lists",
      "acRate": "57.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "161",
      "questionFrontendId": "161",
      "title": "One Edit Distance",
      "titleSlug": "one-edit-distance",
      "acRate": "34.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "162",
      "questionFrontendId": "162",
      "title": "Find Peak Element",
      "titleSlug": "find-peak-element",
      "acRate": "45.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "165",
      "questionFrontendId": "165",
      "title": "Compare Version Numbers",
      "titleSlug": "compare-version-numbers",
      "acRate": "36.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "167",
      "questionFrontendId": "167",
      "title": "Two Sum II - Input Array Is Sorted",
      "titleSlug": "two-sum-ii-input-array-is-sorted",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "168",
      "questionFrontendId": "168",
      "title": "Excel Sheet Column Title",
      "titleSlug": "excel-sheet-column-title",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "169",
      "questionFrontendId": "169",
      "title": "Majority Element",
      "titleSlug": "majority-element",
      "acRate": "64.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "171",
      "questionFrontendId": "171",
      "title": "Excel Sheet Column Number",
      "titleSlug": "excel-sheet-column-number",
      "acRate": "63.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "173",
      "questionFrontendId": "173",
      "title": "Binary Search Tree Iterator",
      "titleSlug": "binary-search-tree-iterator",
      "acRate": "71.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "175",
      "questionFrontendId": "175",
      "title": "Combine Two Tables",
      "titleSlug": "combine-two-tables",
      "acRate": "75.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "176",
      "questionFrontendId": "176",
      "title": "Second Highest Salary",
      "titleSlug": "second-highest-salary",
      "acRate": "40.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "177",
      "questionFrontendId": "177",
      "title": "Nth Highest Salary",
      "titleSlug": "nth-highest-salary",
      "acRate": "38.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "178",
      "questionFrontendId": "178",
      "title": "Rank Scores",
      "titleSlug": "rank-scores",
      "acRate": "62.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "179",
      "questionFrontendId": "179",
      "title": "Largest Number",
      "titleSlug": "largest-number",
      "acRate": "36.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "180",
      "questionFrontendId": "180",
      "title": "Consecutive Numbers",
      "titleSlug": "consecutive-numbers",
      "acRate": "47.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "181",
      "questionFrontendId": "181",
      "title": "Employees Earning More Than Their Managers",
      "titleSlug": "employees-earning-more-than-their-managers",
      "acRate": "69.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "182",
      "questionFrontendId": "182",
      "title": "Duplicate Emails",
      "titleSlug": "duplicate-emails",
      "acRate": "71.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "183",
      "questionFrontendId": "183",
      "title": "Customers Who Never Order",
      "titleSlug": "customers-who-never-order",
      "acRate": "69.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "184",
      "questionFrontendId": "184",
      "title": "Department Highest Salary",
      "titleSlug": "department-highest-salary",
      "acRate": "51.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "185",
      "questionFrontendId": "185",
      "title": "Department Top Three Salaries",
      "titleSlug": "department-top-three-salaries",
      "acRate": "52.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "186",
      "questionFrontendId": "186",
      "title": "Reverse Words in a String II",
      "titleSlug": "reverse-words-in-a-string-ii",
      "acRate": "54.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "187",
      "questionFrontendId": "187",
      "title": "Repeated DNA Sequences",
      "titleSlug": "repeated-dna-sequences",
      "acRate": "48.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "188",
      "questionFrontendId": "188",
      "title": "Best Time to Buy and Sell Stock IV",
      "titleSlug": "best-time-to-buy-and-sell-stock-iv",
      "acRate": "42.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "189",
      "questionFrontendId": "189",
      "title": "Rotate Array",
      "titleSlug": "rotate-array",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "190",
      "questionFrontendId": "190",
      "title": "Reverse Bits",
      "titleSlug": "reverse-bits",
      "acRate": "58.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "191",
      "questionFrontendId": "191",
      "title": "Number of 1 Bits",
      "titleSlug": "number-of-1-bits",
      "acRate": "70.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "192",
      "questionFrontendId": "192",
      "title": "Word Frequency",
      "titleSlug": "word-frequency",
      "acRate": "25.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Shell",
          "slug": "shell"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "193",
      "questionFrontendId": "193",
      "title": "Valid Phone Numbers",
      "titleSlug": "valid-phone-numbers",
      "acRate": "25.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Shell",
          "slug": "shell"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "196",
      "questionFrontendId": "196",
      "title": "Delete Duplicate Emails",
      "titleSlug": "delete-duplicate-emails",
      "acRate": "61.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "197",
      "questionFrontendId": "197",
      "title": "Rising Temperature",
      "titleSlug": "rising-temperature",
      "acRate": "47.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "198",
      "questionFrontendId": "198",
      "title": "House Robber",
      "titleSlug": "house-robber",
      "acRate": "50.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "199",
      "questionFrontendId": "199",
      "title": "Binary Tree Right Side View",
      "titleSlug": "binary-tree-right-side-view",
      "acRate": "62.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "200",
      "questionFrontendId": "200",
      "title": "Number of Islands",
      "titleSlug": "number-of-islands",
      "acRate": "58.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "201",
      "questionFrontendId": "201",
      "title": "Bitwise AND of Numbers Range",
      "titleSlug": "bitwise-and-of-numbers-range",
      "acRate": "46.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "202",
      "questionFrontendId": "202",
      "title": "Happy Number",
      "titleSlug": "happy-number",
      "acRate": "56.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "203",
      "questionFrontendId": "203",
      "title": "Remove Linked List Elements",
      "titleSlug": "remove-linked-list-elements",
      "acRate": "48.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "204",
      "questionFrontendId": "204",
      "title": "Count Primes",
      "titleSlug": "count-primes",
      "acRate": "33.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "205",
      "questionFrontendId": "205",
      "title": "Isomorphic Strings",
      "titleSlug": "isomorphic-strings",
      "acRate": "43.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "206",
      "questionFrontendId": "206",
      "title": "Reverse Linked List",
      "titleSlug": "reverse-linked-list",
      "acRate": "76.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "207",
      "questionFrontendId": "207",
      "title": "Course Schedule",
      "titleSlug": "course-schedule",
      "acRate": "46.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "208",
      "questionFrontendId": "208",
      "title": "Implement Trie (Prefix Tree)",
      "titleSlug": "implement-trie-prefix-tree",
      "acRate": "64.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "209",
      "questionFrontendId": "209",
      "title": "Minimum Size Subarray Sum",
      "titleSlug": "minimum-size-subarray-sum",
      "acRate": "46.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "210",
      "questionFrontendId": "210",
      "title": "Course Schedule II",
      "titleSlug": "course-schedule-ii",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "211",
      "questionFrontendId": "211",
      "title": "Design Add and Search Words Data Structure",
      "titleSlug": "design-add-and-search-words-data-structure",
      "acRate": "45.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "212",
      "questionFrontendId": "212",
      "title": "Word Search II",
      "titleSlug": "word-search-ii",
      "acRate": "36.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "213",
      "questionFrontendId": "213",
      "title": "House Robber II",
      "titleSlug": "house-robber-ii",
      "acRate": "41.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "214",
      "questionFrontendId": "214",
      "title": "Shortest Palindrome",
      "titleSlug": "shortest-palindrome",
      "acRate": "33.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "215",
      "questionFrontendId": "215",
      "title": "Kth Largest Element in an Array",
      "titleSlug": "kth-largest-element-in-an-array",
      "acRate": "66.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "216",
      "questionFrontendId": "216",
      "title": "Combination Sum III",
      "titleSlug": "combination-sum-iii",
      "acRate": "69.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "217",
      "questionFrontendId": "217",
      "title": "Contains Duplicate",
      "titleSlug": "contains-duplicate",
      "acRate": "61.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "218",
      "questionFrontendId": "218",
      "title": "The Skyline Problem",
      "titleSlug": "the-skyline-problem",
      "acRate": "42.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Line Sweep",
          "slug": "line-sweep"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "219",
      "questionFrontendId": "219",
      "title": "Contains Duplicate II",
      "titleSlug": "contains-duplicate-ii",
      "acRate": "44.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "220",
      "questionFrontendId": "220",
      "title": "Contains Duplicate III",
      "titleSlug": "contains-duplicate-iii",
      "acRate": "22.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "221",
      "questionFrontendId": "221",
      "title": "Maximal Square",
      "titleSlug": "maximal-square",
      "acRate": "46.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "222",
      "questionFrontendId": "222",
      "title": "Count Complete Tree Nodes",
      "titleSlug": "count-complete-tree-nodes",
      "acRate": "64.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "223",
      "questionFrontendId": "223",
      "title": "Rectangle Area",
      "titleSlug": "rectangle-area",
      "acRate": "46.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "224",
      "questionFrontendId": "224",
      "title": "Basic Calculator",
      "titleSlug": "basic-calculator",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "225",
      "questionFrontendId": "225",
      "title": "Implement Stack using Queues",
      "titleSlug": "implement-stack-using-queues",
      "acRate": "63.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "226",
      "questionFrontendId": "226",
      "title": "Invert Binary Tree",
      "titleSlug": "invert-binary-tree",
      "acRate": "76.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "227",
      "questionFrontendId": "227",
      "title": "Basic Calculator II",
      "titleSlug": "basic-calculator-ii",
      "acRate": "43.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "228",
      "questionFrontendId": "228",
      "title": "Summary Ranges",
      "titleSlug": "summary-ranges",
      "acRate": "50.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "229",
      "questionFrontendId": "229",
      "title": "Majority Element II",
      "titleSlug": "majority-element-ii",
      "acRate": "51.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "230",
      "questionFrontendId": "230",
      "title": "Kth Smallest Element in a BST",
      "titleSlug": "kth-smallest-element-in-a-bst",
      "acRate": "72.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "231",
      "questionFrontendId": "231",
      "title": "Power of Two",
      "titleSlug": "power-of-two",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "232",
      "questionFrontendId": "232",
      "title": "Implement Queue using Stacks",
      "titleSlug": "implement-queue-using-stacks",
      "acRate": "66.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "233",
      "questionFrontendId": "233",
      "title": "Number of Digit One",
      "titleSlug": "number-of-digit-one",
      "acRate": "34.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "234",
      "questionFrontendId": "234",
      "title": "Palindrome Linked List",
      "titleSlug": "palindrome-linked-list",
      "acRate": "53.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "235",
      "questionFrontendId": "235",
      "title": "Lowest Common Ancestor of a Binary Search Tree",
      "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
      "acRate": "64.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "236",
      "questionFrontendId": "236",
      "title": "Lowest Common Ancestor of a Binary Tree",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "237",
      "questionFrontendId": "237",
      "title": "Delete Node in a Linked List",
      "titleSlug": "delete-node-in-a-linked-list",
      "acRate": "78.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "238",
      "questionFrontendId": "238",
      "title": "Product of Array Except Self",
      "titleSlug": "product-of-array-except-self",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "239",
      "questionFrontendId": "239",
      "title": "Sliding Window Maximum",
      "titleSlug": "sliding-window-maximum",
      "acRate": "46.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "240",
      "questionFrontendId": "240",
      "title": "Search a 2D Matrix II",
      "titleSlug": "search-a-2d-matrix-ii",
      "acRate": "52.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "241",
      "questionFrontendId": "241",
      "title": "Different Ways to Add Parentheses",
      "titleSlug": "different-ways-to-add-parentheses",
      "acRate": "65.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "242",
      "questionFrontendId": "242",
      "title": "Valid Anagram",
      "titleSlug": "valid-anagram",
      "acRate": "64.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "243",
      "questionFrontendId": "243",
      "title": "Shortest Word Distance",
      "titleSlug": "shortest-word-distance",
      "acRate": "65.3%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "244",
      "questionFrontendId": "244",
      "title": "Shortest Word Distance II",
      "titleSlug": "shortest-word-distance-ii",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "249",
      "questionFrontendId": "249",
      "title": "Group Shifted Strings",
      "titleSlug": "group-shifted-strings",
      "acRate": "65.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "252",
      "questionFrontendId": "252",
      "title": "Meeting Rooms",
      "titleSlug": "meeting-rooms",
      "acRate": "58.0%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "253",
      "questionFrontendId": "253",
      "title": "Meeting Rooms II",
      "titleSlug": "meeting-rooms-ii",
      "acRate": "51.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "255",
      "questionFrontendId": "255",
      "title": "Verify Preorder Sequence in Binary Search Tree",
      "titleSlug": "verify-preorder-sequence-in-binary-search-tree",
      "acRate": "48.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "256",
      "questionFrontendId": "256",
      "title": "Paint House",
      "titleSlug": "paint-house",
      "acRate": "62.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "257",
      "questionFrontendId": "257",
      "title": "Binary Tree Paths",
      "titleSlug": "binary-tree-paths",
      "acRate": "63.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "258",
      "questionFrontendId": "258",
      "title": "Add Digits",
      "titleSlug": "add-digits",
      "acRate": "66.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "261",
      "questionFrontendId": "261",
      "title": "Graph Valid Tree",
      "titleSlug": "graph-valid-tree",
      "acRate": "48.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "262",
      "questionFrontendId": "262",
      "title": "Trips and Users",
      "titleSlug": "trips-and-users",
      "acRate": "36.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "263",
      "questionFrontendId": "263",
      "title": "Ugly Number",
      "titleSlug": "ugly-number",
      "acRate": "42.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "265",
      "questionFrontendId": "265",
      "title": "Paint House II",
      "titleSlug": "paint-house-ii",
      "acRate": "54.5%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "267",
      "questionFrontendId": "267",
      "title": "Palindrome Permutation II",
      "titleSlug": "palindrome-permutation-ii",
      "acRate": "41.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "268",
      "questionFrontendId": "268",
      "title": "Missing Number",
      "titleSlug": "missing-number",
      "acRate": "66.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "269",
      "questionFrontendId": "269",
      "title": "Alien Dictionary",
      "titleSlug": "alien-dictionary",
      "acRate": "35.7%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "270",
      "questionFrontendId": "270",
      "title": "Closest Binary Search Tree Value",
      "titleSlug": "closest-binary-search-tree-value",
      "acRate": "51.9%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "271",
      "questionFrontendId": "271",
      "title": "Encode and Decode Strings",
      "titleSlug": "encode-and-decode-strings",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "273",
      "questionFrontendId": "273",
      "title": "Integer to English Words",
      "titleSlug": "integer-to-english-words",
      "acRate": "30.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "274",
      "questionFrontendId": "274",
      "title": "H-Index",
      "titleSlug": "h-index",
      "acRate": "38.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "275",
      "questionFrontendId": "275",
      "title": "H-Index II",
      "titleSlug": "h-index-ii",
      "acRate": "38.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "277",
      "questionFrontendId": "277",
      "title": "Find the Celebrity",
      "titleSlug": "find-the-celebrity",
      "acRate": "47.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "278",
      "questionFrontendId": "278",
      "title": "First Bad Version",
      "titleSlug": "first-bad-version",
      "acRate": "44.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "279",
      "questionFrontendId": "279",
      "title": "Perfect Squares",
      "titleSlug": "perfect-squares",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "282",
      "questionFrontendId": "282",
      "title": "Expression Add Operators",
      "titleSlug": "expression-add-operators",
      "acRate": "39.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "283",
      "questionFrontendId": "283",
      "title": "Move Zeroes",
      "titleSlug": "move-zeroes",
      "acRate": "61.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "286",
      "questionFrontendId": "286",
      "title": "Walls and Gates",
      "titleSlug": "walls-and-gates",
      "acRate": "61.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "287",
      "questionFrontendId": "287",
      "title": "Find the Duplicate Number",
      "titleSlug": "find-the-duplicate-number",
      "acRate": "60.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "289",
      "questionFrontendId": "289",
      "title": "Game of Life",
      "titleSlug": "game-of-life",
      "acRate": "68.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "290",
      "questionFrontendId": "290",
      "title": "Word Pattern",
      "titleSlug": "word-pattern",
      "acRate": "42.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "295",
      "questionFrontendId": "295",
      "title": "Find Median from Data Stream",
      "titleSlug": "find-median-from-data-stream",
      "acRate": "51.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "297",
      "questionFrontendId": "297",
      "title": "Serialize and Deserialize Binary Tree",
      "titleSlug": "serialize-and-deserialize-binary-tree",
      "acRate": "56.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "298",
      "questionFrontendId": "298",
      "title": "Binary Tree Longest Consecutive Sequence",
      "titleSlug": "binary-tree-longest-consecutive-sequence",
      "acRate": "53.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "299",
      "questionFrontendId": "299",
      "title": "Bulls and Cows",
      "titleSlug": "bulls-and-cows",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "300",
      "questionFrontendId": "300",
      "title": "Longest Increasing Subsequence",
      "titleSlug": "longest-increasing-subsequence",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "301",
      "questionFrontendId": "301",
      "title": "Remove Invalid Parentheses",
      "titleSlug": "remove-invalid-parentheses",
      "acRate": "48.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "303",
      "questionFrontendId": "303",
      "title": "Range Sum Query - Immutable",
      "titleSlug": "range-sum-query-immutable",
      "acRate": "63.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "304",
      "questionFrontendId": "304",
      "title": "Range Sum Query 2D - Immutable",
      "titleSlug": "range-sum-query-2d-immutable",
      "acRate": "54.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "305",
      "questionFrontendId": "305",
      "title": "Number of Islands II",
      "titleSlug": "number-of-islands-ii",
      "acRate": "39.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "307",
      "questionFrontendId": "307",
      "title": "Range Sum Query - Mutable",
      "titleSlug": "range-sum-query-mutable",
      "acRate": "40.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "309",
      "questionFrontendId": "309",
      "title": "Best Time to Buy and Sell Stock with Cooldown",
      "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
      "acRate": "58.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "310",
      "questionFrontendId": "310",
      "title": "Minimum Height Trees",
      "titleSlug": "minimum-height-trees",
      "acRate": "38.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "312",
      "questionFrontendId": "312",
      "title": "Burst Balloons",
      "titleSlug": "burst-balloons",
      "acRate": "58.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "314",
      "questionFrontendId": "314",
      "title": "Binary Tree Vertical Order Traversal",
      "titleSlug": "binary-tree-vertical-order-traversal",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "315",
      "questionFrontendId": "315",
      "title": "Count of Smaller Numbers After Self",
      "titleSlug": "count-of-smaller-numbers-after-self",
      "acRate": "42.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "316",
      "questionFrontendId": "316",
      "title": "Remove Duplicate Letters",
      "titleSlug": "remove-duplicate-letters",
      "acRate": "49.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "318",
      "questionFrontendId": "318",
      "title": "Maximum Product of Word Lengths",
      "titleSlug": "maximum-product-of-word-lengths",
      "acRate": "59.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "319",
      "questionFrontendId": "319",
      "title": "Bulb Switcher",
      "titleSlug": "bulb-switcher",
      "acRate": "52.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "322",
      "questionFrontendId": "322",
      "title": "Coin Change",
      "titleSlug": "coin-change",
      "acRate": "43.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "323",
      "questionFrontendId": "323",
      "title": "Number of Connected Components in an Undirected Graph",
      "titleSlug": "number-of-connected-components-in-an-undirected-graph",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "324",
      "questionFrontendId": "324",
      "title": "Wiggle Sort II",
      "titleSlug": "wiggle-sort-ii",
      "acRate": "34.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "326",
      "questionFrontendId": "326",
      "title": "Power of Three",
      "titleSlug": "power-of-three",
      "acRate": "46.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "327",
      "questionFrontendId": "327",
      "title": "Count of Range Sum",
      "titleSlug": "count-of-range-sum",
      "acRate": "35.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "328",
      "questionFrontendId": "328",
      "title": "Odd Even Linked List",
      "titleSlug": "odd-even-linked-list",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "329",
      "questionFrontendId": "329",
      "title": "Longest Increasing Path in a Matrix",
      "titleSlug": "longest-increasing-path-in-a-matrix",
      "acRate": "53.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "332",
      "questionFrontendId": "332",
      "title": "Reconstruct Itinerary",
      "titleSlug": "reconstruct-itinerary",
      "acRate": "43.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Eulerian Circuit",
          "slug": "eulerian-circuit"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "333",
      "questionFrontendId": "333",
      "title": "Largest BST Subtree",
      "titleSlug": "largest-bst-subtree",
      "acRate": "43.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "334",
      "questionFrontendId": "334",
      "title": "Increasing Triplet Subsequence",
      "titleSlug": "increasing-triplet-subsequence",
      "acRate": "40.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "336",
      "questionFrontendId": "336",
      "title": "Palindrome Pairs",
      "titleSlug": "palindrome-pairs",
      "acRate": "35.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "337",
      "questionFrontendId": "337",
      "title": "House Robber III",
      "titleSlug": "house-robber-iii",
      "acRate": "54.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "338",
      "questionFrontendId": "338",
      "title": "Counting Bits",
      "titleSlug": "counting-bits",
      "acRate": "78.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "339",
      "questionFrontendId": "339",
      "title": "Nested List Weight Sum",
      "titleSlug": "nested-list-weight-sum",
      "acRate": "83.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "340",
      "questionFrontendId": "340",
      "title": "Longest Substring with At Most K Distinct Characters",
      "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
      "acRate": "48.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "341",
      "questionFrontendId": "341",
      "title": "Flatten Nested List Iterator",
      "titleSlug": "flatten-nested-list-iterator",
      "acRate": "64.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Iterator",
          "slug": "iterator"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "342",
      "questionFrontendId": "342",
      "title": "Power of Four",
      "titleSlug": "power-of-four",
      "acRate": "47.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "343",
      "questionFrontendId": "343",
      "title": "Integer Break",
      "titleSlug": "integer-break",
      "acRate": "60.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "344",
      "questionFrontendId": "344",
      "title": "Reverse String",
      "titleSlug": "reverse-string",
      "acRate": "77.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "345",
      "questionFrontendId": "345",
      "title": "Reverse Vowels of a String",
      "titleSlug": "reverse-vowels-of-a-string",
      "acRate": "52.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "346",
      "questionFrontendId": "346",
      "title": "Moving Average from Data Stream",
      "titleSlug": "moving-average-from-data-stream",
      "acRate": "78.2%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "347",
      "questionFrontendId": "347",
      "title": "Top K Frequent Elements",
      "titleSlug": "top-k-frequent-elements",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "348",
      "questionFrontendId": "348",
      "title": "Design Tic-Tac-Toe",
      "titleSlug": "design-tic-tac-toe",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "349",
      "questionFrontendId": "349",
      "title": "Intersection of Two Arrays",
      "titleSlug": "intersection-of-two-arrays",
      "acRate": "74.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "350",
      "questionFrontendId": "350",
      "title": "Intersection of Two Arrays II",
      "titleSlug": "intersection-of-two-arrays-ii",
      "acRate": "56.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "352",
      "questionFrontendId": "352",
      "title": "Data Stream as Disjoint Intervals",
      "titleSlug": "data-stream-as-disjoint-intervals",
      "acRate": "60.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "353",
      "questionFrontendId": "353",
      "title": "Design Snake Game",
      "titleSlug": "design-snake-game",
      "acRate": "38.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "354",
      "questionFrontendId": "354",
      "title": "Russian Doll Envelopes",
      "titleSlug": "russian-doll-envelopes",
      "acRate": "37.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "355",
      "questionFrontendId": "355",
      "title": "Design Twitter",
      "titleSlug": "design-twitter",
      "acRate": "39.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "359",
      "questionFrontendId": "359",
      "title": "Logger Rate Limiter",
      "titleSlug": "logger-rate-limiter",
      "acRate": "75.8%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "362",
      "questionFrontendId": "362",
      "title": "Design Hit Counter",
      "titleSlug": "design-hit-counter",
      "acRate": "68.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "363",
      "questionFrontendId": "363",
      "title": "Max Sum of Rectangle No Larger Than K",
      "titleSlug": "max-sum-of-rectangle-no-larger-than-k",
      "acRate": "44.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "366",
      "questionFrontendId": "366",
      "title": "Find Leaves of Binary Tree",
      "titleSlug": "find-leaves-of-binary-tree",
      "acRate": "80.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "367",
      "questionFrontendId": "367",
      "title": "Valid Perfect Square",
      "titleSlug": "valid-perfect-square",
      "acRate": "43.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "368",
      "questionFrontendId": "368",
      "title": "Largest Divisible Subset",
      "titleSlug": "largest-divisible-subset",
      "acRate": "45.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "371",
      "questionFrontendId": "371",
      "title": "Sum of Two Integers",
      "titleSlug": "sum-of-two-integers",
      "acRate": "51.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "373",
      "questionFrontendId": "373",
      "title": "Find K Pairs with Smallest Sums",
      "titleSlug": "find-k-pairs-with-smallest-sums",
      "acRate": "40.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "374",
      "questionFrontendId": "374",
      "title": "Guess Number Higher or Lower",
      "titleSlug": "guess-number-higher-or-lower",
      "acRate": "53.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "376",
      "questionFrontendId": "376",
      "title": "Wiggle Subsequence",
      "titleSlug": "wiggle-subsequence",
      "acRate": "48.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "377",
      "questionFrontendId": "377",
      "title": "Combination Sum IV",
      "titleSlug": "combination-sum-iv",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "378",
      "questionFrontendId": "378",
      "title": "Kth Smallest Element in a Sorted Matrix",
      "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
      "acRate": "62.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "380",
      "questionFrontendId": "380",
      "title": "Insert Delete GetRandom O(1)",
      "titleSlug": "insert-delete-getrandom-o1",
      "acRate": "54.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "381",
      "questionFrontendId": "381",
      "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
      "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
      "acRate": "35.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "383",
      "questionFrontendId": "383",
      "title": "Ransom Note",
      "titleSlug": "ransom-note",
      "acRate": "61.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "386",
      "questionFrontendId": "386",
      "title": "Lexicographical Numbers",
      "titleSlug": "lexicographical-numbers",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "387",
      "questionFrontendId": "387",
      "title": "First Unique Character in a String",
      "titleSlug": "first-unique-character-in-a-string",
      "acRate": "62.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "388",
      "questionFrontendId": "388",
      "title": "Longest Absolute File Path",
      "titleSlug": "longest-absolute-file-path",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "389",
      "questionFrontendId": "389",
      "title": "Find the Difference",
      "titleSlug": "find-the-difference",
      "acRate": "59.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "390",
      "questionFrontendId": "390",
      "title": "Elimination Game",
      "titleSlug": "elimination-game",
      "acRate": "45.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "392",
      "questionFrontendId": "392",
      "title": "Is Subsequence",
      "titleSlug": "is-subsequence",
      "acRate": "47.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "393",
      "questionFrontendId": "393",
      "title": "UTF-8 Validation",
      "titleSlug": "utf-8-validation",
      "acRate": "45.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "394",
      "questionFrontendId": "394",
      "title": "Decode String",
      "titleSlug": "decode-string",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "395",
      "questionFrontendId": "395",
      "title": "Longest Substring with At Least K Repeating Characters",
      "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
      "acRate": "45.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "396",
      "questionFrontendId": "396",
      "title": "Rotate Function",
      "titleSlug": "rotate-function",
      "acRate": "42.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "397",
      "questionFrontendId": "397",
      "title": "Integer Replacement",
      "titleSlug": "integer-replacement",
      "acRate": "35.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "398",
      "questionFrontendId": "398",
      "title": "Random Pick Index",
      "titleSlug": "random-pick-index",
      "acRate": "63.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Reservoir Sampling",
          "slug": "reservoir-sampling"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "399",
      "questionFrontendId": "399",
      "title": "Evaluate Division",
      "titleSlug": "evaluate-division",
      "acRate": "61.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "402",
      "questionFrontendId": "402",
      "title": "Remove K Digits",
      "titleSlug": "remove-k-digits",
      "acRate": "31.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "403",
      "questionFrontendId": "403",
      "title": "Frog Jump",
      "titleSlug": "frog-jump",
      "acRate": "46.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "404",
      "questionFrontendId": "404",
      "title": "Sum of Left Leaves",
      "titleSlug": "sum-of-left-leaves",
      "acRate": "57.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "406",
      "questionFrontendId": "406",
      "title": "Queue Reconstruction by Height",
      "titleSlug": "queue-reconstruction-by-height",
      "acRate": "73.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "407",
      "questionFrontendId": "407",
      "title": "Trapping Rain Water II",
      "titleSlug": "trapping-rain-water-ii",
      "acRate": "47.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "408",
      "questionFrontendId": "408",
      "title": "Valid Word Abbreviation",
      "titleSlug": "valid-word-abbreviation",
      "acRate": "35.6%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "409",
      "questionFrontendId": "409",
      "title": "Longest Palindrome",
      "titleSlug": "longest-palindrome",
      "acRate": "53.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "410",
      "questionFrontendId": "410",
      "title": "Split Array Largest Sum",
      "titleSlug": "split-array-largest-sum",
      "acRate": "55.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "412",
      "questionFrontendId": "412",
      "title": "Fizz Buzz",
      "titleSlug": "fizz-buzz",
      "acRate": "71.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "413",
      "questionFrontendId": "413",
      "title": "Arithmetic Slices",
      "titleSlug": "arithmetic-slices",
      "acRate": "65.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "414",
      "questionFrontendId": "414",
      "title": "Third Maximum Number",
      "titleSlug": "third-maximum-number",
      "acRate": "34.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "415",
      "questionFrontendId": "415",
      "title": "Add Strings",
      "titleSlug": "add-strings",
      "acRate": "51.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "416",
      "questionFrontendId": "416",
      "title": "Partition Equal Subset Sum",
      "titleSlug": "partition-equal-subset-sum",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "417",
      "questionFrontendId": "417",
      "title": "Pacific Atlantic Water Flow",
      "titleSlug": "pacific-atlantic-water-flow",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "419",
      "questionFrontendId": "419",
      "title": "Battleships in a Board",
      "titleSlug": "battleships-in-a-board",
      "acRate": "75.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "420",
      "questionFrontendId": "420",
      "title": "Strong Password Checker",
      "titleSlug": "strong-password-checker",
      "acRate": "13.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "421",
      "questionFrontendId": "421",
      "title": "Maximum XOR of Two Numbers in an Array",
      "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
      "acRate": "53.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "424",
      "questionFrontendId": "424",
      "title": "Longest Repeating Character Replacement",
      "titleSlug": "longest-repeating-character-replacement",
      "acRate": "53.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "432",
      "questionFrontendId": "432",
      "title": "All O`one Data Structure",
      "titleSlug": "all-oone-data-structure",
      "acRate": "36.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "433",
      "questionFrontendId": "433",
      "title": "Minimum Genetic Mutation",
      "titleSlug": "minimum-genetic-mutation",
      "acRate": "53.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "435",
      "questionFrontendId": "435",
      "title": "Non-overlapping Intervals",
      "titleSlug": "non-overlapping-intervals",
      "acRate": "53.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "436",
      "questionFrontendId": "436",
      "title": "Find Right Interval",
      "titleSlug": "find-right-interval",
      "acRate": "51.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "437",
      "questionFrontendId": "437",
      "title": "Path Sum III",
      "titleSlug": "path-sum-iii",
      "acRate": "46.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "438",
      "questionFrontendId": "438",
      "title": "Find All Anagrams in a String",
      "titleSlug": "find-all-anagrams-in-a-string",
      "acRate": "50.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "441",
      "questionFrontendId": "441",
      "title": "Arranging Coins",
      "titleSlug": "arranging-coins",
      "acRate": "46.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "442",
      "questionFrontendId": "442",
      "title": "Find All Duplicates in an Array",
      "titleSlug": "find-all-duplicates-in-an-array",
      "acRate": "75.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "443",
      "questionFrontendId": "443",
      "title": "String Compression",
      "titleSlug": "string-compression",
      "acRate": "54.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "445",
      "questionFrontendId": "445",
      "title": "Add Two Numbers II",
      "titleSlug": "add-two-numbers-ii",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "446",
      "questionFrontendId": "446",
      "title": "Arithmetic Slices II - Subsequence",
      "titleSlug": "arithmetic-slices-ii-subsequence",
      "acRate": "54.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "448",
      "questionFrontendId": "448",
      "title": "Find All Numbers Disappeared in an Array",
      "titleSlug": "find-all-numbers-disappeared-in-an-array",
      "acRate": "60.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "449",
      "questionFrontendId": "449",
      "title": "Serialize and Deserialize BST",
      "titleSlug": "serialize-and-deserialize-bst",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "450",
      "questionFrontendId": "450",
      "title": "Delete Node in a BST",
      "titleSlug": "delete-node-in-a-bst",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "451",
      "questionFrontendId": "451",
      "title": "Sort Characters By Frequency",
      "titleSlug": "sort-characters-by-frequency",
      "acRate": "72.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "452",
      "questionFrontendId": "452",
      "title": "Minimum Number of Arrows to Burst Balloons",
      "titleSlug": "minimum-number-of-arrows-to-burst-balloons",
      "acRate": "58.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "453",
      "questionFrontendId": "453",
      "title": "Minimum Moves to Equal Array Elements",
      "titleSlug": "minimum-moves-to-equal-array-elements",
      "acRate": "56.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "455",
      "questionFrontendId": "455",
      "title": "Assign Cookies",
      "titleSlug": "assign-cookies",
      "acRate": "52.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "456",
      "questionFrontendId": "456",
      "title": "132 Pattern",
      "titleSlug": "132-pattern",
      "acRate": "33.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "458",
      "questionFrontendId": "458",
      "title": "Poor Pigs",
      "titleSlug": "poor-pigs",
      "acRate": "59.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "459",
      "questionFrontendId": "459",
      "title": "Repeated Substring Pattern",
      "titleSlug": "repeated-substring-pattern",
      "acRate": "46.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "460",
      "questionFrontendId": "460",
      "title": "LFU Cache",
      "titleSlug": "lfu-cache",
      "acRate": "44.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "462",
      "questionFrontendId": "462",
      "title": "Minimum Moves to Equal Array Elements II",
      "titleSlug": "minimum-moves-to-equal-array-elements-ii",
      "acRate": "60.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "463",
      "questionFrontendId": "463",
      "title": "Island Perimeter",
      "titleSlug": "island-perimeter",
      "acRate": "70.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "465",
      "questionFrontendId": "465",
      "title": "Optimal Account Balancing",
      "titleSlug": "optimal-account-balancing",
      "acRate": "49.5%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "468",
      "questionFrontendId": "468",
      "title": "Validate IP Address",
      "titleSlug": "validate-ip-address",
      "acRate": "26.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "472",
      "questionFrontendId": "472",
      "title": "Concatenated Words",
      "titleSlug": "concatenated-words",
      "acRate": "49.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "473",
      "questionFrontendId": "473",
      "title": "Matchsticks to Square",
      "titleSlug": "matchsticks-to-square",
      "acRate": "40.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "474",
      "questionFrontendId": "474",
      "title": "Ones and Zeroes",
      "titleSlug": "ones-and-zeroes",
      "acRate": "47.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "475",
      "questionFrontendId": "475",
      "title": "Heaters",
      "titleSlug": "heaters",
      "acRate": "37.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "480",
      "questionFrontendId": "480",
      "title": "Sliding Window Median",
      "titleSlug": "sliding-window-median",
      "acRate": "39.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "485",
      "questionFrontendId": "485",
      "title": "Max Consecutive Ones",
      "titleSlug": "max-consecutive-ones",
      "acRate": "58.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "486",
      "questionFrontendId": "486",
      "title": "Predict the Winner",
      "titleSlug": "predict-the-winner",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "490",
      "questionFrontendId": "490",
      "title": "The Maze",
      "titleSlug": "the-maze",
      "acRate": "57.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "491",
      "questionFrontendId": "491",
      "title": "Non-decreasing Subsequences",
      "titleSlug": "non-decreasing-subsequences",
      "acRate": "60.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "493",
      "questionFrontendId": "493",
      "title": "Reverse Pairs",
      "titleSlug": "reverse-pairs",
      "acRate": "30.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "494",
      "questionFrontendId": "494",
      "title": "Target Sum",
      "titleSlug": "target-sum",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "496",
      "questionFrontendId": "496",
      "title": "Next Greater Element I",
      "titleSlug": "next-greater-element-i",
      "acRate": "72.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "498",
      "questionFrontendId": "498",
      "title": "Diagonal Traverse",
      "titleSlug": "diagonal-traverse",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "500",
      "questionFrontendId": "500",
      "title": "Keyboard Row",
      "titleSlug": "keyboard-row",
      "acRate": "70.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "501",
      "questionFrontendId": "501",
      "title": "Find Mode in Binary Search Tree",
      "titleSlug": "find-mode-in-binary-search-tree",
      "acRate": "56.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "502",
      "questionFrontendId": "502",
      "title": "IPO",
      "titleSlug": "ipo",
      "acRate": "49.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "503",
      "questionFrontendId": "503",
      "title": "Next Greater Element II",
      "titleSlug": "next-greater-element-ii",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "505",
      "questionFrontendId": "505",
      "title": "The Maze II",
      "titleSlug": "the-maze-ii",
      "acRate": "53.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "506",
      "questionFrontendId": "506",
      "title": "Relative Ranks",
      "titleSlug": "relative-ranks",
      "acRate": "63.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "507",
      "questionFrontendId": "507",
      "title": "Perfect Number",
      "titleSlug": "perfect-number",
      "acRate": "40.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "508",
      "questionFrontendId": "508",
      "title": "Most Frequent Subtree Sum",
      "titleSlug": "most-frequent-subtree-sum",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "512",
      "questionFrontendId": "2036",
      "title": "Maximum Alternating Subarray Sum",
      "titleSlug": "maximum-alternating-subarray-sum",
      "acRate": "40.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "513",
      "questionFrontendId": "513",
      "title": "Find Bottom Left Tree Value",
      "titleSlug": "find-bottom-left-tree-value",
      "acRate": "71.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "515",
      "questionFrontendId": "515",
      "title": "Find Largest Value in Each Tree Row",
      "titleSlug": "find-largest-value-in-each-tree-row",
      "acRate": "65.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "516",
      "questionFrontendId": "516",
      "title": "Longest Palindromic Subsequence",
      "titleSlug": "longest-palindromic-subsequence",
      "acRate": "62.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "517",
      "questionFrontendId": "517",
      "title": "Super Washing Machines",
      "titleSlug": "super-washing-machines",
      "acRate": "41.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "518",
      "questionFrontendId": "518",
      "title": "Coin Change II",
      "titleSlug": "coin-change-ii",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "523",
      "questionFrontendId": "523",
      "title": "Continuous Subarray Sum",
      "titleSlug": "continuous-subarray-sum",
      "acRate": "28.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "525",
      "questionFrontendId": "525",
      "title": "Contiguous Array",
      "titleSlug": "contiguous-array",
      "acRate": "48.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "526",
      "questionFrontendId": "526",
      "title": "Beautiful Arrangement",
      "titleSlug": "beautiful-arrangement",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "527",
      "questionFrontendId": "527",
      "title": "Word Abbreviation",
      "titleSlug": "word-abbreviation",
      "acRate": "61.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "528",
      "questionFrontendId": "1721",
      "title": "Swapping Nodes in a Linked List",
      "titleSlug": "swapping-nodes-in-a-linked-list",
      "acRate": "68.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "529",
      "questionFrontendId": "529",
      "title": "Minesweeper",
      "titleSlug": "minesweeper",
      "acRate": "66.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "530",
      "questionFrontendId": "530",
      "title": "Minimum Absolute Difference in BST",
      "titleSlug": "minimum-absolute-difference-in-bst",
      "acRate": "58.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "531",
      "questionFrontendId": "531",
      "title": "Lonely Pixel I",
      "titleSlug": "lonely-pixel-i",
      "acRate": "62.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "532",
      "questionFrontendId": "532",
      "title": "K-diff Pairs in an Array",
      "titleSlug": "k-diff-pairs-in-an-array",
      "acRate": "42.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "535",
      "questionFrontendId": "535",
      "title": "Encode and Decode TinyURL",
      "titleSlug": "encode-and-decode-tinyurl",
      "acRate": "86.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "536",
      "questionFrontendId": "536",
      "title": "Construct Binary Tree from String",
      "titleSlug": "construct-binary-tree-from-string",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "537",
      "questionFrontendId": "537",
      "title": "Complex Number Multiplication",
      "titleSlug": "complex-number-multiplication",
      "acRate": "71.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "538",
      "questionFrontendId": "538",
      "title": "Convert BST to Greater Tree",
      "titleSlug": "convert-bst-to-greater-tree",
      "acRate": "68.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "539",
      "questionFrontendId": "539",
      "title": "Minimum Time Difference",
      "titleSlug": "minimum-time-difference",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "540",
      "questionFrontendId": "540",
      "title": "Single Element in a Sorted Array",
      "titleSlug": "single-element-in-a-sorted-array",
      "acRate": "59.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "541",
      "questionFrontendId": "541",
      "title": "Reverse String II",
      "titleSlug": "reverse-string-ii",
      "acRate": "50.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "542",
      "questionFrontendId": "542",
      "title": "01 Matrix",
      "titleSlug": "01-matrix",
      "acRate": "48.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "543",
      "questionFrontendId": "543",
      "title": "Diameter of Binary Tree",
      "titleSlug": "diameter-of-binary-tree",
      "acRate": "60.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "545",
      "questionFrontendId": "545",
      "title": "Boundary of Binary Tree",
      "titleSlug": "boundary-of-binary-tree",
      "acRate": "45.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "546",
      "questionFrontendId": "546",
      "title": "Remove Boxes",
      "titleSlug": "remove-boxes",
      "acRate": "47.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "547",
      "questionFrontendId": "547",
      "title": "Number of Provinces",
      "titleSlug": "number-of-provinces",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "550",
      "questionFrontendId": "1730",
      "title": "Shortest Path to Get Food",
      "titleSlug": "shortest-path-to-get-food",
      "acRate": "54.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "553",
      "questionFrontendId": "553",
      "title": "Optimal Division",
      "titleSlug": "optimal-division",
      "acRate": "60.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "554",
      "questionFrontendId": "554",
      "title": "Brick Wall",
      "titleSlug": "brick-wall",
      "acRate": "54.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "556",
      "questionFrontendId": "556",
      "title": "Next Greater Element III",
      "titleSlug": "next-greater-element-iii",
      "acRate": "34.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "557",
      "questionFrontendId": "557",
      "title": "Reverse Words in a String III",
      "titleSlug": "reverse-words-in-a-string-iii",
      "acRate": "83.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "560",
      "questionFrontendId": "560",
      "title": "Subarray Sum Equals K",
      "titleSlug": "subarray-sum-equals-k",
      "acRate": "43.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "561",
      "questionFrontendId": "561",
      "title": "Array Partition",
      "titleSlug": "array-partition",
      "acRate": "78.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "564",
      "questionFrontendId": "564",
      "title": "Find the Closest Palindrome",
      "titleSlug": "find-the-closest-palindrome",
      "acRate": "22.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "567",
      "questionFrontendId": "567",
      "title": "Permutation in String",
      "titleSlug": "permutation-in-string",
      "acRate": "44.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "570",
      "questionFrontendId": "570",
      "title": "Managers with at Least 5 Direct Reports",
      "titleSlug": "managers-with-at-least-5-direct-reports",
      "acRate": "51.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "572",
      "questionFrontendId": "572",
      "title": "Subtree of Another Tree",
      "titleSlug": "subtree-of-another-tree",
      "acRate": "47.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "576",
      "questionFrontendId": "576",
      "title": "Out of Boundary Paths",
      "titleSlug": "out-of-boundary-paths",
      "acRate": "48.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "577",
      "questionFrontendId": "577",
      "title": "Employee Bonus",
      "titleSlug": "employee-bonus",
      "acRate": "74.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "579",
      "questionFrontendId": "579",
      "title": "Find Cumulative Salary of an Employee",
      "titleSlug": "find-cumulative-salary-of-an-employee",
      "acRate": "46.7%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "581",
      "questionFrontendId": "581",
      "title": "Shortest Unsorted Continuous Subarray",
      "titleSlug": "shortest-unsorted-continuous-subarray",
      "acRate": "36.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "582",
      "questionFrontendId": "582",
      "title": "Kill Process",
      "titleSlug": "kill-process",
      "acRate": "69.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "583",
      "questionFrontendId": "583",
      "title": "Delete Operation for Two Strings",
      "titleSlug": "delete-operation-for-two-strings",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "584",
      "questionFrontendId": "584",
      "title": "Find Customer Referee",
      "titleSlug": "find-customer-referee",
      "acRate": "69.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "587",
      "questionFrontendId": "587",
      "title": "Erect the Fence",
      "titleSlug": "erect-the-fence",
      "acRate": "51.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "588",
      "questionFrontendId": "588",
      "title": "Design In-Memory File System",
      "titleSlug": "design-in-memory-file-system",
      "acRate": "48.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "594",
      "questionFrontendId": "594",
      "title": "Longest Harmonious Subsequence",
      "titleSlug": "longest-harmonious-subsequence",
      "acRate": "54.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "595",
      "questionFrontendId": "595",
      "title": "Big Countries",
      "titleSlug": "big-countries",
      "acRate": "68.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "601",
      "questionFrontendId": "601",
      "title": "Human Traffic of Stadium",
      "titleSlug": "human-traffic-of-stadium",
      "acRate": "48.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "602",
      "questionFrontendId": "602",
      "title": "Friend Requests II: Who Has the Most Friends",
      "titleSlug": "friend-requests-ii-who-has-the-most-friends",
      "acRate": "57.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "603",
      "questionFrontendId": "603",
      "title": "Consecutive Available Seats",
      "titleSlug": "consecutive-available-seats",
      "acRate": "66.3%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "605",
      "questionFrontendId": "605",
      "title": "Can Place Flowers",
      "titleSlug": "can-place-flowers",
      "acRate": "29.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "606",
      "questionFrontendId": "606",
      "title": "Construct String from Binary Tree",
      "titleSlug": "construct-string-from-binary-tree",
      "acRate": "69.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "609",
      "questionFrontendId": "609",
      "title": "Find Duplicate File in System",
      "titleSlug": "find-duplicate-file-in-system",
      "acRate": "67.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "610",
      "questionFrontendId": "610",
      "title": "Triangle Judgement",
      "titleSlug": "triangle-judgement",
      "acRate": "71.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "611",
      "questionFrontendId": "611",
      "title": "Valid Triangle Number",
      "titleSlug": "valid-triangle-number",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "617",
      "questionFrontendId": "617",
      "title": "Merge Two Binary Trees",
      "titleSlug": "merge-two-binary-trees",
      "acRate": "78.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "618",
      "questionFrontendId": "618",
      "title": "Students Report By Geography",
      "titleSlug": "students-report-by-geography",
      "acRate": "63.7%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "620",
      "questionFrontendId": "620",
      "title": "Not Boring Movies",
      "titleSlug": "not-boring-movies",
      "acRate": "73.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "621",
      "questionFrontendId": "621",
      "title": "Task Scheduler",
      "titleSlug": "task-scheduler",
      "acRate": "59.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "623",
      "questionFrontendId": "623",
      "title": "Add One Row to Tree",
      "titleSlug": "add-one-row-to-tree",
      "acRate": "59.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "626",
      "questionFrontendId": "626",
      "title": "Exchange Seats",
      "titleSlug": "exchange-seats",
      "acRate": "69.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "628",
      "questionFrontendId": "628",
      "title": "Maximum Product of Three Numbers",
      "titleSlug": "maximum-product-of-three-numbers",
      "acRate": "45.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "630",
      "questionFrontendId": "630",
      "title": "Course Schedule III",
      "titleSlug": "course-schedule-iii",
      "acRate": "40.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "632",
      "questionFrontendId": "632",
      "title": "Smallest Range Covering Elements from K Lists",
      "titleSlug": "smallest-range-covering-elements-from-k-lists",
      "acRate": "62.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "633",
      "questionFrontendId": "633",
      "title": "Sum of Square Numbers",
      "titleSlug": "sum-of-square-numbers",
      "acRate": "34.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "634",
      "questionFrontendId": "634",
      "title": "Find the Derangement of An Array",
      "titleSlug": "find-the-derangement-of-an-array",
      "acRate": "41.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "636",
      "questionFrontendId": "636",
      "title": "Exclusive Time of Functions",
      "titleSlug": "exclusive-time-of-functions",
      "acRate": "62.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "637",
      "questionFrontendId": "637",
      "title": "Average of Levels in Binary Tree",
      "titleSlug": "average-of-levels-in-binary-tree",
      "acRate": "72.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "640",
      "questionFrontendId": "640",
      "title": "Solve the Equation",
      "titleSlug": "solve-the-equation",
      "acRate": "43.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "642",
      "questionFrontendId": "642",
      "title": "Design Search Autocomplete System",
      "titleSlug": "design-search-autocomplete-system",
      "acRate": "48.9%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "643",
      "questionFrontendId": "643",
      "title": "Maximum Average Subarray I",
      "titleSlug": "maximum-average-subarray-i",
      "acRate": "43.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "645",
      "questionFrontendId": "645",
      "title": "Set Mismatch",
      "titleSlug": "set-mismatch",
      "acRate": "44.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "646",
      "questionFrontendId": "646",
      "title": "Maximum Length of Pair Chain",
      "titleSlug": "maximum-length-of-pair-chain",
      "acRate": "59.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "647",
      "questionFrontendId": "647",
      "title": "Palindromic Substrings",
      "titleSlug": "palindromic-substrings",
      "acRate": "70.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "648",
      "questionFrontendId": "648",
      "title": "Replace Words",
      "titleSlug": "replace-words",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "649",
      "questionFrontendId": "649",
      "title": "Dota2 Senate",
      "titleSlug": "dota2-senate",
      "acRate": "47.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "652",
      "questionFrontendId": "652",
      "title": "Find Duplicate Subtrees",
      "titleSlug": "find-duplicate-subtrees",
      "acRate": "59.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "653",
      "questionFrontendId": "653",
      "title": "Two Sum IV - Input is a BST",
      "titleSlug": "two-sum-iv-input-is-a-bst",
      "acRate": "61.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "657",
      "questionFrontendId": "657",
      "title": "Robot Return to Origin",
      "titleSlug": "robot-return-to-origin",
      "acRate": "75.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "658",
      "questionFrontendId": "658",
      "title": "Find K Closest Elements",
      "titleSlug": "find-k-closest-elements",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "661",
      "questionFrontendId": "661",
      "title": "Image Smoother",
      "titleSlug": "image-smoother",
      "acRate": "67.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "662",
      "questionFrontendId": "662",
      "title": "Maximum Width of Binary Tree",
      "titleSlug": "maximum-width-of-binary-tree",
      "acRate": "42.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "663",
      "questionFrontendId": "663",
      "title": "Equal Tree Partition",
      "titleSlug": "equal-tree-partition",
      "acRate": "41.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "664",
      "questionFrontendId": "664",
      "title": "Strange Printer",
      "titleSlug": "strange-printer",
      "acRate": "55.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "665",
      "questionFrontendId": "665",
      "title": "Non-decreasing Array",
      "titleSlug": "non-decreasing-array",
      "acRate": "24.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "669",
      "questionFrontendId": "669",
      "title": "Trim a Binary Search Tree",
      "titleSlug": "trim-a-binary-search-tree",
      "acRate": "66.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "670",
      "questionFrontendId": "670",
      "title": "Maximum Swap",
      "titleSlug": "maximum-swap",
      "acRate": "48.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "673",
      "questionFrontendId": "673",
      "title": "Number of Longest Increasing Subsequence",
      "titleSlug": "number-of-longest-increasing-subsequence",
      "acRate": "47.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "675",
      "questionFrontendId": "675",
      "title": "Cut Off Trees for Golf Event",
      "titleSlug": "cut-off-trees-for-golf-event",
      "acRate": "34.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "677",
      "questionFrontendId": "677",
      "title": "Map Sum Pairs",
      "titleSlug": "map-sum-pairs",
      "acRate": "56.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "678",
      "questionFrontendId": "678",
      "title": "Valid Parenthesis String",
      "titleSlug": "valid-parenthesis-string",
      "acRate": "34.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "680",
      "questionFrontendId": "680",
      "title": "Valid Palindrome II",
      "titleSlug": "valid-palindrome-ii",
      "acRate": "40.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "681",
      "questionFrontendId": "681",
      "title": "Next Closest Time",
      "titleSlug": "next-closest-time",
      "acRate": "46.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "682",
      "questionFrontendId": "682",
      "title": "Baseball Game",
      "titleSlug": "baseball-game",
      "acRate": "76.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "684",
      "questionFrontendId": "684",
      "title": "Redundant Connection",
      "titleSlug": "redundant-connection",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "685",
      "questionFrontendId": "685",
      "title": "Redundant Connection II",
      "titleSlug": "redundant-connection-ii",
      "acRate": "34.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "686",
      "questionFrontendId": "686",
      "title": "Repeated String Match",
      "titleSlug": "repeated-string-match",
      "acRate": "34.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "687",
      "questionFrontendId": "687",
      "title": "Longest Univalue Path",
      "titleSlug": "longest-univalue-path",
      "acRate": "41.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "688",
      "questionFrontendId": "688",
      "title": "Knight Probability in Chessboard",
      "titleSlug": "knight-probability-in-chessboard",
      "acRate": "56.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "689",
      "questionFrontendId": "689",
      "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
      "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
      "acRate": "49.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "690",
      "questionFrontendId": "690",
      "title": "Employee Importance",
      "titleSlug": "employee-importance",
      "acRate": "66.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "692",
      "questionFrontendId": "692",
      "title": "Top K Frequent Words",
      "titleSlug": "top-k-frequent-words",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "694",
      "questionFrontendId": "694",
      "title": "Number of Distinct Islands",
      "titleSlug": "number-of-distinct-islands",
      "acRate": "61.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "695",
      "questionFrontendId": "695",
      "title": "Max Area of Island",
      "titleSlug": "max-area-of-island",
      "acRate": "71.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "696",
      "questionFrontendId": "696",
      "title": "Count Binary Substrings",
      "titleSlug": "count-binary-substrings",
      "acRate": "65.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "698",
      "questionFrontendId": "698",
      "title": "Partition to K Equal Sum Subsets",
      "titleSlug": "partition-to-k-equal-sum-subsets",
      "acRate": "38.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "711",
      "questionFrontendId": "711",
      "title": "Number of Distinct Islands II",
      "titleSlug": "number-of-distinct-islands-ii",
      "acRate": "52.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "712",
      "questionFrontendId": "712",
      "title": "Minimum ASCII Delete Sum for Two Strings",
      "titleSlug": "minimum-ascii-delete-sum-for-two-strings",
      "acRate": "65.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "713",
      "questionFrontendId": "713",
      "title": "Subarray Product Less Than K",
      "titleSlug": "subarray-product-less-than-k",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "714",
      "questionFrontendId": "714",
      "title": "Best Time to Buy and Sell Stock with Transaction Fee",
      "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
      "acRate": "68.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "715",
      "questionFrontendId": "715",
      "title": "Range Module",
      "titleSlug": "range-module",
      "acRate": "44.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "716",
      "questionFrontendId": "716",
      "title": "Max Stack",
      "titleSlug": "max-stack",
      "acRate": "45.0%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "718",
      "questionFrontendId": "718",
      "title": "Maximum Length of Repeated Subarray",
      "titleSlug": "maximum-length-of-repeated-subarray",
      "acRate": "51.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "719",
      "questionFrontendId": "719",
      "title": "Find K-th Smallest Pair Distance",
      "titleSlug": "find-k-th-smallest-pair-distance",
      "acRate": "37.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "720",
      "questionFrontendId": "720",
      "title": "Longest Word in Dictionary",
      "titleSlug": "longest-word-in-dictionary",
      "acRate": "52.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "721",
      "questionFrontendId": "721",
      "title": "Accounts Merge",
      "titleSlug": "accounts-merge",
      "acRate": "57.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "724",
      "questionFrontendId": "724",
      "title": "Find Pivot Index",
      "titleSlug": "find-pivot-index",
      "acRate": "57.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "725",
      "questionFrontendId": "725",
      "title": "Split Linked List in Parts",
      "titleSlug": "split-linked-list-in-parts",
      "acRate": "64.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "726",
      "questionFrontendId": "726",
      "title": "Number of Atoms",
      "titleSlug": "number-of-atoms",
      "acRate": "52.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "729",
      "questionFrontendId": "729",
      "title": "My Calendar I",
      "titleSlug": "my-calendar-i",
      "acRate": "56.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "732",
      "questionFrontendId": "732",
      "title": "My Calendar III",
      "titleSlug": "my-calendar-iii",
      "acRate": "71.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "733",
      "questionFrontendId": "733",
      "title": "Flood Fill",
      "titleSlug": "flood-fill",
      "acRate": "63.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "735",
      "questionFrontendId": "735",
      "title": "Asteroid Collision",
      "titleSlug": "asteroid-collision",
      "acRate": "44.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "738",
      "questionFrontendId": "738",
      "title": "Monotone Increasing Digits",
      "titleSlug": "monotone-increasing-digits",
      "acRate": "47.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "739",
      "questionFrontendId": "739",
      "title": "Daily Temperatures",
      "titleSlug": "daily-temperatures",
      "acRate": "66.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "740",
      "questionFrontendId": "740",
      "title": "Delete and Earn",
      "titleSlug": "delete-and-earn",
      "acRate": "56.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "741",
      "questionFrontendId": "741",
      "title": "Cherry Pickup",
      "titleSlug": "cherry-pickup",
      "acRate": "36.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "743",
      "questionFrontendId": "742",
      "title": "Closest Leaf in a Binary Tree",
      "titleSlug": "closest-leaf-in-a-binary-tree",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "744",
      "questionFrontendId": "743",
      "title": "Network Delay Time",
      "titleSlug": "network-delay-time",
      "acRate": "53.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "745",
      "questionFrontendId": "744",
      "title": "Find Smallest Letter Greater Than Target",
      "titleSlug": "find-smallest-letter-greater-than-target",
      "acRate": "51.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "747",
      "questionFrontendId": "746",
      "title": "Min Cost Climbing Stairs",
      "titleSlug": "min-cost-climbing-stairs",
      "acRate": "65.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "753",
      "questionFrontendId": "752",
      "title": "Open the Lock",
      "titleSlug": "open-the-lock",
      "acRate": "56.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "755",
      "questionFrontendId": "754",
      "title": "Reach a Number",
      "titleSlug": "reach-a-number",
      "acRate": "43.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "758",
      "questionFrontendId": "426",
      "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
      "titleSlug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
      "acRate": "64.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "764",
      "questionFrontendId": "429",
      "title": "N-ary Tree Level Order Traversal",
      "titleSlug": "n-ary-tree-level-order-traversal",
      "acRate": "70.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "765",
      "questionFrontendId": "428",
      "title": "Serialize and Deserialize N-ary Tree",
      "titleSlug": "serialize-and-deserialize-n-ary-tree",
      "acRate": "66.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "766",
      "questionFrontendId": "430",
      "title": "Flatten a Multilevel Doubly Linked List",
      "titleSlug": "flatten-a-multilevel-doubly-linked-list",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "767",
      "questionFrontendId": "762",
      "title": "Prime Number of Set Bits in Binary Representation",
      "titleSlug": "prime-number-of-set-bits-in-binary-representation",
      "acRate": "69.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "768",
      "questionFrontendId": "763",
      "title": "Partition Labels",
      "titleSlug": "partition-labels",
      "acRate": "79.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "770",
      "questionFrontendId": "765",
      "title": "Couples Holding Hands",
      "titleSlug": "couples-holding-hands",
      "acRate": "57.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "772",
      "questionFrontendId": "427",
      "title": "Construct Quad Tree",
      "titleSlug": "construct-quad-tree",
      "acRate": "75.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "778",
      "questionFrontendId": "767",
      "title": "Reorganize String",
      "titleSlug": "reorganize-string",
      "acRate": "54.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "782",
      "questionFrontendId": "771",
      "title": "Jewels and Stones",
      "titleSlug": "jewels-and-stones",
      "acRate": "88.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "783",
      "questionFrontendId": "700",
      "title": "Search in a Binary Search Tree",
      "titleSlug": "search-in-a-binary-search-tree",
      "acRate": "79.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "784",
      "questionFrontendId": "701",
      "title": "Insert into a Binary Search Tree",
      "titleSlug": "insert-into-a-binary-search-tree",
      "acRate": "73.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "785",
      "questionFrontendId": "772",
      "title": "Basic Calculator III",
      "titleSlug": "basic-calculator-iii",
      "acRate": "50.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "787",
      "questionFrontendId": "773",
      "title": "Sliding Puzzle",
      "titleSlug": "sliding-puzzle",
      "acRate": "64.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "789",
      "questionFrontendId": "703",
      "title": "Kth Largest Element in a Stream",
      "titleSlug": "kth-largest-element-in-a-stream",
      "acRate": "56.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "790",
      "questionFrontendId": "775",
      "title": "Global and Local Inversions",
      "titleSlug": "global-and-local-inversions",
      "acRate": "42.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "791",
      "questionFrontendId": "776",
      "title": "Split BST",
      "titleSlug": "split-bst",
      "acRate": "82.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "792",
      "questionFrontendId": "704",
      "title": "Binary Search",
      "titleSlug": "binary-search",
      "acRate": "57.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "793",
      "questionFrontendId": "777",
      "title": "Swap Adjacent in LR String",
      "titleSlug": "swap-adjacent-in-lr-string",
      "acRate": "36.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "794",
      "questionFrontendId": "778",
      "title": "Swim in Rising Water",
      "titleSlug": "swim-in-rising-water",
      "acRate": "60.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "795",
      "questionFrontendId": "779",
      "title": "K-th Symbol in Grammar",
      "titleSlug": "k-th-symbol-in-grammar",
      "acRate": "46.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "797",
      "questionFrontendId": "781",
      "title": "Rabbits in Forest",
      "titleSlug": "rabbits-in-forest",
      "acRate": "53.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "800",
      "questionFrontendId": "784",
      "title": "Letter Case Permutation",
      "titleSlug": "letter-case-permutation",
      "acRate": "74.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "801",
      "questionFrontendId": "785",
      "title": "Is Graph Bipartite?",
      "titleSlug": "is-graph-bipartite",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "803",
      "questionFrontendId": "787",
      "title": "Cheapest Flights Within K Stops",
      "titleSlug": "cheapest-flights-within-k-stops",
      "acRate": "39.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "806",
      "questionFrontendId": "790",
      "title": "Domino and Tromino Tiling",
      "titleSlug": "domino-and-tromino-tiling",
      "acRate": "50.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "807",
      "questionFrontendId": "791",
      "title": "Custom Sort String",
      "titleSlug": "custom-sort-string",
      "acRate": "70.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "808",
      "questionFrontendId": "792",
      "title": "Number of Matching Subsequences",
      "titleSlug": "number-of-matching-subsequences",
      "acRate": "51.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "811",
      "questionFrontendId": "795",
      "title": "Number of Subarrays with Bounded Maximum",
      "titleSlug": "number-of-subarrays-with-bounded-maximum",
      "acRate": "53.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "812",
      "questionFrontendId": "796",
      "title": "Rotate String",
      "titleSlug": "rotate-string",
      "acRate": "57.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "813",
      "questionFrontendId": "797",
      "title": "All Paths From Source to Target",
      "titleSlug": "all-paths-from-source-to-target",
      "acRate": "82.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "815",
      "questionFrontendId": "799",
      "title": "Champagne Tower",
      "titleSlug": "champagne-tower",
      "acRate": "58.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "816",
      "questionFrontendId": "705",
      "title": "Design HashSet",
      "titleSlug": "design-hashset",
      "acRate": "66.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "817",
      "questionFrontendId": "706",
      "title": "Design HashMap",
      "titleSlug": "design-hashmap",
      "acRate": "65.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "819",
      "questionFrontendId": "801",
      "title": "Minimum Swaps To Make Sequences Increasing",
      "titleSlug": "minimum-swaps-to-make-sequences-increasing",
      "acRate": "39.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "820",
      "questionFrontendId": "802",
      "title": "Find Eventual Safe States",
      "titleSlug": "find-eventual-safe-states",
      "acRate": "62.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "822",
      "questionFrontendId": "804",
      "title": "Unique Morse Code Words",
      "titleSlug": "unique-morse-code-words",
      "acRate": "82.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "826",
      "questionFrontendId": "808",
      "title": "Soup Servings",
      "titleSlug": "soup-servings",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Probability and Statistics",
          "slug": "probability-and-statistics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "830",
      "questionFrontendId": "812",
      "title": "Largest Triangle Area",
      "titleSlug": "largest-triangle-area",
      "acRate": "60.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "832",
      "questionFrontendId": "814",
      "title": "Binary Tree Pruning",
      "titleSlug": "binary-tree-pruning",
      "acRate": "72.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "833",
      "questionFrontendId": "815",
      "title": "Bus Routes",
      "titleSlug": "bus-routes",
      "acRate": "48.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "835",
      "questionFrontendId": "817",
      "title": "Linked List Components",
      "titleSlug": "linked-list-components",
      "acRate": "56.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "836",
      "questionFrontendId": "818",
      "title": "Race Car",
      "titleSlug": "race-car",
      "acRate": "43.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "837",
      "questionFrontendId": "819",
      "title": "Most Common Word",
      "titleSlug": "most-common-word",
      "acRate": "44.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "838",
      "questionFrontendId": "707",
      "title": "Design Linked List",
      "titleSlug": "design-linked-list",
      "acRate": "28.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "841",
      "questionFrontendId": "821",
      "title": "Shortest Distance to a Character",
      "titleSlug": "shortest-distance-to-a-character",
      "acRate": "71.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "843",
      "questionFrontendId": "823",
      "title": "Binary Trees With Factors",
      "titleSlug": "binary-trees-with-factors",
      "acRate": "52.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "853",
      "questionFrontendId": "826",
      "title": "Most Profit Assigning Work",
      "titleSlug": "most-profit-assigning-work",
      "acRate": "46.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "854",
      "questionFrontendId": "827",
      "title": "Making A Large Island",
      "titleSlug": "making-a-large-island",
      "acRate": "46.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "855",
      "questionFrontendId": "828",
      "title": "Count Unique Characters of All Substrings of a Given String",
      "titleSlug": "count-unique-characters-of-all-substrings-of-a-given-string",
      "acRate": "52.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "860",
      "questionFrontendId": "622",
      "title": "Design Circular Queue",
      "titleSlug": "design-circular-queue",
      "acRate": "51.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "861",
      "questionFrontendId": "832",
      "title": "Flipping an Image",
      "titleSlug": "flipping-an-image",
      "acRate": "81.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "865",
      "questionFrontendId": "489",
      "title": "Robot Room Cleaner",
      "titleSlug": "robot-room-cleaner",
      "acRate": "76.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "866",
      "questionFrontendId": "836",
      "title": "Rectangle Overlap",
      "titleSlug": "rectangle-overlap",
      "acRate": "44.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "868",
      "questionFrontendId": "838",
      "title": "Push Dominoes",
      "titleSlug": "push-dominoes",
      "acRate": "57.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "871",
      "questionFrontendId": "841",
      "title": "Keys and Rooms",
      "titleSlug": "keys-and-rooms",
      "acRate": "72.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "872",
      "questionFrontendId": "842",
      "title": "Split Array into Fibonacci Sequence",
      "titleSlug": "split-array-into-fibonacci-sequence",
      "acRate": "39.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "874",
      "questionFrontendId": "844",
      "title": "Backspace String Compare",
      "titleSlug": "backspace-string-compare",
      "acRate": "49.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "877",
      "questionFrontendId": "847",
      "title": "Shortest Path Visiting All Nodes",
      "titleSlug": "shortest-path-visiting-all-nodes",
      "acRate": "65.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "879",
      "questionFrontendId": "849",
      "title": "Maximize Distance to Closest Person",
      "titleSlug": "maximize-distance-to-closest-person",
      "acRate": "48.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "881",
      "questionFrontendId": "851",
      "title": "Loud and Rich",
      "titleSlug": "loud-and-rich",
      "acRate": "59.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "882",
      "questionFrontendId": "852",
      "title": "Peak Index in a Mountain Array",
      "titleSlug": "peak-index-in-a-mountain-array",
      "acRate": "68.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "883",
      "questionFrontendId": "853",
      "title": "Car Fleet",
      "titleSlug": "car-fleet",
      "acRate": "50.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "886",
      "questionFrontendId": "856",
      "title": "Score of Parentheses",
      "titleSlug": "score-of-parentheses",
      "acRate": "64.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "887",
      "questionFrontendId": "857",
      "title": "Minimum Cost to Hire K Workers",
      "titleSlug": "minimum-cost-to-hire-k-workers",
      "acRate": "52.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "889",
      "questionFrontendId": "859",
      "title": "Buddy Strings",
      "titleSlug": "buddy-strings",
      "acRate": "33.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "892",
      "questionFrontendId": "862",
      "title": "Shortest Subarray with Sum at Least K",
      "titleSlug": "shortest-subarray-with-sum-at-least-k",
      "acRate": "26.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "893",
      "questionFrontendId": "863",
      "title": "All Nodes Distance K in Binary Tree",
      "titleSlug": "all-nodes-distance-k-in-binary-tree",
      "acRate": "64.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "894",
      "questionFrontendId": "710",
      "title": "Random Pick with Blacklist",
      "titleSlug": "random-pick-with-blacklist",
      "acRate": "33.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "896",
      "questionFrontendId": "865",
      "title": "Smallest Subtree with all the Deepest Nodes",
      "titleSlug": "smallest-subtree-with-all-the-deepest-nodes",
      "acRate": "70.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "898",
      "questionFrontendId": "867",
      "title": "Transpose Matrix",
      "titleSlug": "transpose-matrix",
      "acRate": "71.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "900",
      "questionFrontendId": "869",
      "title": "Reordered Power of 2",
      "titleSlug": "reordered-power-of-2",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "902",
      "questionFrontendId": "871",
      "title": "Minimum Number of Refueling Stops",
      "titleSlug": "minimum-number-of-refueling-stops",
      "acRate": "40.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "903",
      "questionFrontendId": "470",
      "title": "Implement Rand10() Using Rand7()",
      "titleSlug": "implement-rand10-using-rand7",
      "acRate": "46.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Rejection Sampling",
          "slug": "rejection-sampling"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        },
        {
          "name": "Probability and Statistics",
          "slug": "probability-and-statistics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "904",
      "questionFrontendId": "872",
      "title": "Leaf-Similar Trees",
      "titleSlug": "leaf-similar-trees",
      "acRate": "70.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "907",
      "questionFrontendId": "875",
      "title": "Koko Eating Bananas",
      "titleSlug": "koko-eating-bananas",
      "acRate": "49.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "908",
      "questionFrontendId": "876",
      "title": "Middle of the Linked List",
      "titleSlug": "middle-of-the-linked-list",
      "acRate": "78.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "909",
      "questionFrontendId": "877",
      "title": "Stone Game",
      "titleSlug": "stone-game",
      "acRate": "70.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "910",
      "questionFrontendId": "878",
      "title": "Nth Magical Number",
      "titleSlug": "nth-magical-number",
      "acRate": "35.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "911",
      "questionFrontendId": "879",
      "title": "Profitable Schemes",
      "titleSlug": "profitable-schemes",
      "acRate": "48.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "912",
      "questionFrontendId": "528",
      "title": "Random Pick with Weight",
      "titleSlug": "random-pick-with-weight",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Randomized",
          "slug": "randomized"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "916",
      "questionFrontendId": "880",
      "title": "Decoded String at Index",
      "titleSlug": "decoded-string-at-index",
      "acRate": "36.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "917",
      "questionFrontendId": "881",
      "title": "Boats to Save People",
      "titleSlug": "boats-to-save-people",
      "acRate": "56.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "922",
      "questionFrontendId": "886",
      "title": "Possible Bipartition",
      "titleSlug": "possible-bipartition",
      "acRate": "50.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "923",
      "questionFrontendId": "887",
      "title": "Super Egg Drop",
      "titleSlug": "super-egg-drop",
      "acRate": "27.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "924",
      "questionFrontendId": "888",
      "title": "Fair Candy Swap",
      "titleSlug": "fair-candy-swap",
      "acRate": "61.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "925",
      "questionFrontendId": "889",
      "title": "Construct Binary Tree from Preorder and Postorder Traversal",
      "titleSlug": "construct-binary-tree-from-preorder-and-postorder-traversal",
      "acRate": "71.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "926",
      "questionFrontendId": "890",
      "title": "Find and Replace Pattern",
      "titleSlug": "find-and-replace-pattern",
      "acRate": "76.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "930",
      "questionFrontendId": "894",
      "title": "All Possible Full Binary Trees",
      "titleSlug": "all-possible-full-binary-trees",
      "acRate": "82.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "931",
      "questionFrontendId": "895",
      "title": "Maximum Frequency Stack",
      "titleSlug": "maximum-frequency-stack",
      "acRate": "66.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "932",
      "questionFrontendId": "896",
      "title": "Monotonic Array",
      "titleSlug": "monotonic-array",
      "acRate": "61.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "933",
      "questionFrontendId": "897",
      "title": "Increasing Order Search Tree",
      "titleSlug": "increasing-order-search-tree",
      "acRate": "78.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "935",
      "questionFrontendId": "899",
      "title": "Orderly Queue",
      "titleSlug": "orderly-queue",
      "acRate": "65.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "937",
      "questionFrontendId": "901",
      "title": "Online Stock Span",
      "titleSlug": "online-stock-span",
      "acRate": "65.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "938",
      "questionFrontendId": "902",
      "title": "Numbers At Most N Given Digit Set",
      "titleSlug": "numbers-at-most-n-given-digit-set",
      "acRate": "42.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "939",
      "questionFrontendId": "903",
      "title": "Valid Permutations for DI Sequence",
      "titleSlug": "valid-permutations-for-di-sequence",
      "acRate": "57.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "940",
      "questionFrontendId": "904",
      "title": "Fruit Into Baskets",
      "titleSlug": "fruit-into-baskets",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "941",
      "questionFrontendId": "905",
      "title": "Sort Array By Parity",
      "titleSlug": "sort-array-by-parity",
      "acRate": "76.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "943",
      "questionFrontendId": "907",
      "title": "Sum of Subarray Minimums",
      "titleSlug": "sum-of-subarray-minimums",
      "acRate": "37.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "notac",
      "questionId": "945",
      "questionFrontendId": "909",
      "title": "Snakes and Ladders",
      "titleSlug": "snakes-and-ladders",
      "acRate": "43.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "946",
      "questionFrontendId": "910",
      "title": "Smallest Range II",
      "titleSlug": "smallest-range-ii",
      "acRate": "36.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "948",
      "questionFrontendId": "912",
      "title": "Sort an Array",
      "titleSlug": "sort-an-array",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Bucket Sort",
          "slug": "bucket-sort"
        },
        {
          "name": "Radix Sort",
          "slug": "radix-sort"
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "951",
      "questionFrontendId": "915",
      "title": "Partition Array into Disjoint Intervals",
      "titleSlug": "partition-array-into-disjoint-intervals",
      "acRate": "48.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "953",
      "questionFrontendId": "917",
      "title": "Reverse Only Letters",
      "titleSlug": "reverse-only-letters",
      "acRate": "64.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "954",
      "questionFrontendId": "918",
      "title": "Maximum Sum Circular Subarray",
      "titleSlug": "maximum-sum-circular-subarray",
      "acRate": "44.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "956",
      "questionFrontendId": "920",
      "title": "Number of Music Playlists",
      "titleSlug": "number-of-music-playlists",
      "acRate": "60.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "957",
      "questionFrontendId": "921",
      "title": "Minimum Add to Make Parentheses Valid",
      "titleSlug": "minimum-add-to-make-parentheses-valid",
      "acRate": "75.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "958",
      "questionFrontendId": "922",
      "title": "Sort Array By Parity II",
      "titleSlug": "sort-array-by-parity-ii",
      "acRate": "70.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "959",
      "questionFrontendId": "923",
      "title": "3Sum With Multiplicity",
      "titleSlug": "3sum-with-multiplicity",
      "acRate": "45.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "962",
      "questionFrontendId": "926",
      "title": "Flip String to Monotone Increasing",
      "titleSlug": "flip-string-to-monotone-increasing",
      "acRate": "61.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "965",
      "questionFrontendId": "929",
      "title": "Unique Email Addresses",
      "titleSlug": "unique-email-addresses",
      "acRate": "67.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "966",
      "questionFrontendId": "930",
      "title": "Binary Subarrays With Sum",
      "titleSlug": "binary-subarrays-with-sum",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "967",
      "questionFrontendId": "931",
      "title": "Minimum Falling Path Sum",
      "titleSlug": "minimum-falling-path-sum",
      "acRate": "64.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "969",
      "questionFrontendId": "933",
      "title": "Number of Recent Calls",
      "titleSlug": "number-of-recent-calls",
      "acRate": "74.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "971",
      "questionFrontendId": "934",
      "title": "Shortest Bridge",
      "titleSlug": "shortest-bridge",
      "acRate": "57.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "972",
      "questionFrontendId": "935",
      "title": "Knight Dialer",
      "titleSlug": "knight-dialer",
      "acRate": "59.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "974",
      "questionFrontendId": "937",
      "title": "Reorder Data in Log Files",
      "titleSlug": "reorder-data-in-log-files",
      "acRate": "56.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "975",
      "questionFrontendId": "938",
      "title": "Range Sum of BST",
      "titleSlug": "range-sum-of-bst",
      "acRate": "86.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "978",
      "questionFrontendId": "941",
      "title": "Valid Mountain Array",
      "titleSlug": "valid-mountain-array",
      "acRate": "33.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "983",
      "questionFrontendId": "946",
      "title": "Validate Stack Sequences",
      "titleSlug": "validate-stack-sequences",
      "acRate": "69.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "984",
      "questionFrontendId": "947",
      "title": "Most Stones Removed with Same Row or Column",
      "titleSlug": "most-stones-removed-with-same-row-or-column",
      "acRate": "58.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "986",
      "questionFrontendId": "949",
      "title": "Largest Time for Given Digits",
      "titleSlug": "largest-time-for-given-digits",
      "acRate": "35.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "988",
      "questionFrontendId": "951",
      "title": "Flip Equivalent Binary Trees",
      "titleSlug": "flip-equivalent-binary-trees",
      "acRate": "66.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "990",
      "questionFrontendId": "953",
      "title": "Verifying an Alien Dictionary",
      "titleSlug": "verifying-an-alien-dictionary",
      "acRate": "54.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "994",
      "questionFrontendId": "957",
      "title": "Prison Cells After N Days",
      "titleSlug": "prison-cells-after-n-days",
      "acRate": "39.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "998",
      "questionFrontendId": "958",
      "title": "Check Completeness of a Binary Tree",
      "titleSlug": "check-completeness-of-a-binary-tree",
      "acRate": "56.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "999",
      "questionFrontendId": "959",
      "title": "Regions Cut By Slashes",
      "titleSlug": "regions-cut-by-slashes",
      "acRate": "69.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1002",
      "questionFrontendId": "962",
      "title": "Maximum Width Ramp",
      "titleSlug": "maximum-width-ramp",
      "acRate": "49.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1007",
      "questionFrontendId": "967",
      "title": "Numbers With Same Consecutive Differences",
      "titleSlug": "numbers-with-same-consecutive-differences",
      "acRate": "57.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1008",
      "questionFrontendId": "968",
      "title": "Binary Tree Cameras",
      "titleSlug": "binary-tree-cameras",
      "acRate": "46.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1009",
      "questionFrontendId": "969",
      "title": "Pancake Sorting",
      "titleSlug": "pancake-sorting",
      "acRate": "70.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1013",
      "questionFrontendId": "509",
      "title": "Fibonacci Number",
      "titleSlug": "fibonacci-number",
      "acRate": "70.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1014",
      "questionFrontendId": "973",
      "title": "K Closest Points to Origin",
      "titleSlug": "k-closest-points-to-origin",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Quickselect",
          "slug": "quickselect"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1016",
      "questionFrontendId": "974",
      "title": "Subarray Sums Divisible by K",
      "titleSlug": "subarray-sums-divisible-by-k",
      "acRate": "54.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1018",
      "questionFrontendId": "976",
      "title": "Largest Perimeter Triangle",
      "titleSlug": "largest-perimeter-triangle",
      "acRate": "55.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1019",
      "questionFrontendId": "977",
      "title": "Squares of a Sorted Array",
      "titleSlug": "squares-of-a-sorted-array",
      "acRate": "72.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1021",
      "questionFrontendId": "979",
      "title": "Distribute Coins in Binary Tree",
      "titleSlug": "distribute-coins-in-binary-tree",
      "acRate": "72.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1023",
      "questionFrontendId": "981",
      "title": "Time Based Key-Value Store",
      "titleSlug": "time-based-key-value-store",
      "acRate": "49.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1025",
      "questionFrontendId": "983",
      "title": "Minimum Cost For Tickets",
      "titleSlug": "minimum-cost-for-tickets",
      "acRate": "65.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1028",
      "questionFrontendId": "986",
      "title": "Interval List Intersections",
      "titleSlug": "interval-list-intersections",
      "acRate": "71.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1029",
      "questionFrontendId": "987",
      "title": "Vertical Order Traversal of a Binary Tree",
      "titleSlug": "vertical-order-traversal-of-a-binary-tree",
      "acRate": "47.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1032",
      "questionFrontendId": "990",
      "title": "Satisfiability of Equality Equations",
      "titleSlug": "satisfiability-of-equality-equations",
      "acRate": "50.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1034",
      "questionFrontendId": "992",
      "title": "Subarrays with K Different Integers",
      "titleSlug": "subarrays-with-k-different-integers",
      "acRate": "56.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1035",
      "questionFrontendId": "993",
      "title": "Cousins in Binary Tree",
      "titleSlug": "cousins-in-binary-tree",
      "acRate": "55.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1036",
      "questionFrontendId": "994",
      "title": "Rotting Oranges",
      "titleSlug": "rotting-oranges",
      "acRate": "53.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1039",
      "questionFrontendId": "997",
      "title": "Find the Town Judge",
      "titleSlug": "find-the-town-judge",
      "acRate": "49.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1042",
      "questionFrontendId": "1000",
      "title": "Minimum Cost to Merge Stones",
      "titleSlug": "minimum-cost-to-merge-stones",
      "acRate": "43.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1044",
      "questionFrontendId": "1002",
      "title": "Find Common Characters",
      "titleSlug": "find-common-characters",
      "acRate": "68.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1045",
      "questionFrontendId": "1003",
      "title": "Check If Word Is Valid After Substitutions",
      "titleSlug": "check-if-word-is-valid-after-substitutions",
      "acRate": "59.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1046",
      "questionFrontendId": "1004",
      "title": "Max Consecutive Ones III",
      "titleSlug": "max-consecutive-ones-iii",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1048",
      "questionFrontendId": "1006",
      "title": "Clumsy Factorial",
      "titleSlug": "clumsy-factorial",
      "acRate": "56.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1050",
      "questionFrontendId": "1008",
      "title": "Construct Binary Search Tree from Preorder Traversal",
      "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
      "acRate": "81.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1054",
      "questionFrontendId": "1009",
      "title": "Complement of Base 10 Integer",
      "titleSlug": "complement-of-base-10-integer",
      "acRate": "60.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1055",
      "questionFrontendId": "1010",
      "title": "Pairs of Songs With Total Durations Divisible by 60",
      "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
      "acRate": "52.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1056",
      "questionFrontendId": "1011",
      "title": "Capacity To Ship Packages Within D Days",
      "titleSlug": "capacity-to-ship-packages-within-d-days",
      "acRate": "69.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1059",
      "questionFrontendId": "1060",
      "title": "Missing Element in Sorted Array",
      "titleSlug": "missing-element-in-sorted-array",
      "acRate": "56.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1060",
      "questionFrontendId": "1062",
      "title": "Longest Repeating Substring",
      "titleSlug": "longest-repeating-substring",
      "acRate": "60.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Suffix Array",
          "slug": "suffix-array"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1061",
      "questionFrontendId": "1063",
      "title": "Number of Valid Subarrays",
      "titleSlug": "number-of-valid-subarrays",
      "acRate": "78.3%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1065",
      "questionFrontendId": "1016",
      "title": "Binary String With Substrings Representing 1 To N",
      "titleSlug": "binary-string-with-substrings-representing-1-to-n",
      "acRate": "57.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1068",
      "questionFrontendId": "1067",
      "title": "Digit Count in Range",
      "titleSlug": "digit-count-in-range",
      "acRate": "46.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1072",
      "questionFrontendId": "1019",
      "title": "Next Greater Node In Linked List",
      "titleSlug": "next-greater-node-in-linked-list",
      "acRate": "60.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1073",
      "questionFrontendId": "1020",
      "title": "Number of Enclaves",
      "titleSlug": "number-of-enclaves",
      "acRate": "68.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1074",
      "questionFrontendId": "1086",
      "title": "High Five",
      "titleSlug": "high-five",
      "acRate": "74.6%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1075",
      "questionFrontendId": "1065",
      "title": "Index Pairs of a String",
      "titleSlug": "index-pairs-of-a-string",
      "acRate": "67.2%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1078",
      "questionFrontendId": "1021",
      "title": "Remove Outermost Parentheses",
      "titleSlug": "remove-outermost-parentheses",
      "acRate": "82.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1079",
      "questionFrontendId": "1022",
      "title": "Sum of Root To Leaf Binary Numbers",
      "titleSlug": "sum-of-root-to-leaf-binary-numbers",
      "acRate": "73.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1080",
      "questionFrontendId": "1023",
      "title": "Camelcase Matching",
      "titleSlug": "camelcase-matching",
      "acRate": "62.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1082",
      "questionFrontendId": "1085",
      "title": "Sum of Digits in the Minimum Number",
      "titleSlug": "sum-of-digits-in-the-minimum-number",
      "acRate": "76.5%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1083",
      "questionFrontendId": "1099",
      "title": "Two Sum Less Than K",
      "titleSlug": "two-sum-less-than-k",
      "acRate": "61.8%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1084",
      "questionFrontendId": "1100",
      "title": "Find K-Length Substrings With No Repeated Characters",
      "titleSlug": "find-k-length-substrings-with-no-repeated-characters",
      "acRate": "74.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1087",
      "questionFrontendId": "1027",
      "title": "Longest Arithmetic Subsequence",
      "titleSlug": "longest-arithmetic-subsequence",
      "acRate": "49.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1088",
      "questionFrontendId": "1118",
      "title": "Number of Days in a Month",
      "titleSlug": "number-of-days-in-a-month",
      "acRate": "58.2%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1089",
      "questionFrontendId": "1119",
      "title": "Remove Vowels from a String",
      "titleSlug": "remove-vowels-from-a-string",
      "acRate": "91.0%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1090",
      "questionFrontendId": "1134",
      "title": "Armstrong Number",
      "titleSlug": "armstrong-number",
      "acRate": "77.8%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1091",
      "questionFrontendId": "1120",
      "title": "Maximum Average Subtree",
      "titleSlug": "maximum-average-subtree",
      "acRate": "66.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1092",
      "questionFrontendId": "1026",
      "title": "Maximum Difference Between Node and Ancestor",
      "titleSlug": "maximum-difference-between-node-and-ancestor",
      "acRate": "78.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1093",
      "questionFrontendId": "1028",
      "title": "Recover a Tree From Preorder Traversal",
      "titleSlug": "recover-a-tree-from-preorder-traversal",
      "acRate": "74.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1095",
      "questionFrontendId": "1029",
      "title": "Two City Scheduling",
      "titleSlug": "two-city-scheduling",
      "acRate": "66.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1097",
      "questionFrontendId": "1032",
      "title": "Stream of Characters",
      "titleSlug": "stream-of-characters",
      "acRate": "51.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1098",
      "questionFrontendId": "1133",
      "title": "Largest Unique Number",
      "titleSlug": "largest-unique-number",
      "acRate": "68.8%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1099",
      "questionFrontendId": "1102",
      "title": "Path With Maximum Minimum Value",
      "titleSlug": "path-with-maximum-minimum-value",
      "acRate": "53.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1100",
      "questionFrontendId": "1135",
      "title": "Connecting Cities With Minimum Cost",
      "titleSlug": "connecting-cities-with-minimum-cost",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Minimum Spanning Tree",
          "slug": "minimum-spanning-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1104",
      "questionFrontendId": "1034",
      "title": "Coloring A Border",
      "titleSlug": "coloring-a-border",
      "acRate": "48.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1105",
      "questionFrontendId": "1035",
      "title": "Uncrossed Lines",
      "titleSlug": "uncrossed-lines",
      "acRate": "62.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1107",
      "questionFrontendId": "1151",
      "title": "Minimum Swaps to Group All 1's Together",
      "titleSlug": "minimum-swaps-to-group-all-1s-together",
      "acRate": "60.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1108",
      "questionFrontendId": "1152",
      "title": "Analyze User Website Visit Pattern",
      "titleSlug": "analyze-user-website-visit-pattern",
      "acRate": "42.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1111",
      "questionFrontendId": "1039",
      "title": "Minimum Score Triangulation of Polygon",
      "titleSlug": "minimum-score-triangulation-of-polygon",
      "acRate": "58.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1112",
      "questionFrontendId": "1160",
      "title": "Find Words That Can Be Formed by Characters",
      "titleSlug": "find-words-that-can-be-formed-by-characters",
      "acRate": "70.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1114",
      "questionFrontendId": "1038",
      "title": "Binary Search Tree to Greater Sum Tree",
      "titleSlug": "binary-search-tree-to-greater-sum-tree",
      "acRate": "85.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1116",
      "questionFrontendId": "1161",
      "title": "Maximum Level Sum of a Binary Tree",
      "titleSlug": "maximum-level-sum-of-a-binary-tree",
      "acRate": "67.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1117",
      "questionFrontendId": "1162",
      "title": "As Far from Land as Possible",
      "titleSlug": "as-far-from-land-as-possible",
      "acRate": "51.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1119",
      "questionFrontendId": "1041",
      "title": "Robot Bounded In Circle",
      "titleSlug": "robot-bounded-in-circle",
      "acRate": "55.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1120",
      "questionFrontendId": "1042",
      "title": "Flower Planting With No Adjacent",
      "titleSlug": "flower-planting-with-no-adjacent",
      "acRate": "51.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1121",
      "questionFrontendId": "1043",
      "title": "Partition Array for Maximum Sum",
      "titleSlug": "partition-array-for-maximum-sum",
      "acRate": "76.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1122",
      "questionFrontendId": "1044",
      "title": "Longest Duplicate Substring",
      "titleSlug": "longest-duplicate-substring",
      "acRate": "30.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Suffix Array",
          "slug": "suffix-array"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1125",
      "questionFrontendId": "1166",
      "title": "Design File System",
      "titleSlug": "design-file-system",
      "acRate": "62.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1126",
      "questionFrontendId": "1167",
      "title": "Minimum Cost to Connect Sticks",
      "titleSlug": "minimum-cost-to-connect-sticks",
      "acRate": "69.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1127",
      "questionFrontendId": "1046",
      "title": "Last Stone Weight",
      "titleSlug": "last-stone-weight",
      "acRate": "65.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1128",
      "questionFrontendId": "1047",
      "title": "Remove All Adjacent Duplicates In String",
      "titleSlug": "remove-all-adjacent-duplicates-in-string",
      "acRate": "69.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1129",
      "questionFrontendId": "1048",
      "title": "Longest String Chain",
      "titleSlug": "longest-string-chain",
      "acRate": "61.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1135",
      "questionFrontendId": "1045",
      "title": "Customers Who Bought All Products",
      "titleSlug": "customers-who-bought-all-products",
      "acRate": "61.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1136",
      "questionFrontendId": "1050",
      "title": "Actors and Directors Who Cooperated At Least Three Times",
      "titleSlug": "actors-and-directors-who-cooperated-at-least-three-times",
      "acRate": "69.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1140",
      "questionFrontendId": "1054",
      "title": "Distant Barcodes",
      "titleSlug": "distant-barcodes",
      "acRate": "46.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1142",
      "questionFrontendId": "1197",
      "title": "Minimum Knight Moves",
      "titleSlug": "minimum-knight-moves",
      "acRate": "40.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1145",
      "questionFrontendId": "1074",
      "title": "Number of Submatrices That Sum to Target",
      "titleSlug": "number-of-submatrices-that-sum-to-target",
      "acRate": "74.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1146",
      "questionFrontendId": "1071",
      "title": "Greatest Common Divisor of Strings",
      "titleSlug": "greatest-common-divisor-of-strings",
      "acRate": "51.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1150",
      "questionFrontendId": "1214",
      "title": "Two Sum BSTs",
      "titleSlug": "two-sum-bsts",
      "acRate": "67.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1153",
      "questionFrontendId": "1068",
      "title": "Product Sales Analysis I",
      "titleSlug": "product-sales-analysis-i",
      "acRate": "81.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1154",
      "questionFrontendId": "1069",
      "title": "Product Sales Analysis II",
      "titleSlug": "product-sales-analysis-ii",
      "acRate": "81.8%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1155",
      "questionFrontendId": "1070",
      "title": "Product Sales Analysis III",
      "titleSlug": "product-sales-analysis-iii",
      "acRate": "42.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1157",
      "questionFrontendId": "1080",
      "title": "Insufficient Nodes in Root to Leaf Paths",
      "titleSlug": "insufficient-nodes-in-root-to-leaf-paths",
      "acRate": "55.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1159",
      "questionFrontendId": "1081",
      "title": "Smallest Subsequence of Distinct Characters",
      "titleSlug": "smallest-subsequence-of-distinct-characters",
      "acRate": "60.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1161",
      "questionFrontendId": "1075",
      "title": "Project Employees I",
      "titleSlug": "project-employees-i",
      "acRate": "61.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1165",
      "questionFrontendId": "1229",
      "title": "Meeting Scheduler",
      "titleSlug": "meeting-scheduler",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1168",
      "questionFrontendId": "1089",
      "title": "Duplicate Zeros",
      "titleSlug": "duplicate-zeros",
      "acRate": "51.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1170",
      "questionFrontendId": "1092",
      "title": "Shortest Common Supersequence ",
      "titleSlug": "shortest-common-supersequence",
      "acRate": "59.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1171",
      "questionFrontendId": "1091",
      "title": "Shortest Path in Binary Matrix",
      "titleSlug": "shortest-path-in-binary-matrix",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1172",
      "questionFrontendId": "1082",
      "title": "Sales Analysis I",
      "titleSlug": "sales-analysis-i",
      "acRate": "74.2%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1173",
      "questionFrontendId": "1083",
      "title": "Sales Analysis II",
      "titleSlug": "sales-analysis-ii",
      "acRate": "49.6%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1174",
      "questionFrontendId": "1084",
      "title": "Sales Analysis III",
      "titleSlug": "sales-analysis-iii",
      "acRate": "46.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1176",
      "questionFrontendId": "1244",
      "title": "Design A Leaderboard",
      "titleSlug": "design-a-leaderboard",
      "acRate": "68.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1178",
      "questionFrontendId": "1216",
      "title": "Valid Palindrome III",
      "titleSlug": "valid-palindrome-iii",
      "acRate": "49.8%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1179",
      "questionFrontendId": "511",
      "title": "Game Play Analysis I",
      "titleSlug": "game-play-analysis-i",
      "acRate": "74.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1184",
      "questionFrontendId": "1094",
      "title": "Car Pooling",
      "titleSlug": "car-pooling",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1185",
      "questionFrontendId": "1095",
      "title": "Find in Mountain Array",
      "titleSlug": "find-in-mountain-array",
      "acRate": "40.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1191",
      "questionFrontendId": "1258",
      "title": "Synonymous Sentences",
      "titleSlug": "synonymous-sentences",
      "acRate": "56.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1196",
      "questionFrontendId": "1105",
      "title": "Filling Bookcase Shelves",
      "titleSlug": "filling-bookcase-shelves",
      "acRate": "59.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1205",
      "questionFrontendId": "1108",
      "title": "Defanging an IP Address",
      "titleSlug": "defanging-an-ip-address",
      "acRate": "89.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1206",
      "questionFrontendId": "1109",
      "title": "Corporate Flight Bookings",
      "titleSlug": "corporate-flight-bookings",
      "acRate": "61.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1207",
      "questionFrontendId": "1110",
      "title": "Delete Nodes And Return Forest",
      "titleSlug": "delete-nodes-and-return-forest",
      "acRate": "69.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1212",
      "questionFrontendId": "1291",
      "title": "Sequential Digits",
      "titleSlug": "sequential-digits",
      "acRate": "65.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1213",
      "questionFrontendId": "1259",
      "title": "Handshakes That Don't Cross",
      "titleSlug": "handshakes-that-dont-cross",
      "acRate": "60.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1217",
      "questionFrontendId": "1122",
      "title": "Relative Sort Array",
      "titleSlug": "relative-sort-array",
      "acRate": "69.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting Sort",
          "slug": "counting-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1218",
      "questionFrontendId": "1123",
      "title": "Lowest Common Ancestor of Deepest Leaves",
      "titleSlug": "lowest-common-ancestor-of-deepest-leaves",
      "acRate": "72.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1220",
      "questionFrontendId": "1125",
      "title": "Smallest Sufficient Team",
      "titleSlug": "smallest-sufficient-team",
      "acRate": "56.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1221",
      "questionFrontendId": "1287",
      "title": "Element Appearing More Than 25% In Sorted Array",
      "titleSlug": "element-appearing-more-than-25-in-sorted-array",
      "acRate": "61.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1222",
      "questionFrontendId": "1288",
      "title": "Remove Covered Intervals",
      "titleSlug": "remove-covered-intervals",
      "acRate": "56.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1227",
      "questionFrontendId": "1128",
      "title": "Number of Equivalent Domino Pairs",
      "titleSlug": "number-of-equivalent-domino-pairs",
      "acRate": "48.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1228",
      "questionFrontendId": "1130",
      "title": "Minimum Cost Tree From Leaf Values",
      "titleSlug": "minimum-cost-tree-from-leaf-values",
      "acRate": "67.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1229",
      "questionFrontendId": "1129",
      "title": "Shortest Path with Alternating Colors",
      "titleSlug": "shortest-path-with-alternating-colors",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1231",
      "questionFrontendId": "1299",
      "title": "Replace Elements with Greatest Element on Right Side",
      "titleSlug": "replace-elements-with-greatest-element-on-right-side",
      "acRate": "71.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1241",
      "questionFrontendId": "1313",
      "title": "Decompress Run-Length Encoded List",
      "titleSlug": "decompress-run-length-encoded-list",
      "acRate": "85.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1243",
      "questionFrontendId": "1315",
      "title": "Sum of Nodes with Even-Valued Grandparent",
      "titleSlug": "sum-of-nodes-with-even-valued-grandparent",
      "acRate": "85.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1249",
      "questionFrontendId": "1146",
      "title": "Snapshot Array",
      "titleSlug": "snapshot-array",
      "acRate": "37.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1250",
      "questionFrontendId": "1143",
      "title": "Longest Common Subsequence",
      "titleSlug": "longest-common-subsequence",
      "acRate": "57.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1253",
      "questionFrontendId": "1329",
      "title": "Sort the Matrix Diagonally",
      "titleSlug": "sort-the-matrix-diagonally",
      "acRate": "82.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1254",
      "questionFrontendId": "1302",
      "title": "Deepest Leaves Sum",
      "titleSlug": "deepest-leaves-sum",
      "acRate": "86.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1258",
      "questionFrontendId": "1148",
      "title": "Article Views I",
      "titleSlug": "article-views-i",
      "acRate": "74.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1261",
      "questionFrontendId": "1156",
      "title": "Swap For Longest Repeated Character Substring",
      "titleSlug": "swap-for-longest-repeated-character-substring",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1263",
      "questionFrontendId": "1155",
      "title": "Number of Dice Rolls With Target Sum",
      "titleSlug": "number-of-dice-rolls-with-target-sum",
      "acRate": "60.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1267",
      "questionFrontendId": "1171",
      "title": "Remove Zero Sum Consecutive Nodes from Linked List",
      "titleSlug": "remove-zero-sum-consecutive-nodes-from-linked-list",
      "acRate": "52.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1272",
      "questionFrontendId": "1169",
      "title": "Invalid Transactions",
      "titleSlug": "invalid-transactions",
      "acRate": "31.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1274",
      "questionFrontendId": "1360",
      "title": "Number of Days Between Two Dates",
      "titleSlug": "number-of-days-between-two-dates",
      "acRate": "49.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1275",
      "questionFrontendId": "1361",
      "title": "Validate Binary Tree Nodes",
      "titleSlug": "validate-binary-tree-nodes",
      "acRate": "44.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1276",
      "questionFrontendId": "1362",
      "title": "Closest Divisors",
      "titleSlug": "closest-divisors",
      "acRate": "60.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1277",
      "questionFrontendId": "1363",
      "title": "Largest Multiple of Three",
      "titleSlug": "largest-multiple-of-three",
      "acRate": "32.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1278",
      "questionFrontendId": "1164",
      "title": "Product Price at a Given Date",
      "titleSlug": "product-price-at-a-given-date",
      "acRate": "55.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1279",
      "questionFrontendId": "1175",
      "title": "Prime Arrangements",
      "titleSlug": "prime-arrangements",
      "acRate": "56.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1280",
      "questionFrontendId": "1176",
      "title": "Diet Plan Performance",
      "titleSlug": "diet-plan-performance",
      "acRate": "53.3%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1285",
      "questionFrontendId": "1382",
      "title": "Balance a Binary Search Tree",
      "titleSlug": "balance-a-binary-search-tree",
      "acRate": "81.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1286",
      "questionFrontendId": "1425",
      "title": "Constrained Subsequence Sum",
      "titleSlug": "constrained-subsequence-sum",
      "acRate": "56.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1288",
      "questionFrontendId": "1186",
      "title": "Maximum Subarray Sum with One Deletion",
      "titleSlug": "maximum-subarray-sum-with-one-deletion",
      "acRate": "43.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1295",
      "questionFrontendId": "1954",
      "title": "Minimum Garden Perimeter to Collect Enough Apples",
      "titleSlug": "minimum-garden-perimeter-to-collect-enough-apples",
      "acRate": "53.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1296",
      "questionFrontendId": "1483",
      "title": "Kth Ancestor of a Tree Node",
      "titleSlug": "kth-ancestor-of-a-tree-node",
      "acRate": "34.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1298",
      "questionFrontendId": "1190",
      "title": "Reverse Substrings Between Each Pair of Parentheses",
      "titleSlug": "reverse-substrings-between-each-pair-of-parentheses",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1299",
      "questionFrontendId": "1191",
      "title": "K-Concatenation Maximum Sum",
      "titleSlug": "k-concatenation-maximum-sum",
      "acRate": "23.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1300",
      "questionFrontendId": "1192",
      "title": "Critical Connections in a Network",
      "titleSlug": "critical-connections-in-a-network",
      "acRate": "55.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Biconnected Component",
          "slug": "biconnected-component"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1301",
      "questionFrontendId": "1179",
      "title": "Reformat Department Table",
      "titleSlug": "reformat-department-table",
      "acRate": "77.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1303",
      "questionFrontendId": "2139",
      "title": "Minimum Moves to Reach Target Score",
      "titleSlug": "minimum-moves-to-reach-target-score",
      "acRate": "50.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1304",
      "questionFrontendId": "1405",
      "title": "Longest Happy String",
      "titleSlug": "longest-happy-string",
      "acRate": "57.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1305",
      "questionFrontendId": "1944",
      "title": "Number of Visible People in a Queue",
      "titleSlug": "number-of-visible-people-in-a-queue",
      "acRate": "69.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1306",
      "questionFrontendId": "1200",
      "title": "Minimum Absolute Difference",
      "titleSlug": "minimum-absolute-difference",
      "acRate": "69.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1308",
      "questionFrontendId": "1202",
      "title": "Smallest String With Swaps",
      "titleSlug": "smallest-string-with-swaps",
      "acRate": "58.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1309",
      "questionFrontendId": "1203",
      "title": "Sort Items by Groups Respecting Dependencies",
      "titleSlug": "sort-items-by-groups-respecting-dependencies",
      "acRate": "66.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1316",
      "questionFrontendId": "1195",
      "title": "Fizz Buzz Multithreaded",
      "titleSlug": "fizz-buzz-multithreaded",
      "acRate": "72.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Concurrency",
          "slug": "concurrency"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1319",
      "questionFrontendId": "1207",
      "title": "Unique Number of Occurrences",
      "titleSlug": "unique-number-of-occurrences",
      "acRate": "77.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1320",
      "questionFrontendId": "1209",
      "title": "Remove All Adjacent Duplicates in String II",
      "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
      "acRate": "57.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1324",
      "questionFrontendId": "1706",
      "title": "Where Will the Ball Fall",
      "titleSlug": "where-will-the-ball-fall",
      "acRate": "71.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1327",
      "questionFrontendId": "1204",
      "title": "Last Person to Fit in the Bus",
      "titleSlug": "last-person-to-fit-in-the-bus",
      "acRate": "66.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1330",
      "questionFrontendId": "1218",
      "title": "Longest Arithmetic Subsequence of Given Difference",
      "titleSlug": "longest-arithmetic-subsequence-of-given-difference",
      "acRate": "54.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1331",
      "questionFrontendId": "1219",
      "title": "Path with Maximum Gold",
      "titleSlug": "path-with-maximum-gold",
      "acRate": "63.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1332",
      "questionFrontendId": "1220",
      "title": "Count Vowels Permutation",
      "titleSlug": "count-vowels-permutation",
      "acRate": "62.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1338",
      "questionFrontendId": "1211",
      "title": "Queries Quality and Percentage",
      "titleSlug": "queries-quality-and-percentage",
      "acRate": "50.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1349",
      "questionFrontendId": "1232",
      "title": "Check If It Is a Straight Line",
      "titleSlug": "check-if-it-is-a-straight-line",
      "acRate": "39.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1350",
      "questionFrontendId": "1233",
      "title": "Remove Sub-Folders from the Filesystem",
      "titleSlug": "remove-sub-folders-from-the-filesystem",
      "acRate": "65.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1351",
      "questionFrontendId": "1234",
      "title": "Replace the Substring for Balanced String",
      "titleSlug": "replace-the-substring-for-balanced-string",
      "acRate": "38.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1352",
      "questionFrontendId": "1235",
      "title": "Maximum Profit in Job Scheduling",
      "titleSlug": "maximum-profit-in-job-scheduling",
      "acRate": "54.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1353",
      "questionFrontendId": "2273",
      "title": "Find Resultant Array After Removing Anagrams",
      "titleSlug": "find-resultant-array-after-removing-anagrams",
      "acRate": "58.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1354",
      "questionFrontendId": "2225",
      "title": "Find Players With Zero or One Losses",
      "titleSlug": "find-players-with-zero-or-one-losses",
      "acRate": "73.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1355",
      "questionFrontendId": "2216",
      "title": "Minimum Deletions to Make Array Beautiful",
      "titleSlug": "minimum-deletions-to-make-array-beautiful",
      "acRate": "48.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1356",
      "questionFrontendId": "2193",
      "title": "Minimum Number of Moves to Make Palindrome",
      "titleSlug": "minimum-number-of-moves-to-make-palindrome",
      "acRate": "51.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1360",
      "questionFrontendId": "1239",
      "title": "Maximum Length of a Concatenated String with Unique Characters",
      "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
      "acRate": "54.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1364",
      "questionFrontendId": "1726",
      "title": "Tuple with Same Product",
      "titleSlug": "tuple-with-same-product",
      "acRate": "61.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1366",
      "questionFrontendId": "1429",
      "title": "First Unique Number",
      "titleSlug": "first-unique-number",
      "acRate": "53.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1370",
      "questionFrontendId": "1248",
      "title": "Count Number of Nice Subarrays",
      "titleSlug": "count-number-of-nice-subarrays",
      "acRate": "64.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1371",
      "questionFrontendId": "1249",
      "title": "Minimum Remove to Make Valid Parentheses",
      "titleSlug": "minimum-remove-to-make-valid-parentheses",
      "acRate": "67.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1374",
      "questionFrontendId": "1428",
      "title": "Leftmost Column with at Least a One",
      "titleSlug": "leftmost-column-with-at-least-a-one",
      "acRate": "54.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1380",
      "questionFrontendId": "1254",
      "title": "Number of Closed Islands",
      "titleSlug": "number-of-closed-islands",
      "acRate": "66.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1381",
      "questionFrontendId": "1255",
      "title": "Maximum Score Words Formed by Letters",
      "titleSlug": "maximum-score-words-formed-by-letters",
      "acRate": "72.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1386",
      "questionFrontendId": "1260",
      "title": "Shift 2D Grid",
      "titleSlug": "shift-2d-grid",
      "acRate": "67.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1390",
      "questionFrontendId": "1251",
      "title": "Average Selling Price",
      "titleSlug": "average-selling-price",
      "acRate": "42.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1392",
      "questionFrontendId": "2215",
      "title": "Find the Difference of Two Arrays",
      "titleSlug": "find-the-difference-of-two-arrays",
      "acRate": "78.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1393",
      "questionFrontendId": "2218",
      "title": "Maximum Value of K Coins From Piles",
      "titleSlug": "maximum-value-of-k-coins-from-piles",
      "acRate": "60.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1397",
      "questionFrontendId": "1268",
      "title": "Search Suggestions System",
      "titleSlug": "search-suggestions-system",
      "acRate": "65.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1400",
      "questionFrontendId": "1275",
      "title": "Find Winner on a Tic Tac Toe Game",
      "titleSlug": "find-winner-on-a-tic-tac-toe-game",
      "acRate": "53.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1402",
      "questionFrontendId": "1277",
      "title": "Count Square Submatrices with All Ones",
      "titleSlug": "count-square-submatrices-with-all-ones",
      "acRate": "75.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1407",
      "questionFrontendId": "1282",
      "title": "Group the People Given the Group Size They Belong To",
      "titleSlug": "group-the-people-given-the-group-size-they-belong-to",
      "acRate": "87.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1410",
      "questionFrontendId": "1279",
      "title": "Traffic Light Controlled Intersection",
      "titleSlug": "traffic-light-controlled-intersection",
      "acRate": "73.2%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Concurrency",
          "slug": "concurrency"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1411",
      "questionFrontendId": "1290",
      "title": "Convert Binary Number in a Linked List to Integer",
      "titleSlug": "convert-binary-number-in-a-linked-list-to-integer",
      "acRate": "81.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1414",
      "questionFrontendId": "1293",
      "title": "Shortest Path in a Grid with Obstacles Elimination",
      "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
      "acRate": "45.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1415",
      "questionFrontendId": "1280",
      "title": "Students and Examinations",
      "titleSlug": "students-and-examinations",
      "acRate": "56.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1418",
      "questionFrontendId": "2305",
      "title": "Fair Distribution of Cookies",
      "titleSlug": "fair-distribution-of-cookies",
      "acRate": "69.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1421",
      "questionFrontendId": "1295",
      "title": "Find Numbers with Even Number of Digits",
      "titleSlug": "find-numbers-with-even-number-of-digits",
      "acRate": "77.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1423",
      "questionFrontendId": "1297",
      "title": "Maximum Number of Occurrences of a Substring",
      "titleSlug": "maximum-number-of-occurrences-of-a-substring",
      "acRate": "51.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1426",
      "questionFrontendId": "1304",
      "title": "Find N Unique Integers Sum up to Zero",
      "titleSlug": "find-n-unique-integers-sum-up-to-zero",
      "acRate": "76.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1427",
      "questionFrontendId": "1305",
      "title": "All Elements in Two Binary Search Trees",
      "titleSlug": "all-elements-in-two-binary-search-trees",
      "acRate": "79.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1428",
      "questionFrontendId": "1306",
      "title": "Jump Game III",
      "titleSlug": "jump-game-iii",
      "acRate": "64.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1436",
      "questionFrontendId": "1311",
      "title": "Get Watched Videos by Your Friends",
      "titleSlug": "get-watched-videos-by-your-friends",
      "acRate": "46.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1437",
      "questionFrontendId": "1312",
      "title": "Minimum Insertion Steps to Make a String Palindrome",
      "titleSlug": "minimum-insertion-steps-to-make-a-string-palindrome",
      "acRate": "70.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1438",
      "questionFrontendId": "1303",
      "title": "Find the Team Size",
      "titleSlug": "find-the-team-size",
      "acRate": "89.5%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1446",
      "questionFrontendId": "1344",
      "title": "Angle Between Hands of a Clock",
      "titleSlug": "angle-between-hands-of-a-clock",
      "acRate": "63.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1447",
      "questionFrontendId": "1345",
      "title": "Jump Game IV",
      "titleSlug": "jump-game-iv",
      "acRate": "46.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1450",
      "questionFrontendId": "1325",
      "title": "Delete Leaves With a Given Value",
      "titleSlug": "delete-leaves-with-a-given-value",
      "acRate": "74.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1451",
      "questionFrontendId": "1326",
      "title": "Minimum Number of Taps to Open to Water a Garden",
      "titleSlug": "minimum-number-of-taps-to-open-to-water-a-garden",
      "acRate": "51.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1454",
      "questionFrontendId": "1332",
      "title": "Remove Palindromic Subsequences",
      "titleSlug": "remove-palindromic-subsequences",
      "acRate": "76.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1456",
      "questionFrontendId": "1334",
      "title": "Find the City With the Smallest Number of Neighbors at a Threshold Distance",
      "titleSlug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
      "acRate": "59.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1457",
      "questionFrontendId": "1335",
      "title": "Minimum Difficulty of a Job Schedule",
      "titleSlug": "minimum-difficulty-of-a-job-schedule",
      "acRate": "59.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1460",
      "questionFrontendId": "1358",
      "title": "Number of Substrings Containing All Three Characters",
      "titleSlug": "number-of-substrings-containing-all-three-characters",
      "acRate": "66.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1461",
      "questionFrontendId": "1359",
      "title": "Count All Valid Pickup and Delivery Options",
      "titleSlug": "count-all-valid-pickup-and-delivery-options",
      "acRate": "65.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1462",
      "questionFrontendId": "1327",
      "title": "List the Products Ordered in a Period",
      "titleSlug": "list-the-products-ordered-in-a-period",
      "acRate": "70.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1463",
      "questionFrontendId": "1337",
      "title": "The K Weakest Rows in a Matrix",
      "titleSlug": "the-k-weakest-rows-in-a-matrix",
      "acRate": "73.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1464",
      "questionFrontendId": "1338",
      "title": "Reduce Array Size to The Half",
      "titleSlug": "reduce-array-size-to-the-half",
      "acRate": "69.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1465",
      "questionFrontendId": "1339",
      "title": "Maximum Product of Splitted Binary Tree",
      "titleSlug": "maximum-product-of-splitted-binary-tree",
      "acRate": "47.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1466",
      "questionFrontendId": "1340",
      "title": "Jump Game V",
      "titleSlug": "jump-game-v",
      "acRate": "63.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1468",
      "questionFrontendId": "1346",
      "title": "Check If N and Its Double Exist",
      "titleSlug": "check-if-n-and-its-double-exist",
      "acRate": "37.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1469",
      "questionFrontendId": "1347",
      "title": "Minimum Number of Steps to Make Two Strings Anagram",
      "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
      "acRate": "82.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1474",
      "questionFrontendId": "1372",
      "title": "Longest ZigZag Path in a Binary Tree",
      "titleSlug": "longest-zigzag-path-in-a-binary-tree",
      "acRate": "65.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1475",
      "questionFrontendId": "1373",
      "title": "Maximum Sum BST in Binary Tree",
      "titleSlug": "maximum-sum-bst-in-binary-tree",
      "acRate": "40.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1476",
      "questionFrontendId": "1351",
      "title": "Count Negative Numbers in a Sorted Matrix",
      "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
      "acRate": "77.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1477",
      "questionFrontendId": "1352",
      "title": "Product of the Last K Numbers",
      "titleSlug": "product-of-the-last-k-numbers",
      "acRate": "51.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1478",
      "questionFrontendId": "1353",
      "title": "Maximum Number of Events That Can Be Attended",
      "titleSlug": "maximum-number-of-events-that-can-be-attended",
      "acRate": "32.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1479",
      "questionFrontendId": "1354",
      "title": "Construct Target Array With Multiple Sums",
      "titleSlug": "construct-target-array-with-multiple-sums",
      "acRate": "36.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1481",
      "questionFrontendId": "1350",
      "title": "Students With Invalid Departments",
      "titleSlug": "students-with-invalid-departments",
      "acRate": "89.6%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1482",
      "questionFrontendId": "1365",
      "title": "How Many Numbers Are Smaller Than the Current Number",
      "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
      "acRate": "86.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1484",
      "questionFrontendId": "1367",
      "title": "Linked List in Binary Tree",
      "titleSlug": "linked-list-in-binary-tree",
      "acRate": "43.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1486",
      "questionFrontendId": "1385",
      "title": "Find the Distance Value Between Two Arrays",
      "titleSlug": "find-the-distance-value-between-two-arrays",
      "acRate": "68.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1492",
      "questionFrontendId": "1376",
      "title": "Time Needed to Inform All Employees",
      "titleSlug": "time-needed-to-inform-all-employees",
      "acRate": "60.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1498",
      "questionFrontendId": "1379",
      "title": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
      "titleSlug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
      "acRate": "85.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1499",
      "questionFrontendId": "1383",
      "title": "Maximum Performance of a Team",
      "titleSlug": "maximum-performance-of-a-team",
      "acRate": "47.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1508",
      "questionFrontendId": "1392",
      "title": "Longest Happy Prefix",
      "titleSlug": "longest-happy-prefix",
      "acRate": "45.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1509",
      "questionFrontendId": "1378",
      "title": "Replace Employee ID With The Unique Identifier",
      "titleSlug": "replace-employee-id-with-the-unique-identifier",
      "acRate": "82.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1511",
      "questionFrontendId": "1395",
      "title": "Count Number of Teams",
      "titleSlug": "count-number-of-teams",
      "acRate": "66.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1512",
      "questionFrontendId": "1396",
      "title": "Design Underground System",
      "titleSlug": "design-underground-system",
      "acRate": "74.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1514",
      "questionFrontendId": "1413",
      "title": "Minimum Value to Get Positive Step by Step Sum",
      "titleSlug": "minimum-value-to-get-positive-step-by-step-sum",
      "acRate": "65.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1515",
      "questionFrontendId": "1414",
      "title": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
      "titleSlug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
      "acRate": "65.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1520",
      "questionFrontendId": "1404",
      "title": "Number of Steps to Reduce a Number in Binary Representation to One",
      "titleSlug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
      "acRate": "52.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1523",
      "questionFrontendId": "1393",
      "title": "Capital Gain/Loss",
      "titleSlug": "capital-gainloss",
      "acRate": "85.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1524",
      "questionFrontendId": "1408",
      "title": "String Matching in an Array",
      "titleSlug": "string-matching-in-an-array",
      "acRate": "63.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1525",
      "questionFrontendId": "1409",
      "title": "Queries on a Permutation With Key",
      "titleSlug": "queries-on-a-permutation-with-key",
      "acRate": "84.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1528",
      "questionFrontendId": "1431",
      "title": "Kids With the Greatest Number of Candies",
      "titleSlug": "kids-with-the-greatest-number-of-candies",
      "acRate": "87.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1534",
      "questionFrontendId": "1419",
      "title": "Minimum Number of Frogs Croaking",
      "titleSlug": "minimum-number-of-frogs-croaking",
      "acRate": "50.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1535",
      "questionFrontendId": "1420",
      "title": "Build Array Where You Can Find The Maximum Exactly K Comparisons",
      "titleSlug": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons",
      "acRate": "68.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1538",
      "questionFrontendId": "1423",
      "title": "Maximum Points You Can Obtain from Cards",
      "titleSlug": "maximum-points-you-can-obtain-from-cards",
      "acRate": "52.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1544",
      "questionFrontendId": "1448",
      "title": "Count Good Nodes in Binary Tree",
      "titleSlug": "count-good-nodes-in-binary-tree",
      "acRate": "73.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1547",
      "questionFrontendId": "1436",
      "title": "Destination City",
      "titleSlug": "destination-city",
      "acRate": "79.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1549",
      "questionFrontendId": "1438",
      "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
      "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
      "acRate": "49.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1551",
      "questionFrontendId": "1421",
      "title": "NPV Queries",
      "titleSlug": "npv-queries",
      "acRate": "82.6%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1557",
      "questionFrontendId": "1461",
      "title": "Check If a String Contains All Binary Codes of Size K",
      "titleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k",
      "acRate": "56.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1559",
      "questionFrontendId": "1463",
      "title": "Cherry Pickup II",
      "titleSlug": "cherry-pickup-ii",
      "acRate": "71.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1567",
      "questionFrontendId": "1456",
      "title": "Maximum Number of Vowels in a Substring of Given Length",
      "titleSlug": "maximum-number-of-vowels-in-a-substring-of-given-length",
      "acRate": "58.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1568",
      "questionFrontendId": "1457",
      "title": "Pseudo-Palindromic Paths in a Binary Tree",
      "titleSlug": "pseudo-palindromic-paths-in-a-binary-tree",
      "acRate": "68.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1574",
      "questionFrontendId": "1464",
      "title": "Maximum Product of Two Elements in an Array",
      "titleSlug": "maximum-product-of-two-elements-in-an-array",
      "acRate": "82.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1575",
      "questionFrontendId": "1465",
      "title": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
      "titleSlug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
      "acRate": "41.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1579",
      "questionFrontendId": "1454",
      "title": "Active Users",
      "titleSlug": "active-users",
      "acRate": "36.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1580",
      "questionFrontendId": "1470",
      "title": "Shuffle the Array",
      "titleSlug": "shuffle-the-array",
      "acRate": "88.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1582",
      "questionFrontendId": "1472",
      "title": "Design Browser History",
      "titleSlug": "design-browser-history",
      "acRate": "77.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1584",
      "questionFrontendId": "1491",
      "title": "Average Salary Excluding the Minimum and Maximum Salary",
      "titleSlug": "average-salary-excluding-the-minimum-and-maximum-salary",
      "acRate": "63.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1585",
      "questionFrontendId": "1492",
      "title": "The kth Factor of n",
      "titleSlug": "the-kth-factor-of-n",
      "acRate": "67.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1586",
      "questionFrontendId": "1493",
      "title": "Longest Subarray of 1's After Deleting One Element",
      "titleSlug": "longest-subarray-of-1s-after-deleting-one-element",
      "acRate": "67.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1603",
      "questionFrontendId": "1480",
      "title": "Running Sum of 1d Array",
      "titleSlug": "running-sum-of-1d-array",
      "acRate": "86.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1604",
      "questionFrontendId": "1481",
      "title": "Least Number of Unique Integers after K Removals",
      "titleSlug": "least-number-of-unique-integers-after-k-removals",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1605",
      "questionFrontendId": "1482",
      "title": "Minimum Number of Days to Make m Bouquets",
      "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
      "acRate": "51.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1612",
      "questionFrontendId": "1488",
      "title": "Avoid Flood in The City",
      "titleSlug": "avoid-flood-in-the-city",
      "acRate": "27.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1613",
      "questionFrontendId": "1489",
      "title": "Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree",
      "titleSlug": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
      "acRate": "68.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Minimum Spanning Tree",
          "slug": "minimum-spanning-tree"
        },
        {
          "name": "Strongly Connected Component",
          "slug": "strongly-connected-component"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1616",
      "questionFrontendId": "1509",
      "title": "Minimum Difference Between Largest and Smallest Value in Three Moves",
      "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
      "acRate": "55.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1619",
      "questionFrontendId": "1496",
      "title": "Path Crossing",
      "titleSlug": "path-crossing",
      "acRate": "62.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1620",
      "questionFrontendId": "1497",
      "title": "Check If Array Pairs Are Divisible by k",
      "titleSlug": "check-if-array-pairs-are-divisible-by-k",
      "acRate": "38.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1621",
      "questionFrontendId": "1498",
      "title": "Number of Subsequences That Satisfy the Given Sum Condition",
      "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
      "acRate": "43.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1623",
      "questionFrontendId": "1479",
      "title": "Sales by Day of the Week",
      "titleSlug": "sales-by-day-of-the-week",
      "acRate": "78.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1624",
      "questionFrontendId": "1485",
      "title": "Clone Binary Tree With Random Pointer",
      "titleSlug": "clone-binary-tree-with-random-pointer",
      "acRate": "80.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1626",
      "questionFrontendId": "1502",
      "title": "Can Make Arithmetic Progression From Sequence",
      "titleSlug": "can-make-arithmetic-progression-from-sequence",
      "acRate": "69.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1630",
      "questionFrontendId": "1523",
      "title": "Count Odd Numbers in an Interval Range",
      "titleSlug": "count-odd-numbers-in-an-interval-range",
      "acRate": "49.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1632",
      "questionFrontendId": "1525",
      "title": "Number of Good Ways to Split a String",
      "titleSlug": "number-of-good-ways-to-split-a-string",
      "acRate": "68.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1634",
      "questionFrontendId": "1490",
      "title": "Clone N-ary Tree",
      "titleSlug": "clone-n-ary-tree",
      "acRate": "83.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1635",
      "questionFrontendId": "1512",
      "title": "Number of Good Pairs",
      "titleSlug": "number-of-good-pairs",
      "acRate": "88.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1637",
      "questionFrontendId": "1531",
      "title": "String Compression II",
      "titleSlug": "string-compression-ii",
      "acRate": "52.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1639",
      "questionFrontendId": "1495",
      "title": "Friendly Movies Streamed Last Month",
      "titleSlug": "friendly-movies-streamed-last-month",
      "acRate": "49.0%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1644",
      "questionFrontendId": "1520",
      "title": "Maximum Number of Non-Overlapping Substrings",
      "titleSlug": "maximum-number-of-non-overlapping-substrings",
      "acRate": "39.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1646",
      "questionFrontendId": "1539",
      "title": "Kth Missing Positive Number",
      "titleSlug": "kth-missing-positive-number",
      "acRate": "59.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1651",
      "questionFrontendId": "1528",
      "title": "Shuffle String",
      "titleSlug": "shuffle-string",
      "acRate": "84.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1652",
      "questionFrontendId": "1529",
      "title": "Minimum Suffix Flips",
      "titleSlug": "minimum-suffix-flips",
      "acRate": "73.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1654",
      "questionFrontendId": "1511",
      "title": "Customer Order Frequency",
      "titleSlug": "customer-order-frequency",
      "acRate": "68.3%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1662",
      "questionFrontendId": "1558",
      "title": "Minimum Numbers of Function Calls to Make Target Array",
      "titleSlug": "minimum-numbers-of-function-calls-to-make-target-array",
      "acRate": "63.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1669",
      "questionFrontendId": "1547",
      "title": "Minimum Cost to Cut a Stick",
      "titleSlug": "minimum-cost-to-cut-a-stick",
      "acRate": "61.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1672",
      "questionFrontendId": "1533",
      "title": "Find the Index of the Large Integer",
      "titleSlug": "find-the-index-of-the-large-integer",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1675",
      "questionFrontendId": "1552",
      "title": "Magnetic Force Between Two Balls",
      "titleSlug": "magnetic-force-between-two-balls",
      "acRate": "60.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1676",
      "questionFrontendId": "1553",
      "title": "Minimum Number of Days to Eat N Oranges",
      "titleSlug": "minimum-number-of-days-to-eat-n-oranges",
      "acRate": "35.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1677",
      "questionFrontendId": "1572",
      "title": "Matrix Diagonal Sum",
      "titleSlug": "matrix-diagonal-sum",
      "acRate": "82.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1679",
      "questionFrontendId": "1574",
      "title": "Shortest Subarray to be Removed to Make Array Sorted",
      "titleSlug": "shortest-subarray-to-be-removed-to-make-array-sorted",
      "acRate": "37.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1680",
      "questionFrontendId": "1575",
      "title": "Count All Possible Routes",
      "titleSlug": "count-all-possible-routes",
      "acRate": "65.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1683",
      "questionFrontendId": "1561",
      "title": "Maximum Number of Coins You Can Get",
      "titleSlug": "maximum-number-of-coins-you-can-get",
      "acRate": "84.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1684",
      "questionFrontendId": "1562",
      "title": "Find Latest Group of Size M",
      "titleSlug": "find-latest-group-of-size-m",
      "acRate": "42.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1685",
      "questionFrontendId": "1563",
      "title": "Stone Game V",
      "titleSlug": "stone-game-v",
      "acRate": "40.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1690",
      "questionFrontendId": "1567",
      "title": "Maximum Length of Subarray With Positive Product",
      "titleSlug": "maximum-length-of-subarray-with-positive-product",
      "acRate": "44.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1692",
      "questionFrontendId": "1569",
      "title": "Number of Ways to Reorder Array to Get Same BST",
      "titleSlug": "number-of-ways-to-reorder-array-to-get-same-bst",
      "acRate": "53.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Binary Search Tree",
          "slug": "binary-search-tree"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1693",
      "questionFrontendId": "1588",
      "title": "Sum of All Odd Length Subarrays",
      "titleSlug": "sum-of-all-odd-length-subarrays",
      "acRate": "83.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1694",
      "questionFrontendId": "1590",
      "title": "Make Sum Divisible by P",
      "titleSlug": "make-sum-divisible-by-p",
      "acRate": "29.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1700",
      "questionFrontendId": "1578",
      "title": "Minimum Time to Make Rope Colorful",
      "titleSlug": "minimum-time-to-make-rope-colorful",
      "acRate": "63.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1706",
      "questionFrontendId": "1584",
      "title": "Min Cost to Connect All Points",
      "titleSlug": "min-cost-to-connect-all-points",
      "acRate": "66.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Minimum Spanning Tree",
          "slug": "minimum-spanning-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1708",
      "questionFrontendId": "1603",
      "title": "Design Parking System",
      "titleSlug": "design-parking-system",
      "acRate": "88.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1713",
      "questionFrontendId": "1570",
      "title": "Dot Product of Two Sparse Vectors",
      "titleSlug": "dot-product-of-two-sparse-vectors",
      "acRate": "89.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1715",
      "questionFrontendId": "1593",
      "title": "Split a String Into the Max Number of Unique Substrings",
      "titleSlug": "split-a-string-into-the-max-number-of-unique-substrings",
      "acRate": "56.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1718",
      "questionFrontendId": "1571",
      "title": "Warehouse Manager",
      "titleSlug": "warehouse-manager",
      "acRate": "87.7%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1723",
      "questionFrontendId": "1601",
      "title": "Maximum Number of Achievable Transfer Requests",
      "titleSlug": "maximum-number-of-achievable-transfer-requests",
      "acRate": "64.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1724",
      "questionFrontendId": "1581",
      "title": "Customer Who Visited but Did Not Make Any Transactions",
      "titleSlug": "customer-who-visited-but-did-not-make-any-transactions",
      "acRate": "69.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1725",
      "questionFrontendId": "1621",
      "title": "Number of Sets of K Non-Overlapping Line Segments",
      "titleSlug": "number-of-sets-of-k-non-overlapping-line-segments",
      "acRate": "43.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1730",
      "questionFrontendId": "1608",
      "title": "Special Array With X Elements Greater Than or Equal X",
      "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
      "acRate": "60.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1731",
      "questionFrontendId": "1609",
      "title": "Even Odd Tree",
      "titleSlug": "even-odd-tree",
      "acRate": "65.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1736",
      "questionFrontendId": "1597",
      "title": "Build Binary Expression Tree From Infix Expression",
      "titleSlug": "build-binary-expression-tree-from-infix-expression",
      "acRate": "62.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1737",
      "questionFrontendId": "1614",
      "title": "Maximum Nesting Depth of the Parentheses",
      "titleSlug": "maximum-nesting-depth-of-the-parentheses",
      "acRate": "81.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1741",
      "questionFrontendId": "1636",
      "title": "Sort Array by Increasing Frequency",
      "titleSlug": "sort-array-by-increasing-frequency",
      "acRate": "71.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1753",
      "questionFrontendId": "1631",
      "title": "Path With Minimum Effort",
      "titleSlug": "path-with-minimum-effort",
      "acRate": "59.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1758",
      "questionFrontendId": "1655",
      "title": "Distribute Repeating Integers",
      "titleSlug": "distribute-repeating-integers",
      "acRate": "39.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1759",
      "questionFrontendId": "1613",
      "title": "Find the Missing IDs",
      "titleSlug": "find-the-missing-ids",
      "acRate": "73.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1761",
      "questionFrontendId": "1641",
      "title": "Count Sorted Vowel Strings",
      "titleSlug": "count-sorted-vowel-strings",
      "acRate": "78.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1762",
      "questionFrontendId": "1642",
      "title": "Furthest Building You Can Reach",
      "titleSlug": "furthest-building-you-can-reach",
      "acRate": "49.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1763",
      "questionFrontendId": "1623",
      "title": "All Valid Triplets That Can Represent a Country",
      "titleSlug": "all-valid-triplets-that-can-represent-a-country",
      "acRate": "82.6%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1764",
      "questionFrontendId": "1668",
      "title": "Maximum Repeating Substring",
      "titleSlug": "maximum-repeating-substring",
      "acRate": "38.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1767",
      "questionFrontendId": "1670",
      "title": "Design Front Middle Back Queue",
      "titleSlug": "design-front-middle-back-queue",
      "acRate": "56.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1768",
      "questionFrontendId": "1628",
      "title": "Design an Expression Tree With Evaluate Function",
      "titleSlug": "design-an-expression-tree-with-evaluate-function",
      "acRate": "82.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1770",
      "questionFrontendId": "1647",
      "title": "Minimum Deletions to Make Character Frequencies Unique",
      "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
      "acRate": "61.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1771",
      "questionFrontendId": "1648",
      "title": "Sell Diminishing-Valued Colored Balls",
      "titleSlug": "sell-diminishing-valued-colored-balls",
      "acRate": "30.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1774",
      "questionFrontendId": "1634",
      "title": "Add Two Polynomials Represented as Linked Lists",
      "titleSlug": "add-two-polynomials-represented-as-linked-lists",
      "acRate": "55.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1776",
      "questionFrontendId": "1658",
      "title": "Minimum Operations to Reduce X to Zero",
      "titleSlug": "minimum-operations-to-reduce-x-to-zero",
      "acRate": "39.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1777",
      "questionFrontendId": "1657",
      "title": "Determine if Two Strings Are Close",
      "titleSlug": "determine-if-two-strings-are-close",
      "acRate": "55.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1781",
      "questionFrontendId": "1662",
      "title": "Check If Two String Arrays are Equivalent",
      "titleSlug": "check-if-two-string-arrays-are-equivalent",
      "acRate": "85.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1782",
      "questionFrontendId": "1663",
      "title": "Smallest String With A Given Numeric Value",
      "titleSlug": "smallest-string-with-a-given-numeric-value",
      "acRate": "66.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1786",
      "questionFrontendId": "1684",
      "title": "Count the Number of Consistent Strings",
      "titleSlug": "count-the-number-of-consistent-strings",
      "acRate": "83.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1790",
      "questionFrontendId": "1650",
      "title": "Lowest Common Ancestor of a Binary Tree III",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iii",
      "acRate": "79.3%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1791",
      "questionFrontendId": "1672",
      "title": "Richest Customer Wealth",
      "titleSlug": "richest-customer-wealth",
      "acRate": "87.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1792",
      "questionFrontendId": "1673",
      "title": "Find the Most Competitive Subsequence",
      "titleSlug": "find-the-most-competitive-subsequence",
      "acRate": "50.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1797",
      "questionFrontendId": "1678",
      "title": "Goal Parser Interpretation",
      "titleSlug": "goal-parser-interpretation",
      "acRate": "87.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1798",
      "questionFrontendId": "1679",
      "title": "Max Number of K-Sum Pairs",
      "titleSlug": "max-number-of-k-sum-pairs",
      "acRate": "55.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1800",
      "questionFrontendId": "1680",
      "title": "Concatenation of Consecutive Binary Numbers",
      "titleSlug": "concatenation-of-consecutive-binary-numbers",
      "acRate": "57.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1801",
      "questionFrontendId": "1661",
      "title": "Average Time of Process per Machine",
      "titleSlug": "average-time-of-process-per-machine",
      "acRate": "66.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1802",
      "questionFrontendId": "1700",
      "title": "Number of Students Unable to Eat Lunch",
      "titleSlug": "number-of-students-unable-to-eat-lunch",
      "acRate": "71.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1806",
      "questionFrontendId": "1688",
      "title": "Count of Matches in Tournament",
      "titleSlug": "count-of-matches-in-tournament",
      "acRate": "85.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1807",
      "questionFrontendId": "1689",
      "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
      "titleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers",
      "acRate": "88.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1813",
      "questionFrontendId": "1695",
      "title": "Maximum Erasure Value",
      "titleSlug": "maximum-erasure-value",
      "acRate": "58.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1814",
      "questionFrontendId": "1696",
      "title": "Jump Game VI",
      "titleSlug": "jump-game-vi",
      "acRate": "45.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1816",
      "questionFrontendId": "1676",
      "title": "Lowest Common Ancestor of a Binary Tree IV",
      "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iv",
      "acRate": "78.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1817",
      "questionFrontendId": "1716",
      "title": "Calculate Money in Leetcode Bank",
      "titleSlug": "calculate-money-in-leetcode-bank",
      "acRate": "78.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1823",
      "questionFrontendId": "1704",
      "title": "Determine if String Halves Are Alike",
      "titleSlug": "determine-if-string-halves-are-alike",
      "acRate": "78.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1824",
      "questionFrontendId": "1705",
      "title": "Maximum Number of Eaten Apples",
      "titleSlug": "maximum-number-of-eaten-apples",
      "acRate": "38.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1825",
      "questionFrontendId": "1723",
      "title": "Find Minimum Time to Finish All Jobs",
      "titleSlug": "find-minimum-time-to-finish-all-jobs",
      "acRate": "42.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1827",
      "questionFrontendId": "1683",
      "title": "Invalid Tweets",
      "titleSlug": "invalid-tweets",
      "acRate": "85.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1829",
      "questionFrontendId": "1710",
      "title": "Maximum Units on a Truck",
      "titleSlug": "maximum-units-on-a-truck",
      "acRate": "73.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1835",
      "questionFrontendId": "1734",
      "title": "Decode XORed Permutation",
      "titleSlug": "decode-xored-permutation",
      "acRate": "64.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1836",
      "questionFrontendId": "1735",
      "title": "Count Ways to Make Array With Product",
      "titleSlug": "count-ways-to-make-array-with-product",
      "acRate": "50.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1842",
      "questionFrontendId": "1699",
      "title": "Number of Calls Between Two Persons",
      "titleSlug": "number-of-calls-between-two-persons",
      "acRate": "81.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1845",
      "questionFrontendId": "1727",
      "title": "Largest Submatrix With Rearrangements",
      "titleSlug": "largest-submatrix-with-rearrangements",
      "acRate": "75.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1849",
      "questionFrontendId": "1749",
      "title": "Maximum Absolute Sum of Any Subarray",
      "titleSlug": "maximum-absolute-sum-of-any-subarray",
      "acRate": "59.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1850",
      "questionFrontendId": "1750",
      "title": "Minimum Length of String After Deleting Similar Ends",
      "titleSlug": "minimum-length-of-string-after-deleting-similar-ends",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1851",
      "questionFrontendId": "1751",
      "title": "Maximum Number of Events That Can Be Attended II",
      "titleSlug": "maximum-number-of-events-that-can-be-attended-ii",
      "acRate": "62.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1874",
      "questionFrontendId": "1764",
      "title": "Form Array by Concatenating Subarrays of Another Array",
      "titleSlug": "form-array-by-concatenating-subarrays-of-another-array",
      "acRate": "53.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1878",
      "questionFrontendId": "1752",
      "title": "Check if Array Is Sorted and Rotated",
      "titleSlug": "check-if-array-is-sorted-and-rotated",
      "acRate": "50.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1882",
      "questionFrontendId": "1731",
      "title": "The Number of Employees Which Report to Each Employee",
      "titleSlug": "the-number-of-employees-which-report-to-each-employee",
      "acRate": "45.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1883",
      "questionFrontendId": "1740",
      "title": "Find Distance in a Binary Tree",
      "titleSlug": "find-distance-in-a-binary-tree",
      "acRate": "70.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1886",
      "questionFrontendId": "1760",
      "title": "Minimum Limit of Balls in a Bag",
      "titleSlug": "minimum-limit-of-balls-in-a-bag",
      "acRate": "60.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1887",
      "questionFrontendId": "1761",
      "title": "Minimum Degree of a Connected Trio in a Graph",
      "titleSlug": "minimum-degree-of-a-connected-trio-in-a-graph",
      "acRate": "42.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1888",
      "questionFrontendId": "1779",
      "title": "Find Nearest Point That Has the Same X or Y Coordinate",
      "titleSlug": "find-nearest-point-that-has-the-same-x-or-y-coordinate",
      "acRate": "68.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1891",
      "questionFrontendId": "1782",
      "title": "Count Pairs Of Nodes",
      "titleSlug": "count-pairs-of-nodes",
      "acRate": "39.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1892",
      "questionFrontendId": "1741",
      "title": "Find Total Time Spent by Each Employee",
      "titleSlug": "find-total-time-spent-by-each-employee",
      "acRate": "87.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1894",
      "questionFrontendId": "1768",
      "title": "Merge Strings Alternately",
      "titleSlug": "merge-strings-alternately",
      "acRate": "79.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1908",
      "questionFrontendId": "1757",
      "title": "Recyclable and Low Fat Products",
      "titleSlug": "recyclable-and-low-fat-products",
      "acRate": "89.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1909",
      "questionFrontendId": "1762",
      "title": "Buildings With an Ocean View",
      "titleSlug": "buildings-with-an-ocean-view",
      "acRate": "79.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1915",
      "questionFrontendId": "1790",
      "title": "Check if One String Swap Can Make Strings Equal",
      "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
      "acRate": "45.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1917",
      "questionFrontendId": "1792",
      "title": "Maximum Average Pass Ratio",
      "titleSlug": "maximum-average-pass-ratio",
      "acRate": "53.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1918",
      "questionFrontendId": "1793",
      "title": "Maximum Score of a Good Subarray",
      "titleSlug": "maximum-score-of-a-good-subarray",
      "acRate": "64.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1919",
      "questionFrontendId": "1772",
      "title": "Sort Features by Popularity",
      "titleSlug": "sort-features-by-popularity",
      "acRate": "65.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1925",
      "questionFrontendId": "1814",
      "title": "Count Nice Pairs in an Array",
      "titleSlug": "count-nice-pairs-in-an-array",
      "acRate": "49.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1926",
      "questionFrontendId": "1777",
      "title": "Product's Price for Each Store",
      "titleSlug": "products-price-for-each-store",
      "acRate": "82.3%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1929",
      "questionFrontendId": "1802",
      "title": "Maximum Value at a Given Index in a Bounded Array",
      "titleSlug": "maximum-value-at-a-given-index-in-a-bounded-array",
      "acRate": "39.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1932",
      "questionFrontendId": "1783",
      "title": "Grand Slam Titles",
      "titleSlug": "grand-slam-titles",
      "acRate": "83.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1937",
      "questionFrontendId": "1788",
      "title": "Maximize the Beauty of the Garden",
      "titleSlug": "maximize-the-beauty-of-the-garden",
      "acRate": "67.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1938",
      "questionFrontendId": "1827",
      "title": "Minimum Operations to Make the Array Increasing",
      "titleSlug": "minimum-operations-to-make-the-array-increasing",
      "acRate": "79.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1948",
      "questionFrontendId": "1795",
      "title": "Rearrange Products Table",
      "titleSlug": "rearrange-products-table",
      "acRate": "85.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1951",
      "questionFrontendId": "1823",
      "title": "Find the Winner of the Circular Game",
      "titleSlug": "find-the-winner-of-the-circular-game",
      "acRate": "78.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "1956",
      "questionFrontendId": "1846",
      "title": "Maximum Element After Decreasing and Rearranging",
      "titleSlug": "maximum-element-after-decreasing-and-rearranging",
      "acRate": "65.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1957",
      "questionFrontendId": "1847",
      "title": "Closest Room",
      "titleSlug": "closest-room",
      "acRate": "37.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1958",
      "questionFrontendId": "1809",
      "title": "Ad-Free Sessions",
      "titleSlug": "ad-free-sessions",
      "acRate": "58.3%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1961",
      "questionFrontendId": "1833",
      "title": "Maximum Ice Cream Bars",
      "titleSlug": "maximum-ice-cream-bars",
      "acRate": "73.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1962",
      "questionFrontendId": "1834",
      "title": "Single-Threaded CPU",
      "titleSlug": "single-threaded-cpu",
      "acRate": "45.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1964",
      "questionFrontendId": "1811",
      "title": "Find Interview Candidates",
      "titleSlug": "find-interview-candidates",
      "acRate": "61.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1966",
      "questionFrontendId": "1838",
      "title": "Frequency of the Most Frequent Element",
      "titleSlug": "frequency-of-the-most-frequent-element",
      "acRate": "45.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1970",
      "questionFrontendId": "1859",
      "title": "Sorting the Sentence",
      "titleSlug": "sorting-the-sentence",
      "acRate": "83.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1978",
      "questionFrontendId": "1850",
      "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
      "titleSlug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
      "acRate": "71.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1983",
      "questionFrontendId": "1854",
      "title": "Maximum Population Year",
      "titleSlug": "maximum-population-year",
      "acRate": "60.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Counting",
          "slug": "counting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1984",
      "questionFrontendId": "1855",
      "title": "Maximum Distance Between a Pair of Values",
      "titleSlug": "maximum-distance-between-a-pair-of-values",
      "acRate": "53.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1985",
      "questionFrontendId": "1856",
      "title": "Maximum Subarray Min-Product",
      "titleSlug": "maximum-subarray-min-product",
      "acRate": "37.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1987",
      "questionFrontendId": "1876",
      "title": "Substrings of Size Three with Distinct Characters",
      "titleSlug": "substrings-of-size-three-with-distinct-characters",
      "acRate": "73.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1988",
      "questionFrontendId": "1877",
      "title": "Minimize Maximum Pair Sum in Array",
      "titleSlug": "minimize-maximum-pair-sum-in-array",
      "acRate": "81.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1993",
      "questionFrontendId": "1863",
      "title": "Sum of All Subset XOR Totals",
      "titleSlug": "sum-of-all-subset-xor-totals",
      "acRate": "81.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1994",
      "questionFrontendId": "1864",
      "title": "Minimum Number of Swaps to Make the Binary String Alternating",
      "titleSlug": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
      "acRate": "43.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "1997",
      "questionFrontendId": "1842",
      "title": "Next Palindrome Using Same Digits",
      "titleSlug": "next-palindrome-using-same-digits",
      "acRate": "53.3%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2000",
      "questionFrontendId": "1870",
      "title": "Minimum Speed to Arrive on Time",
      "titleSlug": "minimum-speed-to-arrive-on-time",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2001",
      "questionFrontendId": "1871",
      "title": "Jump Game VII",
      "titleSlug": "jump-game-vii",
      "acRate": "24.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2003",
      "questionFrontendId": "1852",
      "title": "Distinct Numbers in Each Subarray",
      "titleSlug": "distinct-numbers-in-each-subarray",
      "acRate": "71.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2012",
      "questionFrontendId": "1882",
      "title": "Process Tasks Using Servers",
      "titleSlug": "process-tasks-using-servers",
      "acRate": "40.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2015",
      "questionFrontendId": "1886",
      "title": "Determine Whether Matrix Can Be Obtained By Rotation",
      "titleSlug": "determine-whether-matrix-can-be-obtained-by-rotation",
      "acRate": "56.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2018",
      "questionFrontendId": "1889",
      "title": "Minimum Space Wasted From Packaging",
      "titleSlug": "minimum-space-wasted-from-packaging",
      "acRate": "31.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2021",
      "questionFrontendId": "1910",
      "title": "Remove All Occurrences of a Substring",
      "titleSlug": "remove-all-occurrences-of-a-substring",
      "acRate": "77.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2025",
      "questionFrontendId": "1897",
      "title": "Redistribute Characters to Make All Strings Equal",
      "titleSlug": "redistribute-characters-to-make-all-strings-equal",
      "acRate": "67.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2031",
      "questionFrontendId": "1884",
      "title": "Egg Drop With 2 Eggs and N Floors",
      "titleSlug": "egg-drop-with-2-eggs-and-n-floors",
      "acRate": "72.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2032",
      "questionFrontendId": "1903",
      "title": "Largest Odd Number in String",
      "titleSlug": "largest-odd-number-in-string",
      "acRate": "63.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2038",
      "questionFrontendId": "1926",
      "title": "Nearest Exit from Entrance in Maze",
      "titleSlug": "nearest-exit-from-entrance-in-maze",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2042",
      "questionFrontendId": "1913",
      "title": "Maximum Product Difference Between Two Pairs",
      "titleSlug": "maximum-product-difference-between-two-pairs",
      "acRate": "82.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2047",
      "questionFrontendId": "1901",
      "title": "Find a Peak Element II",
      "titleSlug": "find-a-peak-element-ii",
      "acRate": "50.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2048",
      "questionFrontendId": "1920",
      "title": "Build Array from Permutation",
      "titleSlug": "build-array-from-permutation",
      "acRate": "89.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2051",
      "questionFrontendId": "1923",
      "title": "Longest Common Subpath",
      "titleSlug": "longest-common-subpath",
      "acRate": "27.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Suffix Array",
          "slug": "suffix-array"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2054",
      "questionFrontendId": "1942",
      "title": "The Number of the Smallest Unoccupied Chair",
      "titleSlug": "the-number-of-the-smallest-unoccupied-chair",
      "acRate": "41.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2056",
      "questionFrontendId": "2297",
      "title": "Jump Game VIII",
      "titleSlug": "jump-game-viii",
      "acRate": "46.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Shortest Path",
          "slug": "shortest-path"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2058",
      "questionFrontendId": "1929",
      "title": "Concatenation of Array",
      "titleSlug": "concatenation-of-array",
      "acRate": "89.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2065",
      "questionFrontendId": "2307",
      "title": "Check for Contradictions in Equations",
      "titleSlug": "check-for-contradictions-in-equations",
      "acRate": "42.7%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2072",
      "questionFrontendId": "1950",
      "title": "Maximum of Minimum Values in All Subarrays",
      "titleSlug": "maximum-of-minimum-values-in-all-subarrays",
      "acRate": "49.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2080",
      "questionFrontendId": "1958",
      "title": "Check if Move is Legal",
      "titleSlug": "check-if-move-is-legal",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2084",
      "questionFrontendId": "1953",
      "title": "Maximum Number of Weeks for Which You Can Work",
      "titleSlug": "maximum-number-of-weeks-for-which-you-can-work",
      "acRate": "40.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2086",
      "questionFrontendId": "1955",
      "title": "Count Number of Special Subsequences",
      "titleSlug": "count-number-of-special-subsequences",
      "acRate": "51.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2087",
      "questionFrontendId": "1934",
      "title": "Confirmation Rate",
      "titleSlug": "confirmation-rate",
      "acRate": "56.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2094",
      "questionFrontendId": "1962",
      "title": "Remove Stones to Minimize the Total",
      "titleSlug": "remove-stones-to-minimize-the-total",
      "acRate": "61.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2108",
      "questionFrontendId": "1981",
      "title": "Minimize the Difference Between Target and Chosen Elements",
      "titleSlug": "minimize-the-difference-between-target-and-chosen-elements",
      "acRate": "34.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2116",
      "questionFrontendId": "2006",
      "title": "Count Number of Pairs With Absolute Difference K",
      "titleSlug": "count-number-of-pairs-with-absolute-difference-k",
      "acRate": "83.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2117",
      "questionFrontendId": "2007",
      "title": "Find Original Array From Doubled Array",
      "titleSlug": "find-original-array-from-doubled-array",
      "acRate": "40.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2120",
      "questionFrontendId": "1972",
      "title": "First and Last Call On the Same Day",
      "titleSlug": "first-and-last-call-on-the-same-day",
      "acRate": "50.2%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2125",
      "questionFrontendId": "1998",
      "title": "GCD Sort of an Array",
      "titleSlug": "gcd-sort-of-an-array",
      "acRate": "45.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2132",
      "questionFrontendId": "2022",
      "title": "Convert 1D Array Into 2D Array",
      "titleSlug": "convert-1d-array-into-2d-array",
      "acRate": "61.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2134",
      "questionFrontendId": "2024",
      "title": "Maximize the Confusion of an Exam",
      "titleSlug": "maximize-the-confusion-of-an-exam",
      "acRate": "67.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2137",
      "questionFrontendId": "2011",
      "title": "Final Value of Variable After Performing Operations",
      "titleSlug": "final-value-of-variable-after-performing-operations",
      "acRate": "88.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2138",
      "questionFrontendId": "2012",
      "title": "Sum of Beauty in the Array",
      "titleSlug": "sum-of-beauty-in-the-array",
      "acRate": "47.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2139",
      "questionFrontendId": "2013",
      "title": "Detect Squares",
      "titleSlug": "detect-squares",
      "acRate": "50.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2149",
      "questionFrontendId": "2038",
      "title": "Remove Colored Pieces if Both Neighbors are the Same Color",
      "titleSlug": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
      "acRate": "62.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2155",
      "questionFrontendId": "2028",
      "title": "Find Missing Observations",
      "titleSlug": "find-missing-observations",
      "acRate": "46.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2161",
      "questionFrontendId": "2034",
      "title": "Stock Price Fluctuation ",
      "titleSlug": "stock-price-fluctuation",
      "acRate": "48.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2162",
      "questionFrontendId": "2035",
      "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
      "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
      "acRate": "20.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2163",
      "questionFrontendId": "2053",
      "title": "Kth Distinct String in an Array",
      "titleSlug": "kth-distinct-string-in-an-array",
      "acRate": "72.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2165",
      "questionFrontendId": "2055",
      "title": "Plates Between Candles",
      "titleSlug": "plates-between-candles",
      "acRate": "44.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2175",
      "questionFrontendId": "2049",
      "title": "Count Nodes With the Highest Score",
      "titleSlug": "count-nodes-with-the-highest-score",
      "acRate": "48.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2179",
      "questionFrontendId": "2070",
      "title": "Most Beautiful Item for Each Query",
      "titleSlug": "most-beautiful-item-for-each-query",
      "acRate": "49.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2182",
      "questionFrontendId": "2058",
      "title": "Find the Minimum and Maximum Number of Nodes Between Critical Points",
      "titleSlug": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
      "acRate": "58.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2183",
      "questionFrontendId": "2059",
      "title": "Minimum Operations to Convert Number",
      "titleSlug": "minimum-operations-to-convert-number",
      "acRate": "48.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2188",
      "questionFrontendId": "2064",
      "title": "Minimized Maximum of Products Distributed to Any Store",
      "titleSlug": "minimized-maximum-of-products-distributed-to-any-store",
      "acRate": "52.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2192",
      "questionFrontendId": "2087",
      "title": "Minimum Cost Homecoming of a Robot in a Grid",
      "titleSlug": "minimum-cost-homecoming-of-a-robot-in-a-grid",
      "acRate": "50.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2197",
      "questionFrontendId": "2075",
      "title": "Decode the Slanted Ciphertext",
      "titleSlug": "decode-the-slanted-ciphertext",
      "acRate": "49.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2204",
      "questionFrontendId": "2099",
      "title": "Find Subsequence of Length K With the Largest Sum",
      "titleSlug": "find-subsequence-of-length-k-with-the-largest-sum",
      "acRate": "43.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2205",
      "questionFrontendId": "2100",
      "title": "Find Good Days to Rob the Bank",
      "titleSlug": "find-good-days-to-rob-the-bank",
      "acRate": "49.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2206",
      "questionFrontendId": "2101",
      "title": "Detonate the Maximum Bombs",
      "titleSlug": "detonate-the-maximum-bombs",
      "acRate": "48.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Geometry",
          "slug": "geometry"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2207",
      "questionFrontendId": "2102",
      "title": "Sequentially Ordinal Rank Tracker",
      "titleSlug": "sequentially-ordinal-rank-tracker",
      "acRate": "64.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Data Stream",
          "slug": "data-stream"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2210",
      "questionFrontendId": "2089",
      "title": "Find Target Indices After Sorting Array",
      "titleSlug": "find-target-indices-after-sorting-array",
      "acRate": "76.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2211",
      "questionFrontendId": "2090",
      "title": "K Radius Subarray Averages",
      "titleSlug": "k-radius-subarray-averages",
      "acRate": "46.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2213",
      "questionFrontendId": "2092",
      "title": "Find All People With Secret",
      "titleSlug": "find-all-people-with-secret",
      "acRate": "45.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2216",
      "questionFrontendId": "2095",
      "title": "Delete the Middle Node of a Linked List",
      "titleSlug": "delete-the-middle-node-of-a-linked-list",
      "acRate": "58.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2217",
      "questionFrontendId": "2096",
      "title": "Step-By-Step Directions From a Binary Tree Node to Another",
      "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
      "acRate": "48.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2220",
      "questionFrontendId": "2115",
      "title": "Find All Possible Recipes from Given Supplies",
      "titleSlug": "find-all-possible-recipes-from-given-supplies",
      "acRate": "49.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2227",
      "questionFrontendId": "2104",
      "title": "Sum of Subarray Ranges",
      "titleSlug": "sum-of-subarray-ranges",
      "acRate": "61.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2231",
      "questionFrontendId": "2108",
      "title": "Find First Palindromic String in the Array",
      "titleSlug": "find-first-palindromic-string-in-the-array",
      "acRate": "83.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2232",
      "questionFrontendId": "2109",
      "title": "Adding Spaces to a String",
      "titleSlug": "adding-spaces-to-a-string",
      "acRate": "58.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2233",
      "questionFrontendId": "2110",
      "title": "Number of Smooth Descent Periods of a Stock",
      "titleSlug": "number-of-smooth-descent-periods-of-a-stock",
      "acRate": "58.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2234",
      "questionFrontendId": "2111",
      "title": "Minimum Operations to Make the Array K-Increasing",
      "titleSlug": "minimum-operations-to-make-the-array-k-increasing",
      "acRate": "38.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2236",
      "questionFrontendId": "2130",
      "title": "Maximum Twin Sum of a Linked List",
      "titleSlug": "maximum-twin-sum-of-a-linked-list",
      "acRate": "81.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2237",
      "questionFrontendId": "2131",
      "title": "Longest Palindrome by Concatenating Two Letter Words",
      "titleSlug": "longest-palindrome-by-concatenating-two-letter-words",
      "acRate": "48.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2244",
      "questionFrontendId": "2125",
      "title": "Number of Laser Beams in a Bank",
      "titleSlug": "number-of-laser-beams-in-a-bank",
      "acRate": "85.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2249",
      "questionFrontendId": "2145",
      "title": "Count the Hidden Sequences",
      "titleSlug": "count-the-hidden-sequences",
      "acRate": "37.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2255",
      "questionFrontendId": "2134",
      "title": "Minimum Swaps to Group All 1's Together II",
      "titleSlug": "minimum-swaps-to-group-all-1s-together-ii",
      "acRate": "52.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2256",
      "questionFrontendId": "2135",
      "title": "Count Words Obtained After Adding a Letter",
      "titleSlug": "count-words-obtained-after-adding-a-letter",
      "acRate": "42.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2259",
      "questionFrontendId": "2123",
      "title": "Minimum Operations to Remove Adjacent Ones in Matrix",
      "titleSlug": "minimum-operations-to-remove-adjacent-ones-in-matrix",
      "acRate": "41.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2262",
      "questionFrontendId": "2140",
      "title": "Solving Questions With Brainpower",
      "titleSlug": "solving-questions-with-brainpower",
      "acRate": "54.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2263",
      "questionFrontendId": "2141",
      "title": "Maximum Running Time of N Computers",
      "titleSlug": "maximum-running-time-of-n-computers",
      "acRate": "50.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2264",
      "questionFrontendId": "2160",
      "title": "Minimum Sum of Four Digit Number After Splitting Digits",
      "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
      "acRate": "86.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2265",
      "questionFrontendId": "2161",
      "title": "Partition Array According to Given Pivot",
      "titleSlug": "partition-array-according-to-given-pivot",
      "acRate": "84.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2267",
      "questionFrontendId": "2163",
      "title": "Minimum Difference in Sums After Removal of Elements",
      "titleSlug": "minimum-difference-in-sums-after-removal-of-elements",
      "acRate": "47.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2271",
      "questionFrontendId": "2149",
      "title": "Rearrange Array Elements by Sign",
      "titleSlug": "rearrange-array-elements-by-sign",
      "acRate": "83.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2274",
      "questionFrontendId": "2154",
      "title": "Keep Multiplying Found Values by Two",
      "titleSlug": "keep-multiplying-found-values-by-two",
      "acRate": "71.4%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2288",
      "questionFrontendId": "2169",
      "title": "Count Operations to Obtain Zero",
      "titleSlug": "count-operations-to-obtain-zero",
      "acRate": "74.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2294",
      "questionFrontendId": "2187",
      "title": "Minimum Time to Complete Trips",
      "titleSlug": "minimum-time-to-complete-trips",
      "acRate": "38.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2301",
      "questionFrontendId": "2183",
      "title": "Count Array Pairs Divisible by K",
      "titleSlug": "count-array-pairs-divisible-by-k",
      "acRate": "29.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2302",
      "questionFrontendId": "2159",
      "title": "Order Two Columns Independently",
      "titleSlug": "order-two-columns-independently",
      "acRate": "59.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2304",
      "questionFrontendId": "2194",
      "title": "Cells in a Range on an Excel Sheet",
      "titleSlug": "cells-in-a-range-on-an-excel-sheet",
      "acRate": "84.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2305",
      "questionFrontendId": "2195",
      "title": "Append K Integers With Minimal Sum",
      "titleSlug": "append-k-integers-with-minimal-sum",
      "acRate": "25.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2307",
      "questionFrontendId": "2197",
      "title": "Replace Non-Coprime Numbers in Array",
      "titleSlug": "replace-non-coprime-numbers-in-array",
      "acRate": "38.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2309",
      "questionFrontendId": "2207",
      "title": "Maximize Number of Subsequences in a String",
      "titleSlug": "maximize-number-of-subsequences-in-a-string",
      "acRate": "34.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2313",
      "questionFrontendId": "2173",
      "title": "Longest Winning Streak",
      "titleSlug": "longest-winning-streak",
      "acRate": "52.3%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2324",
      "questionFrontendId": "2221",
      "title": "Find Triangular Sum of an Array",
      "titleSlug": "find-triangular-sum-of-an-array",
      "acRate": "78.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2325",
      "questionFrontendId": "2222",
      "title": "Number of Ways to Select Buildings",
      "titleSlug": "number-of-ways-to-select-buildings",
      "acRate": "50.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2326",
      "questionFrontendId": "2223",
      "title": "Sum of Scores of Built Strings",
      "titleSlug": "sum-of-scores-of-built-strings",
      "acRate": "39.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Suffix Array",
          "slug": "suffix-array"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2330",
      "questionFrontendId": "2234",
      "title": "Maximum Total Beauty of the Gardens",
      "titleSlug": "maximum-total-beauty-of-the-gardens",
      "acRate": "29.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2333",
      "questionFrontendId": "2250",
      "title": "Count Number of Rectangles Containing Each Point",
      "titleSlug": "count-number-of-rectangles-containing-each-point",
      "acRate": "34.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2334",
      "questionFrontendId": "2251",
      "title": "Number of Flowers in Full Bloom",
      "titleSlug": "number-of-flowers-in-full-bloom",
      "acRate": "56.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2337",
      "questionFrontendId": "2259",
      "title": "Remove Digit From Number to Maximize Result",
      "titleSlug": "remove-digit-from-number-to-maximize-result",
      "acRate": "44.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2339",
      "questionFrontendId": "2261",
      "title": "K Divisible Elements Subarrays",
      "titleSlug": "k-divisible-elements-subarrays",
      "acRate": "50.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2340",
      "questionFrontendId": "2262",
      "title": "Total Appeal of A String",
      "titleSlug": "total-appeal-of-a-string",
      "acRate": "55.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2342",
      "questionFrontendId": "2256",
      "title": "Minimum Average Difference",
      "titleSlug": "minimum-average-difference",
      "acRate": "43.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2344",
      "questionFrontendId": "2258",
      "title": "Escape the Spreading Fire",
      "titleSlug": "escape-the-spreading-fire",
      "acRate": "35.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2347",
      "questionFrontendId": "2265",
      "title": "Count Nodes Equal to Average of Subtree",
      "titleSlug": "count-nodes-equal-to-average-of-subtree",
      "acRate": "86.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2348",
      "questionFrontendId": "2266",
      "title": "Count Number of Texts",
      "titleSlug": "count-number-of-texts",
      "acRate": "47.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2350",
      "questionFrontendId": "2239",
      "title": "Find Closest Number to Zero",
      "titleSlug": "find-closest-number-to-zero",
      "acRate": "44.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2354",
      "questionFrontendId": "2214",
      "title": "Minimum Health to Beat Game",
      "titleSlug": "minimum-health-to-beat-game",
      "acRate": "57.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2355",
      "questionFrontendId": "2274",
      "title": "Maximum Consecutive Floors Without Special Floors",
      "titleSlug": "maximum-consecutive-floors-without-special-floors",
      "acRate": "51.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2358",
      "questionFrontendId": "2270",
      "title": "Number of Ways to Split Array",
      "titleSlug": "number-of-ways-to-split-array",
      "acRate": "47.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2360",
      "questionFrontendId": "2272",
      "title": "Substring With Largest Variance",
      "titleSlug": "substring-with-largest-variance",
      "acRate": "46.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2362",
      "questionFrontendId": "2244",
      "title": "Minimum Rounds to Complete All Tasks",
      "titleSlug": "minimum-rounds-to-complete-all-tasks",
      "acRate": "62.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2364",
      "questionFrontendId": "2246",
      "title": "Longest Path With Different Adjacent Characters",
      "titleSlug": "longest-path-with-different-adjacent-characters",
      "acRate": "54.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2366",
      "questionFrontendId": "2279",
      "title": "Maximum Bags With Full Capacity of Rocks",
      "titleSlug": "maximum-bags-with-full-capacity-of-rocks",
      "acRate": "67.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2368",
      "questionFrontendId": "2281",
      "title": "Sum of Total Strength of Wizards",
      "titleSlug": "sum-of-total-strength-of-wizards",
      "acRate": "27.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2369",
      "questionFrontendId": "2219",
      "title": "Maximum Sum Score of Array",
      "titleSlug": "maximum-sum-score-of-array",
      "acRate": "62.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2370",
      "questionFrontendId": "2228",
      "title": "Users With Two Purchases Within Seven Days",
      "titleSlug": "users-with-two-purchases-within-seven-days",
      "acRate": "44.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2372",
      "questionFrontendId": "2287",
      "title": "Rearrange Characters to Make Target String",
      "titleSlug": "rearrange-characters-to-make-target-string",
      "acRate": "58.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2373",
      "questionFrontendId": "2288",
      "title": "Apply Discount to Prices",
      "titleSlug": "apply-discount-to-prices",
      "acRate": "29.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2374",
      "questionFrontendId": "2289",
      "title": "Steps to Make Array Non-decreasing",
      "titleSlug": "steps-to-make-array-non-decreasing",
      "acRate": "21.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2376",
      "questionFrontendId": "2238",
      "title": "Number of Times a Driver Was a Passenger",
      "titleSlug": "number-of-times-a-driver-was-a-passenger",
      "acRate": "70.5%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2383",
      "questionFrontendId": "2235",
      "title": "Add Two Integers",
      "titleSlug": "add-two-integers",
      "acRate": "87.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2384",
      "questionFrontendId": "2236",
      "title": "Root Equals Sum of Children",
      "titleSlug": "root-equals-sum-of-children",
      "acRate": "84.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2387",
      "questionFrontendId": "2294",
      "title": "Partition Array Such That Maximum Difference Is K",
      "titleSlug": "partition-array-such-that-maximum-difference-is-k",
      "acRate": "73.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2388",
      "questionFrontendId": "2295",
      "title": "Replace Elements in an Array",
      "titleSlug": "replace-elements-in-an-array",
      "acRate": "57.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2389",
      "questionFrontendId": "2296",
      "title": "Design a Text Editor",
      "titleSlug": "design-a-text-editor",
      "acRate": "43.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Doubly-Linked List",
          "slug": "doubly-linked-list"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2394",
      "questionFrontendId": "2302",
      "title": "Count Subarrays With Score Less Than K",
      "titleSlug": "count-subarrays-with-score-less-than-k",
      "acRate": "54.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2395",
      "questionFrontendId": "2311",
      "title": "Longest Binary Subsequence Less Than or Equal to K",
      "titleSlug": "longest-binary-subsequence-less-than-or-equal-to-k",
      "acRate": "37.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2400",
      "questionFrontendId": "2322",
      "title": "Minimum Score After Removals on a Tree",
      "titleSlug": "minimum-score-after-removals-on-a-tree",
      "acRate": "52.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2401",
      "questionFrontendId": "2315",
      "title": "Count Asterisks",
      "titleSlug": "count-asterisks",
      "acRate": "82.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2403",
      "questionFrontendId": "2316",
      "title": "Count Unreachable Pairs of Nodes in an Undirected Graph",
      "titleSlug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Graph",
          "slug": "graph"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2405",
      "questionFrontendId": "2268",
      "title": "Minimum Number of Keypresses",
      "titleSlug": "minimum-number-of-keypresses",
      "acRate": "70.9%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2408",
      "questionFrontendId": "2327",
      "title": "Number of People Aware of a Secret",
      "titleSlug": "number-of-people-aware-of-a-secret",
      "acRate": "45.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2409",
      "questionFrontendId": "2328",
      "title": "Number of Increasing Paths in a Grid",
      "titleSlug": "number-of-increasing-paths-in-a-grid",
      "acRate": "58.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2413",
      "questionFrontendId": "2336",
      "title": "Smallest Number in Infinite Set",
      "titleSlug": "smallest-number-in-infinite-set",
      "acRate": "72.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2414",
      "questionFrontendId": "2337",
      "title": "Move Pieces to Obtain a String",
      "titleSlug": "move-pieces-to-obtain-a-string",
      "acRate": "47.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2418",
      "questionFrontendId": "2333",
      "title": "Minimum Sum of Squared Difference",
      "titleSlug": "minimum-sum-of-squared-difference",
      "acRate": "25.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2421",
      "questionFrontendId": "2341",
      "title": "Maximum Number of Pairs in Array",
      "titleSlug": "maximum-number-of-pairs-in-array",
      "acRate": "75.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2428",
      "questionFrontendId": "2352",
      "title": "Equal Row and Column Pairs",
      "titleSlug": "equal-row-and-column-pairs",
      "acRate": "70.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2429",
      "questionFrontendId": "2353",
      "title": "Design a Food Rating System",
      "titleSlug": "design-a-food-rating-system",
      "acRate": "45.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2431",
      "questionFrontendId": "2292",
      "title": "Products With Three or More Orders in Two Consecutive Years",
      "titleSlug": "products-with-three-or-more-orders-in-two-consecutive-years",
      "acRate": "38.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2433",
      "questionFrontendId": "2347",
      "title": "Best Poker Hand",
      "titleSlug": "best-poker-hand",
      "acRate": "60.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2435",
      "questionFrontendId": "2350",
      "title": "Shortest Impossible Sequence of Rolls",
      "titleSlug": "shortest-impossible-sequence-of-rolls",
      "acRate": "68.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2436",
      "questionFrontendId": "2357",
      "title": "Make Array Zero by Subtracting Equal Amounts",
      "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
      "acRate": "72.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2443",
      "questionFrontendId": "2369",
      "title": "Check if There is a Valid Partition For The Array",
      "titleSlug": "check-if-there-is-a-valid-partition-for-the-array",
      "acRate": "51.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2449",
      "questionFrontendId": "2398",
      "title": "Maximum Number of Robots Within Budget",
      "titleSlug": "maximum-number-of-robots-within-budget",
      "acRate": "34.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2450",
      "questionFrontendId": "2366",
      "title": "Minimum Replacements to Sort the Array",
      "titleSlug": "minimum-replacements-to-sort-the-array",
      "acRate": "53.7%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2451",
      "questionFrontendId": "2324",
      "title": "Product Sales Analysis IV",
      "titleSlug": "product-sales-analysis-iv",
      "acRate": "73.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2452",
      "questionFrontendId": "2329",
      "title": "Product Sales Analysis V",
      "titleSlug": "product-sales-analysis-v",
      "acRate": "69.3%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2456",
      "questionFrontendId": "2375",
      "title": "Construct Smallest Number From DI String",
      "titleSlug": "construct-smallest-number-from-di-string",
      "acRate": "75.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2457",
      "questionFrontendId": "2376",
      "title": "Count Special Integers",
      "titleSlug": "count-special-integers",
      "acRate": "38.4%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2458",
      "questionFrontendId": "2323",
      "title": "Find Minimum Time to Finish All Jobs II",
      "titleSlug": "find-minimum-time-to-finish-all-jobs-ii",
      "acRate": "66.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2461",
      "questionFrontendId": "2385",
      "title": "Amount of Time for Binary Tree to Be Infected",
      "titleSlug": "amount-of-time-for-binary-tree-to-be-infected",
      "acRate": "63.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2462",
      "questionFrontendId": "2386",
      "title": "Find the K-Sum of an Array",
      "titleSlug": "find-the-k-sum-of-an-array",
      "acRate": "38.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2464",
      "questionFrontendId": "2380",
      "title": "Time Needed to Rearrange a Binary String",
      "titleSlug": "time-needed-to-rearrange-a-binary-string",
      "acRate": "49.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2468",
      "questionFrontendId": "2330",
      "title": "Valid Palindrome IV",
      "titleSlug": "valid-palindrome-iv",
      "acRate": "75.6%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2470",
      "questionFrontendId": "2390",
      "title": "Removing Stars From a String",
      "titleSlug": "removing-stars-from-a-string",
      "acRate": "74.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2471",
      "questionFrontendId": "2391",
      "title": "Minimum Amount of Time to Collect Garbage",
      "titleSlug": "minimum-amount-of-time-to-collect-garbage",
      "acRate": "85.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2473",
      "questionFrontendId": "2342",
      "title": "Max Sum of a Pair With Equal Sum of Digits",
      "titleSlug": "max-sum-of-a-pair-with-equal-sum-of-digits",
      "acRate": "54.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2474",
      "questionFrontendId": "2340",
      "title": "Minimum Adjacent Swaps to Make a Valid Array",
      "titleSlug": "minimum-adjacent-swaps-to-make-a-valid-array",
      "acRate": "72.8%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2477",
      "questionFrontendId": "2400",
      "title": "Number of Ways to Reach a Position After Exactly k Steps",
      "titleSlug": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
      "acRate": "34.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2479",
      "questionFrontendId": "2402",
      "title": "Meeting Rooms III",
      "titleSlug": "meeting-rooms-iii",
      "acRate": "45.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2481",
      "questionFrontendId": "2396",
      "title": "Strictly Palindromic Number",
      "titleSlug": "strictly-palindromic-number",
      "acRate": "87.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Brainteaser",
          "slug": "brainteaser"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2487",
      "questionFrontendId": "2405",
      "title": "Optimal Partition of String",
      "titleSlug": "optimal-partition-of-string",
      "acRate": "78.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2488",
      "questionFrontendId": "2406",
      "title": "Divide Intervals Into Minimum Number of Groups",
      "titleSlug": "divide-intervals-into-minimum-number-of-groups",
      "acRate": "46.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2490",
      "questionFrontendId": "2355",
      "title": "Maximum Number of Books You Can Take",
      "titleSlug": "maximum-number-of-books-you-can-take",
      "acRate": "41.1%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2491",
      "questionFrontendId": "2413",
      "title": "Smallest Even Multiple",
      "titleSlug": "smallest-even-multiple",
      "acRate": "87.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2497",
      "questionFrontendId": "2410",
      "title": "Maximum Matching of Players With Trainers",
      "titleSlug": "maximum-matching-of-players-with-trainers",
      "acRate": "62.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2498",
      "questionFrontendId": "2411",
      "title": "Smallest Subarrays With Maximum Bitwise OR",
      "titleSlug": "smallest-subarrays-with-maximum-bitwise-or",
      "acRate": "43.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2499",
      "questionFrontendId": "2412",
      "title": "Minimum Money Required Before Transactions",
      "titleSlug": "minimum-money-required-before-transactions",
      "acRate": "39.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2504",
      "questionFrontendId": "2420",
      "title": "Find All Good Indices",
      "titleSlug": "find-all-good-indices",
      "acRate": "38.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2520",
      "questionFrontendId": "2434",
      "title": "Using a Robot to Print the Lexicographically Smallest String",
      "titleSlug": "using-a-robot-to-print-the-lexicographically-smallest-string",
      "acRate": "39.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2530",
      "questionFrontendId": "2439",
      "title": "Minimize Maximum of Array",
      "titleSlug": "minimize-maximum-of-array",
      "acRate": "46.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2534",
      "questionFrontendId": "2394",
      "title": "Employees With Deductions",
      "titleSlug": "employees-with-deductions",
      "acRate": "40.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2538",
      "questionFrontendId": "2448",
      "title": "Minimum Cost to Make Array Equal",
      "titleSlug": "minimum-cost-to-make-array-equal",
      "acRate": "45.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2539",
      "questionFrontendId": "2449",
      "title": "Minimum Number of Operations to Make Arrays Similar",
      "titleSlug": "minimum-number-of-operations-to-make-arrays-similar",
      "acRate": "61.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2541",
      "questionFrontendId": "2443",
      "title": "Sum of Number and Its Reverse",
      "titleSlug": "sum-of-number-and-its-reverse",
      "acRate": "47.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2551",
      "questionFrontendId": "2460",
      "title": "Apply Operations to an Array",
      "titleSlug": "apply-operations-to-an-array",
      "acRate": "67.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2552",
      "questionFrontendId": "2461",
      "title": "Maximum Sum of Distinct Subarrays With Length K",
      "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
      "acRate": "33.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2553",
      "questionFrontendId": "2462",
      "title": "Total Cost to Hire K Workers",
      "titleSlug": "total-cost-to-hire-k-workers",
      "acRate": "43.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2555",
      "questionFrontendId": "2408",
      "title": "Design SQL",
      "titleSlug": "design-sql",
      "acRate": "78.1%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2556",
      "questionFrontendId": "2469",
      "title": "Convert the Temperature",
      "titleSlug": "convert-the-temperature",
      "acRate": "89.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2558",
      "questionFrontendId": "2471",
      "title": "Minimum Number of Operations to Sort a Binary Tree by Level",
      "titleSlug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2561",
      "questionFrontendId": "2465",
      "title": "Number of Distinct Averages",
      "titleSlug": "number-of-distinct-averages",
      "acRate": "57.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2565",
      "questionFrontendId": "2422",
      "title": "Merge Operations to Turn Array Into a Palindrome",
      "titleSlug": "merge-operations-to-turn-array-into-a-palindrome",
      "acRate": "69.4%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2566",
      "questionFrontendId": "2475",
      "title": "Number of Unequal Triplets in Array",
      "titleSlug": "number-of-unequal-triplets-in-array",
      "acRate": "71.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2571",
      "questionFrontendId": "2485",
      "title": "Find the Pivot Integer",
      "titleSlug": "find-the-pivot-integer",
      "acRate": "84.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2572",
      "questionFrontendId": "2486",
      "title": "Append Characters to String to Make Subsequence",
      "titleSlug": "append-characters-to-string-to-make-subsequence",
      "acRate": "65.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2573",
      "questionFrontendId": "2487",
      "title": "Remove Nodes From Linked List",
      "titleSlug": "remove-nodes-from-linked-list",
      "acRate": "65.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2576",
      "questionFrontendId": "2483",
      "title": "Minimum Penalty for a Shop",
      "titleSlug": "minimum-penalty-for-a-shop",
      "acRate": "67.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2586",
      "questionFrontendId": "2501",
      "title": "Longest Square Streak in an Array",
      "titleSlug": "longest-square-streak-in-an-array",
      "acRate": "39.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2587",
      "questionFrontendId": "2502",
      "title": "Design Memory Allocator",
      "titleSlug": "design-memory-allocator",
      "acRate": "52.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2590",
      "questionFrontendId": "2497",
      "title": "Maximum Star Sum of a Graph",
      "titleSlug": "maximum-star-sum-of-a-graph",
      "acRate": "38.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2603",
      "questionFrontendId": "2512",
      "title": "Reward Top K Students",
      "titleSlug": "reward-top-k-students",
      "acRate": "45.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2606",
      "questionFrontendId": "2482",
      "title": "Difference Between Ones and Zeros in Row and Column",
      "titleSlug": "difference-between-ones-and-zeros-in-row-and-column",
      "acRate": "84.6%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2613",
      "questionFrontendId": "2474",
      "title": "Customers With Strictly Increasing Purchases",
      "titleSlug": "customers-with-strictly-increasing-purchases",
      "acRate": "43.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Database",
          "slug": "database"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2614",
      "questionFrontendId": "2529",
      "title": "Maximum Count of Positive Integer and Negative Integer",
      "titleSlug": "maximum-count-of-positive-integer-and-negative-integer",
      "acRate": "71.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2617",
      "questionFrontendId": "2534",
      "title": "Time Taken to Cross the Door",
      "titleSlug": "time-taken-to-cross-the-door",
      "acRate": "50.4%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2621",
      "questionFrontendId": "2527",
      "title": "Find Xor-Beauty of Array",
      "titleSlug": "find-xor-beauty-of-array",
      "acRate": "67.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2626",
      "questionFrontendId": "2537",
      "title": "Count the Number of Good Subarrays",
      "titleSlug": "count-the-number-of-good-subarrays",
      "acRate": "49.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2634",
      "questionFrontendId": "2540",
      "title": "Minimum Common Value",
      "titleSlug": "minimum-common-value",
      "acRate": "59.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2636",
      "questionFrontendId": "2542",
      "title": "Maximum Subsequence Score",
      "titleSlug": "maximum-subsequence-score",
      "acRate": "53.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2646",
      "questionFrontendId": "2583",
      "title": "Kth Largest Sum in a Binary Tree",
      "titleSlug": "kth-largest-sum-in-a-binary-tree",
      "acRate": "47.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2650",
      "questionFrontendId": "2578",
      "title": "Split With Minimum Sum",
      "titleSlug": "split-with-minimum-sum",
      "acRate": "69.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2658",
      "questionFrontendId": "2519",
      "title": "Count the Number of K-Big Indices",
      "titleSlug": "count-the-number-of-k-big-indices",
      "acRate": "53.6%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2669",
      "questionFrontendId": "2606",
      "title": "Find the Substring With Maximum Cost",
      "titleSlug": "find-the-substring-with-maximum-cost",
      "acRate": "56.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2670",
      "questionFrontendId": "2607",
      "title": "Make K-Subarray Sums Equal",
      "titleSlug": "make-k-subarray-sums-equal",
      "acRate": "36.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2677",
      "questionFrontendId": "2641",
      "title": "Cousins in Binary Tree II",
      "titleSlug": "cousins-in-binary-tree-ii",
      "acRate": "68.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Binary Tree",
          "slug": "binary-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2681",
      "questionFrontendId": "2551",
      "title": "Put Marbles in Bags",
      "titleSlug": "put-marbles-in-bags",
      "acRate": "66.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2684",
      "questionFrontendId": "2660",
      "title": "Determine the Winner of a Bowling Game",
      "titleSlug": "determine-the-winner-of-a-bowling-game",
      "acRate": "34.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2692",
      "questionFrontendId": "2558",
      "title": "Take Gifts From the Richest Pile",
      "titleSlug": "take-gifts-from-the-richest-pile",
      "acRate": "66.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2713",
      "questionFrontendId": "2575",
      "title": "Find the Divisibility Array of a String",
      "titleSlug": "find-the-divisibility-array-of-a-string",
      "acRate": "32.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "2720",
      "questionFrontendId": "2616",
      "title": "Minimize the Maximum Difference of Pairs",
      "titleSlug": "minimize-the-maximum-difference-of-pairs",
      "acRate": "43.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2724",
      "questionFrontendId": "2610",
      "title": "Convert an Array Into a 2D Array With Conditions",
      "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
      "acRate": "87.3%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2732",
      "questionFrontendId": "2620",
      "title": "Counter",
      "titleSlug": "counter",
      "acRate": "80.3%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2734",
      "questionFrontendId": "2619",
      "title": "Array Prototype Last",
      "titleSlug": "array-prototype-last",
      "acRate": "72.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2738",
      "questionFrontendId": "2638",
      "title": "Count the Number of K-Free Subsets",
      "titleSlug": "count-the-number-of-k-free-subsets",
      "acRate": "47.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2741",
      "questionFrontendId": "2629",
      "title": "Function Composition",
      "titleSlug": "function-composition",
      "acRate": "85.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2743",
      "questionFrontendId": "2627",
      "title": "Debounce",
      "titleSlug": "debounce",
      "acRate": "90.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2755",
      "questionFrontendId": "2707",
      "title": "Extra Characters in a String",
      "titleSlug": "extra-characters-in-a-string",
      "acRate": "52.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2756",
      "questionFrontendId": "2706",
      "title": "Buy Two Chocolates",
      "titleSlug": "buy-two-chocolates",
      "acRate": "69.7%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2757",
      "questionFrontendId": "2719",
      "title": "Count of Integers",
      "titleSlug": "count-of-integers",
      "acRate": "34.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2762",
      "questionFrontendId": "2622",
      "title": "Cache With Time Limit",
      "titleSlug": "cache-with-time-limit",
      "acRate": "73.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2789",
      "questionFrontendId": "2665",
      "title": "Counter II",
      "titleSlug": "counter-ii",
      "acRate": "79.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2794",
      "questionFrontendId": "2684",
      "title": "Maximum Number of Moves in a Grid",
      "titleSlug": "maximum-number-of-moves-in-a-grid",
      "acRate": "45.4%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2796",
      "questionFrontendId": "2666",
      "title": "Allow One Function Call",
      "titleSlug": "allow-one-function-call",
      "acRate": "85.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2808",
      "questionFrontendId": "2742",
      "title": "Painting the Walls",
      "titleSlug": "painting-the-walls",
      "acRate": "51.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2809",
      "questionFrontendId": "2667",
      "title": "Create Hello World Function",
      "titleSlug": "create-hello-world-function",
      "acRate": "81.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2810",
      "questionFrontendId": "2735",
      "title": "Collecting Chocolates",
      "titleSlug": "collecting-chocolates",
      "acRate": "32.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2812",
      "questionFrontendId": "2769",
      "title": "Find the Maximum Achievable Number",
      "titleSlug": "find-the-maximum-achievable-number",
      "acRate": "89.6%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2813",
      "questionFrontendId": "2704",
      "title": "To Be Or Not To Be",
      "titleSlug": "to-be-or-not-to-be",
      "acRate": "61.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2818",
      "questionFrontendId": "2713",
      "title": "Maximum Strictly Increasing Cells in a Matrix",
      "titleSlug": "maximum-strictly-increasing-cells-in-a-matrix",
      "acRate": "30.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2820",
      "questionFrontendId": "2703",
      "title": "Return Length of Arguments Passed",
      "titleSlug": "return-length-of-arguments-passed",
      "acRate": "93.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2834",
      "questionFrontendId": "2766",
      "title": "Relocate Marbles",
      "titleSlug": "relocate-marbles",
      "acRate": "51.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2868",
      "questionFrontendId": "2762",
      "title": "Continuous Subarrays",
      "titleSlug": "continuous-subarrays",
      "acRate": "40.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2871",
      "questionFrontendId": "2816",
      "title": "Double a Number Represented as a Linked List",
      "titleSlug": "double-a-number-represented-as-a-linked-list",
      "acRate": "49.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Linked List",
          "slug": "linked-list"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Stack",
          "slug": "stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2876",
      "questionFrontendId": "2798",
      "title": "Number of Employees Who Met the Target",
      "titleSlug": "number-of-employees-who-met-the-target",
      "acRate": "87.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2884",
      "questionFrontendId": "2781",
      "title": "Length of the Longest Valid Substring",
      "titleSlug": "length-of-the-longest-valid-substring",
      "acRate": "36.2%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2917",
      "questionFrontendId": "2824",
      "title": "Count Pairs Whose Sum is Less than Target",
      "titleSlug": "count-pairs-whose-sum-is-less-than-target",
      "acRate": "87.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2921",
      "questionFrontendId": "2801",
      "title": "Count Stepping Numbers in Range",
      "titleSlug": "count-stepping-numbers-in-range",
      "acRate": "27.3%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2954",
      "questionFrontendId": "2841",
      "title": "Maximum Sum of Almost Unique Subarray",
      "titleSlug": "maximum-sum-of-almost-unique-subarray",
      "acRate": "37.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2979",
      "questionFrontendId": "2830",
      "title": "Maximize the Profit as the Salesman",
      "titleSlug": "maximize-the-profit-as-the-salesman",
      "acRate": "35.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2995",
      "questionFrontendId": "2782",
      "title": "Number of Unique Categories",
      "titleSlug": "number-of-unique-categories",
      "acRate": "83.2%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Interactive",
          "slug": "interactive"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "2998",
      "questionFrontendId": "2843",
      "title": "  Count Symmetric Integers",
      "titleSlug": "count-symmetric-integers",
      "acRate": "74.2%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "3018",
      "questionFrontendId": "2825",
      "title": "Make String a Subsequence Using Cyclic Increments",
      "titleSlug": "make-string-a-subsequence-using-cyclic-increments",
      "acRate": "48.7%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "3019",
      "questionFrontendId": "2833",
      "title": "Furthest Point From Origin",
      "titleSlug": "furthest-point-from-origin",
      "acRate": "64.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3025",
      "questionFrontendId": "2835",
      "title": "Minimum Operations to Form Subsequence With Target Sum",
      "titleSlug": "minimum-operations-to-form-subsequence-with-target-sum",
      "acRate": "31.8%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3045",
      "questionFrontendId": "2855",
      "title": "Minimum Right Shifts to Sort the Array",
      "titleSlug": "minimum-right-shifts-to-sort-the-array",
      "acRate": "57.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3062",
      "questionFrontendId": "2877",
      "title": "Create a DataFrame from List",
      "titleSlug": "create-a-dataframe-from-list",
      "acRate": "80.9%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3088",
      "questionFrontendId": "2832",
      "title": "Maximal Range That Each Element Is Maximum in It",
      "titleSlug": "maximal-range-that-each-element-is-maximum-in-it",
      "acRate": "74.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "companyTags": []
    },
    {
      "status": "ac",
      "questionId": "3094",
      "questionFrontendId": "2870",
      "title": "Minimum Number of Operations to Make Array Empty",
      "titleSlug": "minimum-number-of-operations-to-make-array-empty",
      "acRate": "61.9%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3095",
      "questionFrontendId": "2861",
      "title": "Maximum Number of Alloys",
      "titleSlug": "maximum-number-of-alloys",
      "acRate": "37.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3139",
      "questionFrontendId": "2916",
      "title": "Subarrays Distinct Element Sum of Squares II",
      "titleSlug": "subarrays-distinct-element-sum-of-squares-ii",
      "acRate": "18.6%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3150",
      "questionFrontendId": "2904",
      "title": "Shortest and Lexicographically Smallest Beautiful String",
      "titleSlug": "shortest-and-lexicographically-smallest-beautiful-string",
      "acRate": "38.1%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3182",
      "questionFrontendId": "2898",
      "title": "Maximum Linear Stock Score",
      "titleSlug": "maximum-linear-stock-score",
      "acRate": "70.0%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3183",
      "questionFrontendId": "2917",
      "title": "Find the K-or of an Array",
      "titleSlug": "find-the-k-or-of-an-array",
      "acRate": "74.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3184",
      "questionFrontendId": "2926",
      "title": "Maximum Balanced Subsequence Sum",
      "titleSlug": "maximum-balanced-subsequence-sum",
      "acRate": "23.1%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3193",
      "questionFrontendId": "2932",
      "title": "Maximum Strong Pair XOR I",
      "titleSlug": "maximum-strong-pair-xor-i",
      "acRate": "75.8%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3194",
      "questionFrontendId": "2942",
      "title": "Find Words Containing Character",
      "titleSlug": "find-words-containing-character",
      "acRate": "88.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3199",
      "questionFrontendId": "2928",
      "title": "Distribute Candies Among Children I",
      "titleSlug": "distribute-candies-among-children-i",
      "acRate": "74.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3201",
      "questionFrontendId": "2929",
      "title": "Distribute Candies Among Children II",
      "titleSlug": "distribute-candies-among-children-ii",
      "acRate": "34.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3207",
      "questionFrontendId": "2937",
      "title": "Make Three Strings Equal",
      "titleSlug": "make-three-strings-equal",
      "acRate": "42.1%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3208",
      "questionFrontendId": "2949",
      "title": "Count Beautiful Substrings II",
      "titleSlug": "count-beautiful-substrings-ii",
      "acRate": "24.5%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3210",
      "questionFrontendId": "2947",
      "title": "Count Beautiful Substrings I",
      "titleSlug": "count-beautiful-substrings-i",
      "acRate": "61.5%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3211",
      "questionFrontendId": "2945",
      "title": "Find Maximum Non-decreasing Array Length",
      "titleSlug": "find-maximum-non-decreasing-array-length",
      "acRate": "14.9%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3216",
      "questionFrontendId": "2927",
      "title": "Distribute Candies Among Children III",
      "titleSlug": "distribute-candies-among-children-iii",
      "acRate": "48.5%",
      "difficulty": "Hard",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3218",
      "questionFrontendId": "2973",
      "title": "Find Number of Coins to Place in Tree Nodes",
      "titleSlug": "find-number-of-coins-to-place-in-tree-nodes",
      "acRate": "35.0%",
      "difficulty": "Hard",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3242",
      "questionFrontendId": "3005",
      "title": "Count Elements With Maximum Frequency",
      "titleSlug": "count-elements-with-maximum-frequency",
      "acRate": "79.5%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3273",
      "questionFrontendId": "2979",
      "title": "Most Expensive Item That Can Not Be Bought",
      "titleSlug": "most-expensive-item-that-can-not-be-bought",
      "acRate": "79.7%",
      "difficulty": "Medium",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Number Theory",
          "slug": "number-theory"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3275",
      "questionFrontendId": "3014",
      "title": "Minimum Number of Pushes to Type Word I",
      "titleSlug": "minimum-number-of-pushes-to-type-word-i",
      "acRate": "63.0%",
      "difficulty": "Easy",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3276",
      "questionFrontendId": "3016",
      "title": "Minimum Number of Pushes to Type Word II",
      "titleSlug": "minimum-number-of-pushes-to-type-word-ii",
      "acRate": "69.8%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3299",
      "questionFrontendId": "3020",
      "title": "Find the Maximum Number of Elements in Subset",
      "titleSlug": "find-the-maximum-number-of-elements-in-subset",
      "acRate": "24.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Enumeration",
          "slug": "enumeration"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3343",
      "questionFrontendId": "3032",
      "title": "Count Numbers With Unique Digits II",
      "titleSlug": "count-numbers-with-unique-digits-ii",
      "acRate": "87.3%",
      "difficulty": "Easy",
      "isPaidOnly": true,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3351",
      "questionFrontendId": "3075",
      "title": "Maximize Happiness of Selected Children",
      "titleSlug": "maximize-happiness-of-selected-children",
      "acRate": "40.2%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "companyTags": []
    },
    {
      "status": "",
      "questionId": "3354",
      "questionFrontendId": "3081",
      "title": "Replace Question Marks in String to Minimize Its Value",
      "titleSlug": "replace-question-marks-in-string-to-minimize-its-value",
      "acRate": "25.0%",
      "difficulty": "Medium",
      "isPaidOnly": false,
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        },
        {
          "name": "Counting",
          "slug": "counting"
        }
      ],
      "companyTags": []
    }
  ],
  "frequencies": "{\"104\": [6, 7, 15, 126, 0.13417936772507644, 0.17852496915836982, 0.640530398273988, 4.163974557299347, 1], \"572\": [3, 7, 15, 291, 0.12226878492764151, 0.5353772423483739, 1.4472589455437133, 7.101747383960981, 1], \"448\": [0, 1, 4, 58, 0, 0, 0.22760642132910802, 4.00255851679282, 3], \"451\": [2, 3, 6, 46, 0.09958470542943662, 0.2115583769789802, 0.6639286345608053, 4.032339188304141, 1], \"25\": [5, 7, 27, 245, 0.251823398898841, 0.4455078758569304, 2.235431471611754, 6.525904157102483, 1], \"50\": [8, 18, 29, 190, 0.3192012350243432, 1.065966077415236, 1.7819188072533192, 5.361777530321533, 1], \"314\": [7, 7, 10, 93, 0.7098839729154691, 0.7098839729154691, 1.1345277510542053, 5.212042197202205, 1], \"20\": [27, 52, 116, 836, 0.958119052587153, 1.9401630067997453, 3.419196255061409, 7.3317548570303686, 1], \"98\": [11, 15, 40, 320, 0.5274490283079151, 0.8292584800189066, 2.320900831668084, 6.369422515152919, 1], \"169\": [15, 33, 45, 215, 0.5655365253449819, 1.5433616544425082, 2.059688761062885, 5.0576353935569225, 1], \"23\": [19, 23, 91, 737, 1.291148521353734, 1.5818887768221734, 4.054280564003463, 8.188229682150343, 1], \"3\": [32, 63, 130, 870, 1.1682783341959657, 2.255569718439125, 3.5618899242141726, 7.39331659193232, 1], \"1\": [99, 208, 378, 3309, 2.2438849380636507, 3.4607487689283594, 4.737734622874912, 9.023726350034586, 1], \"496\": [7, 12, 33, 143, 0.5726000760164105, 1.1851854343522468, 2.900138141767193, 5.77932099886711, 1], \"238\": [20, 28, 56, 456, 0.818645762662845, 1.2482261673193715, 2.392117581662433, 6.483311515563771, 1], \"5\": [25, 59, 103, 1092, 1.2799870834327018, 2.6613257609736887, 3.74375699037189, 8.364523494814687, 1], \"102\": [5, 11, 25, 217, 0.14123826870045617, 0.5505596480203957, 1.5670471313771777, 5.658555735493162, 1], \"545\": [3, 4, 18, 106, 0.760450862456052, 1.107015699464489, 3.6733865855971115, 7.252003140344425, 1], \"692\": [1, 2, 18, 313, 0, 0.17284281283941086, 2.790122777531306, 8.294962267380239, 2], \"617\": [1, 3, 4, 54, 0, 0.3074846997479606, 0.49469624183610705, 4.7676291136857945, 2], \"53\": [18, 34, 90, 652, 0.7933374025825713, 1.6714508253819642, 3.4389197800251354, 7.362509952032477, 1], \"200\": [26, 47, 204, 2141, 1.5903075028231541, 2.5448095420160053, 5.03170602403879, 9.33703721726662, 1], \"16\": [1, 5, 18, 140, 0, 0.2924262358737592, 1.6868014490475884, 5.588387888729336, 2], \"146\": [24, 43, 168, 1478, 1.7066683659340096, 2.6624415771853855, 4.947943176309817, 9.105358242103302, 1], \"121\": [28, 64, 139, 896, 0.9699334680461713, 2.2519763437119873, 3.6577635949983844, 7.416687689420221, 1], \"138\": [5, 16, 53, 651, 0.24225794733752515, 1.3368460857059095, 3.4557708062977524, 8.30052025593081, 1], \"106\": [2, 4, 8, 61, 0.06053284922884233, 0.2228314901476892, 0.6923668449760643, 4.078383221675181, 1], \"126\": [0, 3, 19, 183, 0, 0.38441169891033206, 2.9857871510205927, 7.455920046408725, 2], \"109\": [3, 5, 7, 71, 0.31732144188640793, 0.7116471943038656, 1.1096165262591235, 5.347917319327901, 1], \"8\": [5, 10, 25, 180, 0.1469776341352236, 0.49060999162570273, 1.601043052652272, 5.328813400460407, 1], \"768\": [0, 2, 6, 406, 0, 0.1656671218888174, 0.9637930658591585, 8.726436811521854, 2], \"29\": [5, 6, 12, 95, 0.22639030741307972, 0.3117796240308414, 0.9015484501369516, 4.5295570165524435, 1], \"21\": [8, 22, 48, 744, 0.16971838464062922, 0.8749869257329194, 2.0358761439225437, 7.369553033057539, 1], \"91\": [9, 10, 26, 181, 0.8152409393326635, 0.9381343937996487, 2.443495878205479, 6.226680068723822, 1], \"152\": [8, 15, 37, 213, 0.4239942485768649, 1.0495745691068947, 2.509223544484413, 5.927810123489846, 1], \"22\": [20, 32, 61, 320, 1.2690706319380771, 2.021191814957574, 3.2105032767938964, 6.477036203485848, 1], \"127\": [20, 29, 90, 543, 1.968411569673036, 2.6060476150287624, 4.704077167298953, 8.328484643125552, 1], \"236\": [11, 15, 52, 343, 0.717120931457944, 1.0817170426252198, 3.1958750212628257, 6.919321804783803, 1], \"433\": [2, 2, 4, 18, 0.13397932096347895, 0.13397932096347895, 0.45328763125380567, 2.5347203555002196, 1], \"19\": [11, 17, 32, 203, 0.43127299206403696, 0.8276250947884988, 1.7161878367480832, 5.218412424191316, 1], \"298\": [0, 0, 2, 20, 0, 0, 0.8873031950009028, 4.968820743663249, 3], \"60\": [1, 3, 7, 33, 0, 0.2071597101203954, 0.8123500659508137, 3.3621676136195546, 2], \"733\": [5, 13, 32, 193, 0.37755631999108785, 1.411210712384425, 2.9851257641600126, 6.519926594803442, 1], \"187\": [1, 2, 3, 32, 0, 0.14413390158378703, 0.29924289485285693, 3.705980456890628, 2], \"45\": [4, 12, 29, 251, 0.09848049890425715, 0.6582637489517684, 1.8625044343401154, 6.012515665445061, 1], \"237\": [3, 5, 12, 63, 0.11027072063891692, 0.28053222073887357, 1.0526678126174493, 3.959133991012583, 1], \"300\": [13, 19, 27, 163, 0.8933131294523929, 1.406791645028386, 1.9776092853267835, 5.428869838974893, 1], \"111\": [0, 2, 6, 41, 0, 0.06080900459560568, 0.4474149929666741, 3.308642024536675, 2], \"540\": [6, 14, 32, 129, 0.5138062519041285, 1.5383105684185163, 3.000942557019398, 5.741291524744728, 1], \"239\": [5, 17, 69, 404, 0.245122458032985, 1.4377265347521613, 3.92254610425911, 7.494856211608284, 1], \"49\": [27, 45, 115, 529, 1.3197975656501046, 2.1486662725619317, 3.8624347306959965, 6.951466953180971, 1], \"155\": [14, 22, 44, 351, 0.8821898380269774, 1.5034349296806127, 2.7072791910408855, 6.783832002210855, 1], \"76\": [8, 15, 39, 257, 0.3965535278076012, 0.9973273882365314, 2.531037720108022, 6.212419146444544, 1], \"4\": [29, 53, 99, 637, 1.5809496704858346, 2.554199304152189, 3.7636079725670046, 7.52132479156557, 1], \"133\": [3, 4, 10, 116, 0.10724553035359762, 0.18336922582639836, 0.8144181862680473, 5.137314120969195, 1], \"206\": [12, 18, 35, 365, 0.209549874676889, 0.42168384981416407, 1.0929842636389617, 5.378417606096676, 1], \"171\": [2, 4, 5, 39, 0.13047795513763227, 0.4430763788539477, 0.6265158787492435, 3.988919520027714, 1], \"687\": [0, 1, 2, 22, 0, 0, 0.5042466526679481, 4.386320680736236, 3], \"46\": [5, 14, 34, 190, 0.1644113478941177, 0.8758856149468116, 2.2260328317699334, 5.556988119099774, 1], \"516\": [1, 5, 11, 75, 0, 0.5957174923400869, 1.597642231761335, 5.216156510558145, 2], \"348\": [1, 3, 17, 164, 0, 0.5742859776832164, 3.254775379206555, 7.690787818961386, 2], \"207\": [19, 28, 87, 364, 1.291148521353734, 1.9061007204329181, 3.965906442250541, 6.867374569757305, 1], \"273\": [3, 5, 37, 284, 0.4578330936254804, 0.9604619501872924, 4.396365653042684, 8.413641304511742, 1], \"271\": [0, 1, 3, 12, 0, 0, 0.38441169891033206, 2.1400661634962708, 3], \"12\": [5, 6, 47, 298, 0.20513166940277638, 0.2835752904991275, 3.0501445603901476, 6.688046972438405, 1], \"694\": [1, 1, 8, 87, 0, 0, 2.1435203983643585, 6.784157306898374, 3], \"124\": [7, 13, 24, 249, 0.38208534022918533, 0.9574089788036277, 1.8671893186396926, 6.371074154374059, 1], \"403\": [0, 1, 5, 65, 0, 0, 1.2181574393178924, 5.999881406708128, 3], \"167\": [2, 4, 17, 137, 0.02149464806795253, 0.08333815335065554, 0.9438276943980702, 4.63424369728292, 1], \"2\": [31, 57, 103, 958, 1.2645943146046332, 2.2557840373226297, 3.365609149692422, 7.736577603261078, 1], \"346\": [0, 0, 5, 57, 0, 0, 0.6518655215866413, 4.79122251986858, 3], \"230\": [1, 4, 14, 100, 0, 0.13696585507315742, 1.028963894378268, 4.529833512924914, 2], \"85\": [3, 4, 9, 77, 0.2593232078917121, 0.42285685082003355, 1.2986847190810076, 5.2782824754386, 1], \"652\": [0, 2, 5, 46, 0, 0.23922968906583414, 0.9892397315203227, 4.969625594272775, 2], \"812\": [2, 3, 7, 32, 0.07651914983419623, 0.16460422889798626, 0.6801404939454334, 3.0614194885668033, 1], \"103\": [6, 12, 41, 383, 0.3449358288097977, 0.9736525320980864, 3.0073351792905987, 7.4174551980972225, 1], \"297\": [3, 5, 32, 346, 0.1705444896029347, 0.41642412189788386, 3.098154592639218, 7.755410808349202, 1], \"347\": [18, 28, 67, 340, 0.9140742551632632, 1.5295796895872102, 3.077575799881185, 6.27207450321568, 1], \"33\": [14, 24, 56, 477, 0.5848988368867054, 1.2047024650660798, 2.618632332809698, 6.819633483489498, 1], \"215\": [16, 29, 54, 349, 0.9330175256794686, 1.802743104362019, 2.921346227523518, 6.590802868428752, 1], \"445\": [2, 5, 12, 121, 0.22825865198098017, 0.9564971523521957, 2.325399770760217, 6.836659972147763, 1], \"112\": [7, 8, 15, 95, 0.38915153261664065, 0.4832648241871193, 1.1582846201545078, 4.484372903312276, 1], \"101\": [5, 9, 22, 196, 0.18205528066403623, 0.4989341129168614, 1.5822341623550085, 5.729570619299206, 1], \"253\": [5, 9, 65, 425, 0.42725858927476734, 1.0032310331325633, 4.415907631030988, 8.15847290507374, 1], \"212\": [7, 8, 37, 288, 0.7508128224097544, 0.9006438410924963, 3.4699857367315383, 7.538099932103426, 1], \"32\": [6, 11, 27, 138, 0.41640457510971374, 1.0065011948398952, 2.438785088156865, 5.613960316634602, 1], \"113\": [0, 0, 6, 79, 0, 0, 0.6782113971423434, 5.131205696301344, 3], \"110\": [4, 8, 12, 82, 0.11848160362052347, 0.40755934971127916, 0.7570959051602187, 3.986418447489342, 1], \"100\": [7, 11, 20, 115, 0.23496529027937663, 0.5032292768740559, 1.1512560221535317, 4.2834001511974, 1], \"149\": [1, 3, 10, 79, 0, 0.3624832855344793, 1.7671882084975497, 5.716899946695093, 2], \"39\": [8, 13, 24, 166, 0.34433190055061186, 0.7349706002688476, 1.5474395150500317, 5.181678906828507, 1], \"450\": [4, 6, 12, 70, 0.30715417586460125, 0.5927679952523232, 1.4436088177158708, 4.710541937537851, 1], \"643\": [2, 3, 3, 15, 0.042833099994136516, 0.0939167287975245, 0.0939167287975245, 1.2417617574333946, 1], \"535\": [1, 1, 2, 57, 0, 0, 0.3933437475758196, 5.97239839553492, 3], \"30\": [1, 2, 4, 50, 0, 0.05007303798232116, 0.18680443333751465, 3.4993044401105844, 2], \"498\": [3, 3, 3, 39, 0.31508104663989533, 0.31508104663989533, 0.31508104663989533, 4.152496994893147, 1], \"232\": [7, 8, 15, 90, 0.4044472963154637, 0.5014224473674247, 1.1905566575782667, 4.423658067532898, 1], \"10\": [11, 17, 26, 149, 0.9319436644422028, 1.542623691046371, 2.261816108095049, 5.647055041123532, 1], \"97\": [0, 2, 5, 66, 0, 0.10161017641078245, 0.5118945709548958, 4.766187989359599, 2], \"386\": [2, 3, 3, 15, 0.39730179746900346, 0.7407752295491999, 0.7407752295491999, 3.3477623002061296, 1], \"117\": [0, 1, 8, 101, 0, 0, 1.0163479536970847, 5.641975450680153, 3], \"632\": [5, 8, 18, 63, 1.3893018821838459, 2.1593226526835414, 3.6251982869021546, 6.163387822766871, 1], \"125\": [3, 4, 12, 91, 0.026355844705362532, 0.04638512658093504, 0.35578433975339946, 3.2415253878234216, 1], \"202\": [9, 14, 26, 99, 0.5640160883884201, 1.0415089000021922, 1.991111155882869, 4.529193879673058, 1], \"669\": [1, 1, 4, 29, 0, 0, 0.9808292530117262, 4.484178884345742, 3], \"387\": [10, 12, 31, 244, 0.965467967850239, 1.2064088591238171, 2.8109687131044847, 6.8676165925151595, 1], \"43\": [5, 7, 11, 63, 0.3046316307655542, 0.5294544435994839, 1.0019716895855355, 4.0524536205129404, 1], \"257\": [0, 0, 3, 47, 0, 0, 0.24181316915676582, 4.221606341833028, 3], \"837\": [1, 1, 3, 375, 0, 0, 0.37156355643248307, 8.671950101443874, 3], \"142\": [2, 2, 11, 81, 0.021517774809144227, 0.021517774809144227, 0.5055917223839337, 3.602149811124791, 1], \"67\": [4, 9, 17, 73, 0.12555653398976382, 0.5171600340113038, 1.2285838408669902, 3.8189611324073063, 1], \"211\": [0, 0, 7, 84, 0, 0, 0.8180822993424013, 5.2112637053663455, 3], \"339\": [1, 1, 4, 34, 0, 0, 0.4653632496892333, 3.779971997974058, 3], \"42\": [38, 72, 144, 1075, 2.1061482538683434, 3.1095789583889517, 4.604271580125433, 8.525402877007894, 1], \"235\": [6, 8, 17, 135, 0.3181698955520328, 0.5104093040264222, 1.3881137248446165, 5.250419364117448, 1], \"84\": [10, 24, 45, 257, 0.6886773444613254, 1.9033936241549987, 3.047820593747453, 6.476833591929284, 1], \"139\": [10, 14, 49, 416, 0.6474941668867665, 1.0242707644195317, 3.129696177367946, 7.354629128415722, 1], \"684\": [2, 3, 7, 25, 0.1391128024627178, 0.28954600588984364, 1.039696405131515, 3.19133587888665, 1], \"123\": [1, 2, 12, 114, 0, 0.08552217343816201, 1.4384801142904609, 5.673630043871141, 2], \"653\": [1, 2, 10, 63, 0, 0.15656906069153992, 1.6558038329920262, 5.130951214706989, 2], \"28\": [7, 12, 20, 138, 0.18369235892773328, 0.4653632496892333, 0.973083280897071, 4.374125129469248, 1], \"75\": [2, 10, 25, 181, 0.024258315059789946, 0.47863721612783605, 1.576234662643643, 5.308817601181903, 1], \"803\": [6, 6, 18, 77, 0.5543107357057295, 0.5543107357057295, 2.03688192726104, 4.812150897688021, 1], \"636\": [0, 0, 3, 40, 0, 0, 0.42285685082003355, 4.549311237075284, 3], \"609\": [0, 0, 2, 14, 0, 0, 0.9555114450274365, 4.37449836825309, 3], \"74\": [10, 17, 38, 224, 0.4679131402060907, 1.0022275460477124, 2.2634025652692094, 5.705046591791135, 1], \"472\": [10, 11, 64, 284, 2.354855102082187, 2.5430227017922484, 5.189212535589579, 8.860462565897155, 1], \"329\": [1, 2, 11, 74, 0, 0.11030454201470608, 1.5102133759827472, 5.079228992953891, 2], \"268\": [4, 10, 22, 196, 0.08515780834030685, 0.44183275227903923, 1.3053252985862236, 5.367947072250064, 1], \"136\": [8, 13, 27, 158, 0.2856138193877219, 0.6275061234782741, 1.5614015962812435, 4.867121141914877, 1], \"583\": [0, 0, 3, 17, 0, 0, 0.4700036292457356, 3.008977500304012, 3], \"199\": [7, 12, 30, 191, 0.2919980049173496, 0.6914155783956674, 1.9780140734441336, 5.535220490550828, 1], \"179\": [3, 5, 11, 86, 0.25708853309999324, 0.5957174923400869, 1.597642231761335, 5.4885742391002275, 1], \"657\": [0, 0, 2, 31, 0, 0, 0.1506602748874898, 3.690504149840938, 3], \"289\": [3, 4, 16, 114, 0.19331931100349597, 0.321465133695426, 1.9553441812886718, 5.733218568100905, 1], \"143\": [7, 12, 22, 149, 0.007832896483154354, 0.022846532477799608, 0.07480468297358764, 1.5179533750914713, 1], \"145\": [0, 5, 5, 36, 0, 0.19112849146935687, 0.19112849146935687, 2.4780734718492665, 2], \"739\": [8, 10, 23, 141, 0.4832648241871193, 0.6784769908121515, 1.8141604059172216, 5.267958244135723, 1], \"137\": [3, 6, 10, 56, 0.12801544901471223, 0.43585349872021756, 0.9232467556879373, 3.8833612210795674, 1], \"63\": [0, 3, 16, 106, 0, 0.12819804664916004, 1.5873103962270114, 5.1460974457189295, 2], \"17\": [14, 29, 81, 514, 0.8898836196221376, 1.9680436412806412, 3.827863211459149, 7.559191351996119, 1], \"299\": [0, 0, 5, 28, 0, 0, 1.1731453405306764, 4.2626798770413155, 3], \"340\": [0, 0, 7, 56, 0, 0, 1.8632184332102, 5.8563445917983215, 3], \"807\": [12, 12, 12, 27, 1.4825711915553106, 1.4825711915553106, 1.4825711915553106, 2.903290316887721, 1], \"871\": [1, 1, 11, 51, 0, 0, 1.108629066911581, 3.7986513661785013, 3], \"312\": [2, 6, 7, 55, 0.19478832555908462, 1.076872302031704, 1.2904464023297628, 5.097634723583212, 1], \"41\": [9, 17, 37, 248, 0.5973828108459681, 1.3651335970389182, 2.6955948854094722, 6.423622893057436, 1], \"341\": [2, 2, 5, 87, 0.1874629562943733, 0.1874629562943733, 0.8279664033688967, 5.969102978409108, 1], \"295\": [11, 16, 53, 457, 1.0101568681062463, 1.5463029272834483, 3.6619258412180002, 7.917435402949235, 1], \"208\": [2, 5, 18, 146, 0.051227589206673384, 0.28406186115878557, 1.6596662509955493, 5.638728709107885, 1], \"27\": [6, 13, 18, 75, 0.09148070761432414, 0.3713616678559377, 0.6217374929542226, 2.7705909856760615, 1], \"406\": [0, 1, 3, 35, 0, 0, 0.9162907318741551, 5.3238226569563984, 3], \"83\": [2, 5, 10, 86, 0.032762963124623665, 0.1890984308042043, 0.6057572594464781, 4.136477936308349, 1], \"82\": [3, 3, 6, 63, 0.09551262944566821, 0.09551262944566821, 0.3371083689581862, 3.8110576670967737, 1], \"269\": [4, 4, 13, 170, 0.608512795419236, 0.608512795419236, 2.2872854012544006, 7.313854081866605, 1], \"108\": [1, 2, 10, 86, 0, 0.03416216063341746, 0.6253017205458474, 4.178335889675964, 2], \"188\": [0, 1, 11, 77, 0, 0, 1.4496107746020368, 5.080231756970176, 3], \"99\": [1, 1, 15, 121, 0, 0, 1.9459101490553132, 5.969798184134914, 3], \"9\": [14, 24, 40, 223, 0.40009596769310624, 0.8943653712451894, 1.61264561366087, 4.834866518051454, 1], \"242\": [5, 12, 41, 158, 0.06851994643675606, 0.34253286123290394, 1.752463103094956, 4.274161013803344, 1], \"198\": [14, 20, 51, 219, 0.7472144018302211, 1.184047720552676, 2.756516373692589, 5.609060557165818, 1], \"184\": [2, 4, 7, 36, 0.08875000391266996, 0.3157079273023504, 0.759351946151559, 3.4362300283918183, 1], \"240\": [3, 6, 17, 275, 0.19627990904466153, 0.6245845091226487, 2.0749132320550885, 7.499682239375866, 1], \"130\": [1, 2, 7, 64, 0, 0.05588045839445659, 0.5329919192232511, 4.091851034508315, 2], \"165\": [3, 4, 11, 132, 0.3981923487790846, 0.6257058997644127, 2.0249968337114836, 6.845593499521585, 1], \"349\": [7, 10, 17, 106, 0.46041122955429614, 0.7854152024335492, 1.4926090753233987, 4.905875676268535, 1], \"417\": [0, 0, 13, 76, 0, 0, 1.661589424306237, 4.989470122796836, 3], \"626\": [3, 5, 7, 31, 0.17086906306216687, 0.4171290482340788, 0.7003674285334324, 3.039580739586287, 1], \"678\": [2, 3, 6, 51, 0.1217306453046817, 0.25562013999211797, 0.772442783230483, 4.444705113898748, 1], \"70\": [15, 26, 52, 310, 0.579302142921722, 1.2113054638945968, 2.344826379807444, 5.817687131386038, 1], \"223\": [0, 0, 2, 41, 0, 0, 0.22567199766756846, 4.6764894632175515, 3], \"209\": [2, 4, 7, 69, 0.0344861760711693, 0.13133600206108695, 0.3575517524122669, 3.755676935037452, 1], \"560\": [6, 24, 46, 253, 0.25309062768216184, 1.724194149732289, 2.886363736498626, 6.231701047662386, 1], \"15\": [18, 44, 88, 632, 0.6483689521707036, 1.864387890613406, 3.1271087834270803, 7.017552845057567, 1], \"11\": [26, 42, 78, 551, 1.118939009846878, 1.853119339044472, 2.973202233999272, 6.823125249066933, 1], \"7\": [18, 35, 55, 272, 0.876550403224641, 1.8410305182348377, 2.6458370166006375, 5.772303854537071, 1], \"13\": [20, 52, 112, 507, 0.8900432692218101, 2.3652023133946516, 3.764252008580413, 6.819254575882262, 1], \"134\": [9, 20, 32, 203, 0.5964765591581447, 1.6150615464554368, 2.4258804895963966, 6.030673156229531, 1], \"160\": [3, 7, 12, 123, 0.08829260714567831, 0.4071730504533205, 0.9070170950888259, 5.050940231888794, 1], \"56\": [22, 38, 87, 677, 1.2741996135066846, 2.156344391038844, 3.655843768750716, 7.741471386410051, 1], \"38\": [2, 5, 12, 85, 0.06959329179919525, 0.3718741636721289, 1.2794312155775294, 4.876571799398571, 1], \"61\": [3, 7, 13, 78, 0.08593070021460303, 0.39779200957725486, 0.9876603048496634, 4.121603406412465, 1], \"88\": [38, 59, 70, 334, 1.4787108010177898, 2.210212591914674, 2.5252687684666255, 5.570952778302821, 1], \"637\": [0, 1, 2, 25, 0, 0, 0.10033471483971139, 2.8616730371589654, 3], \"54\": [8, 27, 42, 375, 0.4286066366698587, 1.9594350912516931, 2.7567872768528683, 7.061834199315122, 1], \"62\": [6, 14, 36, 199, 0.2635232369750453, 0.9713624735704363, 2.4726882546831828, 5.807140987643354, 1], \"140\": [10, 11, 41, 264, 1.578185368929996, 1.7323360487572543, 4.119811811117117, 7.8358035108805195, 1], \"588\": [4, 4, 22, 132, 1.107015699464489, 1.107015699464489, 4.066828310672477, 7.640823244064834, 1], \"55\": [17, 29, 61, 298, 0.8562282762863359, 1.5975588248805899, 2.914345332594275, 6.0334187963558685, 1], \"72\": [3, 6, 16, 134, 0.10189803234663233, 0.3570324485603081, 1.3990258432289098, 5.370715636890839, 1], \"191\": [4, 5, 14, 45, 0.23815634370339495, 0.3507752218115441, 1.457246097092175, 3.5563079847692673, 1], \"48\": [16, 26, 45, 378, 1.0012151984157105, 1.7130888303732004, 2.6822552102127104, 6.860182562425989, 1], \"57\": [6, 10, 15, 103, 0.24083782012126176, 0.5632831418462052, 0.993979921584758, 4.3975261662473075, 1], \"59\": [0, 2, 10, 71, 0, 0.12796988096337653, 1.4845477697547902, 5.1535677504092705, 2], \"279\": [2, 6, 15, 91, 0.11990392722552108, 0.7638371250040537, 2.099930832132307, 5.578695761902352, 1], \"270\": [1, 1, 3, 40, 0, 0, 0.34560472018448546, 4.309381952715413, 3], \"490\": [0, 1, 3, 63, 0, 0, 0.734450986701181, 6.163387822766871, 3], \"218\": [0, 1, 4, 74, 0, 0, 0.9315582040049435, 6.259506637024015, 3], \"141\": [5, 8, 19, 164, 0.06258298076116925, 0.15300598683074784, 0.6588536012947568, 4.25533968428131, 1], \"96\": [3, 3, 6, 88, 0.26007680635989205, 0.26007680635989205, 0.7830421846764933, 5.547430988324633, 1], \"190\": [0, 2, 8, 36, 0, 0.07095173597228444, 0.7777045685880084, 3.211791969979796, 2], \"114\": [1, 6, 18, 90, 0, 0.47251724598605155, 1.8619447689379791, 4.919294853077505, 2], \"729\": [3, 4, 7, 33, 0.5198754592859085, 0.7939518796819109, 1.5501381701528085, 4.42484663185681, 1], \"129\": [0, 2, 4, 43, 0, 0.06242275791820752, 0.2292440679062072, 3.4266882825555025, 2], \"695\": [6, 9, 27, 185, 0.5491078103370076, 0.9731781062762064, 2.7610899370521906, 6.537539401495263, 1], \"193\": [0, 1, 4, 29, 0, 0, 0.9617082115649478, 4.453759855714967, 3], \"94\": [5, 7, 16, 99, 0.16344179897725258, 0.29863044245188547, 1.0360919316867756, 4.257162926051608, 1], \"416\": [1, 5, 10, 69, 0, 0.3134876112551424, 0.9053325295188448, 4.2643379428733095, 2], \"542\": [2, 6, 19, 82, 0.10084103435079068, 0.6703427047413258, 2.3585491599333444, 5.189369522257369, 1], \"658\": [4, 9, 22, 79, 0.3452699473247421, 1.1274034390521213, 2.600778735120839, 5.086673165192128, 1], \"175\": [2, 3, 8, 72, 0.03724825388061888, 0.08193844283843557, 0.474500146110692, 3.9156974607622783, 1], \"122\": [2, 7, 22, 205, 0.026196651946570663, 0.2815251347893198, 1.4378613406799747, 5.634308399154356, 1], \"309\": [1, 3, 5, 45, 0, 0.2593232078917121, 0.6001369853410621, 4.2137831467787965, 2], \"564\": [1, 2, 5, 36, 0, 0.41397579777607296, 1.436304781694552, 5.118914622794893, 2], \"151\": [4, 11, 15, 111, 0.0780884369714366, 0.4788476540421883, 0.7618015852980233, 4.151719158746658, 1], \"402\": [1, 1, 6, 63, 0, 0, 0.7554300247738515, 4.831668605002525, 3], \"153\": [1, 4, 14, 130, 0, 0.09102356752678027, 0.773510540534619, 4.621586221289959, 2], \"78\": [4, 15, 31, 205, 0.1098496984919854, 0.9680483596614233, 2.076170595641561, 5.723490236092635, 1], \"26\": [12, 32, 40, 186, 0.2854997939770356, 1.2088712965070125, 1.5414607185077198, 4.386828076888421, 1], \"538\": [0, 1, 8, 47, 0, 0, 2.0552142463445118, 5.4638318050256105, 3], \"183\": [0, 3, 6, 35, 0, 0.1560250946216086, 0.5160651567106544, 3.177350018002177, 2], \"79\": [3, 8, 47, 356, 0.07302513501488987, 0.4309512520915051, 2.9752374875793315, 6.964641858814123, 1], \"120\": [5, 6, 14, 81, 0.25131442828090605, 0.34460236270446315, 1.1755733298042381, 4.330507750933192, 1], \"394\": [2, 4, 19, 151, 0.06603058152308591, 0.24140581062674824, 1.9685671799391753, 5.966391742799972, 1], \"37\": [4, 10, 16, 91, 0.29031019485805043, 1.133098464739279, 1.8546518994589574, 5.166708935876567, 1], \"543\": [8, 12, 33, 196, 0.40032370860774574, 0.7455936559324878, 2.238251679025689, 5.692073161803415, 1], \"647\": [6, 7, 14, 62, 0.5431628262327367, 0.6840882358711935, 1.594903946464674, 4.357145502310766, 1], \"628\": [1, 2, 5, 52, 0, 0.10508346897368827, 0.5262190008387144, 4.32945682972767, 2], \"176\": [1, 5, 12, 116, 0, 0.2046262012375189, 0.8363388465974841, 4.813940269119823, 2], \"186\": [0, 0, 0, 15, 0, 0, 0, 3.7716759862685634, 4], \"581\": [1, 1, 9, 37, 0, 0, 1.9587171544117037, 4.6437400222426035, 3], \"231\": [2, 8, 12, 61, 0.029306126585499394, 0.3892249010853513, 0.7278538603254449, 3.3556917802311217, 1], \"410\": [3, 7, 16, 74, 0.2520218920528967, 0.940206283270713, 2.214067080730717, 5.167040028538892, 1], \"508\": [0, 0, 1, 18, 0, 0, 0, 3.815149961151505, 4], \"69\": [3, 13, 22, 114, 0.05074369283483175, 0.6818049039560108, 1.3348184072091824, 4.332899875401135, 1], \"24\": [6, 11, 19, 127, 0.3371083689581862, 0.8533248413590534, 1.6134388068574672, 5.196341366887031, 1], \"73\": [7, 16, 29, 156, 0.29411631776060787, 1.0247726792350496, 1.9269903938010395, 5.140642806612056, 1], \"283\": [9, 18, 28, 145, 0.27074481781742316, 0.8081539197187015, 1.3886907198031988, 4.4031785075140935, 1], \"177\": [0, 3, 8, 78, 0, 0.18884373606243307, 0.9074760146282086, 4.9523568401222535, 2], \"116\": [3, 5, 14, 170, 0.1920777317393193, 0.462623521948113, 1.7248652343980246, 6.514847167612198, 1], \"322\": [8, 16, 50, 339, 0.3541485148308049, 0.993202585828453, 2.8679139930807853, 6.62996736839755, 1], \"377\": [0, 1, 6, 38, 0, 0, 1.0459685551826876, 4.318171640562239, 3], \"204\": [4, 8, 14, 76, 0.16882086957505205, 0.5513717181603406, 1.179538778988654, 4.210508578309631, 1], \"328\": [5, 11, 17, 85, 0.2583649862775729, 0.8866092806020918, 1.4834253522236052, 4.45667564979056, 1], \"460\": [5, 7, 17, 168, 0.9892397315203227, 1.4611260095806748, 3.021742409391603, 7.545109878479098, 1], \"221\": [1, 1, 8, 155, 0, 0, 1.0986122886681096, 6.613730252138098, 3], \"71\": [4, 5, 11, 92, 0.17228309044709728, 0.2575620081493058, 0.8845344523170849, 4.6097542576530275, 1], \"801\": [2, 4, 14, 67, 0.13047795513763227, 0.4430763788539477, 2.057869056425708, 5.058861170995308, 1], \"503\": [8, 9, 22, 120, 0.9923672086005493, 1.1469392071616573, 2.627432615574382, 5.947938025528088, 1], \"287\": [12, 23, 47, 216, 0.11879474826067617, 0.38075205615917923, 1.0767086470968055, 3.7345446418513752, 1], \"31\": [10, 23, 48, 273, 0.6053792021874724, 1.686583813539329, 3.0040998299353046, 6.422682925593661, 1], \"380\": [7, 11, 31, 260, 0.5108256237659907, 0.9731467568397101, 2.6443880909668067, 6.816449404722721, 1], \"93\": [0, 0, 6, 75, 0, 0, 0.9039702474861145, 5.44064920709862, 3], \"463\": [0, 1, 3, 43, 0, 0, 0.29048712337938953, 4.252073636660092, 3], \"68\": [4, 5, 6, 55, 0.34008234884531263, 0.49036455189465067, 0.6478319843479028, 4.351339031018711, 1], \"36\": [13, 20, 48, 209, 0.7531458242651726, 1.2973468751033945, 2.7923391996571976, 5.67480732297951, 1], \"640\": [0, 0, 0, 18, 0, 0, 0, 5.37989735354046, 4], \"412\": [5, 13, 20, 93, 0.31508104663989533, 1.2538206100535034, 1.9352717508502575, 4.860845462304786, 1], \"866\": [0, 0, 3, 40, 0, 0, 0.676886659688165, 5.153540180665239, 3], \"128\": [18, 31, 55, 213, 0.9684610999165028, 1.7657906181506056, 2.788379922938375, 5.437164597470603, 1], \"252\": [1, 2, 4, 65, 0, 0.2016859239757458, 0.6386143015396952, 5.468201563847854, 2], \"868\": [0, 0, 4, 13, 0, 0, 1.6722858160937641, 3.843223165502454, 3], \"118\": [8, 26, 41, 150, 0.46570804012471456, 1.9830765889305875, 2.808151312533081, 5.344849809437416, 1], \"228\": [1, 2, 2, 33, 0, 0.04808618666763778, 0.04808618666763778, 2.6680147061865034, 2], \"224\": [3, 5, 17, 136, 0.21205871888971678, 0.5045064874145122, 2.150051652411683, 6.178438136951483, 1], \"51\": [6, 9, 22, 146, 0.4451649779548489, 0.8161088916947803, 2.14463697317277, 5.808217328376318, 1], \"344\": [2, 6, 13, 119, 0.032028358148352844, 0.25690405697068114, 0.86504026128808, 4.7555172912777435, 1], \"105\": [10, 11, 22, 200, 0.7603160661330916, 0.8663153553674128, 1.8737277792471405, 6.115050688424584, 1], \"173\": [1, 2, 8, 99, 0, 0.09440968447107469, 0.949399890481434, 5.495523471381628, 2], \"378\": [1, 1, 8, 91, 0, 0, 1.222893791714887, 5.740274509164113, 3], \"203\": [0, 3, 5, 62, 0, 0.10867135530512761, 0.2767810347179666, 3.9126350629806614, 2], \"557\": [1, 1, 4, 48, 0, 0, 0.38378938262912404, 4.224911037504159, 3], \"855\": [0, 4, 52, 197, 0, 1.499234772300486, 5.385241313503684, 8.854157787111479, 2], \"107\": [1, 2, 8, 37, 0, 0.0901510969942975, 0.920057214669632, 3.505189036328818, 2], \"229\": [4, 6, 8, 71, 0.2669133955058672, 0.5237437365390372, 0.7991766884537416, 4.578684858457492, 1], \"414\": [1, 1, 5, 30, 0, 0, 0.34587301090591877, 2.7648106171718156, 3], \"64\": [2, 6, 13, 153, 0.04652001563489285, 0.35667494393873234, 1.1025726898842065, 5.633640984575734, 1], \"144\": [4, 6, 6, 25, 0.10821358464023274, 0.22884157242884745, 0.22884157242884745, 1.6982334112172315, 1], \"301\": [0, 0, 4, 46, 0, 0, 0.6308040499858097, 4.764425554099715, 3], \"724\": [6, 13, 25, 65, 0.36471102760878493, 1.1203785651500642, 2.15647049683684, 3.9636732043328604, 1], \"131\": [2, 6, 14, 86, 0.07369816407476748, 0.5237437365390372, 1.5576413214432436, 4.958744726344441, 1], \"642\": [2, 2, 6, 124, 0.6257058997644127, 0.6257058997644127, 2.1777117631126375, 8.02098771422109, 1], \"893\": [5, 9, 36, 240, 0.5536810524156082, 1.2227306813964929, 3.6077386578235395, 7.432688539110195, 1], \"452\": [3, 3, 7, 26, 0.09930976412767221, 0.09930976412767221, 0.4500849859392163, 2.1795388107701124, 1], \"34\": [10, 14, 37, 185, 0.4925825690102683, 0.8098687576727652, 2.2735881952352535, 5.388408813834267, 1], \"150\": [13, 14, 32, 115, 1.0061727280177446, 1.1027106550603918, 2.4435069730410826, 4.918375897395572, 1], \"181\": [0, 5, 7, 84, 0, 0.3035135376684616, 0.5277036615533424, 4.615962799476863, 2], \"413\": [2, 3, 3, 21, 0.4795730802618863, 0.8690378470236095, 0.8690378470236095, 4.231874360813318, 1], \"315\": [1, 2, 6, 111, 0, 0.18400364297693944, 1.0360919316867756, 6.426269048941932, 2], \"898\": [3, 6, 9, 28, 0.23987034511952326, 0.734450986701181, 1.235401421299467, 3.2033339870210242, 1], \"210\": [16, 19, 61, 299, 1.4144821344023457, 1.6848658333709396, 3.7698584208879535, 6.98393573654666, 1], \"675\": [0, 0, 2, 63, 0, 0, 0.46813621507094005, 6.377133447279234, 3], \"720\": [1, 1, 3, 17, 0, 0, 1.0045833390198333, 4.035601182579955, 3], \"95\": [4, 6, 8, 41, 0.6257058997644127, 1.084013489246957, 1.499234772300486, 4.525679861954501, 1], \"261\": [1, 1, 3, 45, 0, 0, 0.37156355643248307, 4.627420794922911, 3], \"782\": [2, 4, 6, 43, 0.05236798551731598, 0.19478832555908462, 0.39465419200394874, 3.2523937904393354, 1], \"14\": [22, 45, 77, 308, 0.9375715095503337, 2.015010023912973, 2.9974162481310005, 5.7220784964898215, 1], \"785\": [2, 3, 9, 65, 0.4321333551903257, 0.7958013346200287, 2.4803919694334735, 6.340329348282569, 1], \"813\": [1, 3, 5, 43, 0, 0.30538164955118186, 0.689171032180306, 4.309093186172346, 2], \"789\": [2, 7, 11, 85, 0.08739182211500984, 0.7508128224097544, 1.3250988000929709, 5.111712677622738, 1], \"579\": [0, 0, 0, 8, 0, 0, 0, 3.243193132518907, 4], \"744\": [5, 8, 11, 43, 0.5366262697107239, 1.0360919316867756, 1.490091154801534, 3.980212524010516, 1], \"860\": [1, 4, 7, 47, 0, 0.608512795419236, 1.2712888781028824, 4.759216148290776, 2], \"35\": [4, 9, 19, 93, 0.06259375686392714, 0.28292714417485987, 0.8991071990045649, 3.581217363949746, 1], \"449\": [0, 0, 6, 72, 0, 0, 1.6459716557665565, 6.3945124723140285, 3], \"438\": [2, 3, 17, 138, 0.09787757530957068, 0.20812125379246896, 2.131714433226202, 6.186838535905264, 1], \"436\": [0, 2, 3, 9, 0, 0.2856138193877219, 0.5560675878793254, 2.040468731680326, 2], \"234\": [5, 16, 34, 219, 0.004185087131625397, 0.04204853228040892, 0.17724531127669718, 2.2022853846273374, 1], \"362\": [0, 0, 6, 80, 0, 0, 1.591893602783191, 6.537571114541417, 3], \"633\": [2, 4, 5, 15, 0.29849298855599654, 0.8718389693033213, 1.1549652252192413, 3.0236011725627834, 1], \"505\": [1, 1, 2, 31, 0, 0, 0.6359887667199967, 5.3685687050922954, 3], \"661\": [2, 2, 3, 6, 0.538996500732687, 0.538996500732687, 0.9582549309731873, 2.005333569526114, 1], \"66\": [6, 13, 19, 91, 0.1415787733316046, 0.5388204536924633, 0.9262954393102703, 3.583108113807896, 1], \"58\": [2, 3, 9, 36, 0.01847627616757318, 0.04110167568555186, 0.3203590984780812, 1.951886262458655, 1], \"494\": [1, 5, 8, 56, 0, 0.43327438680659236, 0.8705760937260314, 4.234483685176931, 2], \"409\": [1, 3, 9, 40, 0, 0.13678342801089993, 0.8412301638247786, 3.2980060642518745, 2], \"493\": [0, 8, 16, 57, 0, 1.107015699464489, 2.2084135052540255, 4.642624490885519, 2], \"381\": [0, 1, 4, 32, 0, 0, 1.0288165267325677, 4.754074382274494, 3], \"185\": [1, 1, 7, 74, 0, 0, 0.7366322924996841, 4.8096517925137245, 3], \"570\": [5, 7, 8, 34, 0.157956862141494, 0.28922092887241174, 0.3632922890943009, 2.187442305978029, 1], \"44\": [4, 13, 18, 85, 0.27475300125292357, 1.4678561333419557, 2.001907213716568, 4.968329986572265, 1], \"350\": [2, 3, 7, 80, 0.07956481041235021, 0.17086906306216687, 0.7003674285334324, 4.894140248500224, 1], \"205\": [8, 9, 20, 100, 0.29244776852479537, 0.35762990183400095, 1.1388396265850198, 3.9904377350630753, 1], \"222\": [0, 2, 7, 43, 0, 0.04362742017962607, 0.4358425582560355, 3.0733021552804116, 2], \"217\": [12, 21, 46, 214, 0.3411398774793469, 0.8087319299936311, 1.9421926726551808, 4.869794848267349, 1], \"396\": [0, 0, 1, 5, 0, 0, 0, 1.3984157216522355, 4], \"680\": [4, 7, 11, 45, 0.188348264660815, 0.4914684930763823, 0.9428771648651572, 3.3043402373585233, 1], \"319\": [1, 3, 3, 23, 0, 0.5078801135362339, 0.5078801135362339, 3.686302607482825, 2], \"681\": [0, 0, 2, 17, 0, 0, 0.538996500732687, 3.962851906287426, 3], \"263\": [0, 2, 2, 15, 0, 0.06947237281476738, 0.06947237281476738, 1.618746966411824, 2], \"132\": [2, 4, 7, 42, 0.16098937604759944, 0.5298573400642066, 1.144139354166807, 4.357100643324421, 1], \"682\": [0, 0, 0, 57, 0, 0, 0, 4.207242789266298, 4], \"168\": [0, 3, 6, 38, 0, 0.23607730009877803, 0.7251732072793537, 3.7778489718655743, 2], \"334\": [2, 2, 3, 37, 0.0455141124873649, 0.0455141124873649, 0.0996398766256725, 2.829508619731133, 1], \"86\": [0, 1, 2, 51, 0, 0, 0.08644688360743705, 4.0895550823596665, 3], \"310\": [1, 1, 3, 29, 0, 0, 0.4310822724784647, 3.9388456685736664, 3], \"77\": [1, 4, 4, 33, 0, 0.2537182755923006, 0.2537182755923006, 3.028056167422717, 2], \"502\": [0, 0, 2, 12, 0, 0, 0.15656906069153992, 1.9603334760164182, 3], \"485\": [6, 6, 7, 37, 0.2265276492984503, 0.2265276492984503, 0.29717080996048234, 2.3672560206197284, 1], \"92\": [3, 8, 19, 120, 0.09411329157047872, 0.5316597106688327, 1.6010696627635839, 5.068241950540398, 1], \"670\": [0, 0, 7, 25, 0, 0, 1.241936446289166, 3.478375534285885, 3], \"81\": [2, 4, 11, 77, 0.0628149945792227, 0.2305713264622596, 1.0855615324726189, 4.575679614806114, 1], \"711\": [0, 0, 1, 10, 0, 0, 0, 5.303304908059076, 4], \"226\": [4, 7, 18, 127, 0.09531017980432487, 0.2671604367309841, 1.1069110914828046, 4.623071497123778, 1], \"307\": [0, 1, 4, 26, 0, 0, 0.620692101344523, 3.620174559590818, 3], \"690\": [0, 0, 2, 29, 0, 0, 0.4274440148269396, 4.728567064132016, 3], \"333\": [0, 0, 2, 22, 0, 0, 0.7472144018302211, 4.908561552145052, 3], \"225\": [2, 3, 7, 49, 0.05149142535276627, 0.11233744121460561, 0.49913269224258766, 3.487904147459923, 1], \"323\": [1, 1, 10, 118, 0, 0, 1.7356999565975921, 6.470798923201259, 3], \"157\": [0, 0, 2, 15, 0, 0, 0.6576404921030354, 3.976416167164342, 3], \"336\": [1, 1, 4, 36, 0, 0, 1.363304842895192, 5.466524632196195, 3], \"443\": [3, 8, 15, 92, 0.11122563511022437, 0.6079167479413103, 1.37147927533475, 4.715284092245625, 1], \"304\": [1, 1, 8, 38, 0, 0, 1.5384021393173486, 4.425017703621832, 3], \"278\": [2, 4, 14, 72, 0.05691436258797462, 0.2104720984310654, 1.353175055033499, 4.34251158831132, 1], \"6\": [4, 10, 18, 124, 0.12994735403373714, 0.624494977095304, 1.3376451237067206, 4.9004964277273615, 1], \"663\": [0, 0, 0, 4, 0, 0, 0, 3.4965075614664802, 4], \"725\": [1, 3, 3, 19, 0, 0.5423242908253616, 0.5423242908253616, 3.3971893602646164, 2], \"161\": [1, 3, 3, 20, 0, 1.0296194171811583, 1.0296194171811583, 4.394449154672439, 2], \"407\": [0, 2, 5, 30, 0, 0.9088557533866369, 2.3281806401830094, 5.812138499293826, 2], \"277\": [2, 2, 8, 89, 0.35454501768090746, 0.35454501768090746, 2.0552142463445118, 6.729033926905416, 1], \"258\": [1, 2, 6, 32, 0, 0.05748709091768152, 0.4269293467764643, 2.781791805785265, 2], \"196\": [1, 1, 5, 31, 0, 0, 0.27770933417727395, 2.5881201760129606, 3], \"159\": [1, 1, 4, 28, 0, 0, 1.1242547192814474, 4.63296220331775, 3], \"518\": [1, 6, 17, 95, 0, 0.6418538861723948, 2.1071782966514356, 5.4232966690750155, 2], \"148\": [3, 6, 10, 85, 0.12344419109112172, 0.4223533261366861, 0.9001020045242368, 4.667905074258089, 1], \"219\": [6, 9, 17, 56, 0.2943140247555322, 0.5709580645393572, 1.3209950944150104, 3.4278356102829606, 1], \"162\": [9, 19, 29, 139, 0.4840285693358154, 1.3283443875267393, 2.010126064081849, 5.007355517198866, 1], \"274\": [3, 5, 6, 30, 0.10224562156147776, 0.26162788740917914, 0.3581093214258754, 2.4651757902513816, 1], \"388\": [0, 1, 2, 38, 0, 0, 0.325422400434628, 4.940542917275887, 3], \"383\": [3, 9, 24, 60, 0.07775936469913404, 0.5468273943132349, 1.8205416198460602, 3.5069082402553966, 1], \"353\": [0, 0, 3, 49, 0, 0, 1.4954936530848826, 6.820496308895023, 3], \"47\": [0, 1, 7, 40, 0, 0, 0.6830968447064438, 3.4965075614664802, 3], \"244\": [0, 1, 3, 13, 0, 0, 1.591893602783191, 4.31050728239497, 3], \"265\": [0, 0, 2, 5, 0, 0, 0.9315582040049435, 2.362304327695668, 3], \"355\": [0, 1, 2, 21, 0, 0, 0.17062551703076334, 3.068593621818863, 3], \"332\": [3, 3, 8, 76, 0.31732144188640793, 0.31732144188640793, 1.2962606924455244, 5.483418597268581, 1], \"337\": [1, 2, 11, 61, 0, 0.219455778235025, 2.1310032049612087, 5.434953596748737, 2], \"135\": [6, 16, 31, 135, 0.405928607537088, 1.5174324191236015, 2.6648493942855866, 5.539210660845792, 1], \"18\": [10, 17, 31, 173, 0.736840864822893, 1.4226620052907655, 2.439596262944608, 5.7900334561066655, 1], \"90\": [3, 5, 11, 67, 0.1106779524786114, 0.28148606371708085, 0.9452559760969217, 4.083865049330866, 1], \"243\": [0, 0, 4, 30, 0, 0, 1.5705980791178364, 5.371966049571182, 3], \"459\": [1, 4, 5, 21, 0, 0.366872083420486, 0.5262190008387144, 2.581433247183226, 2], \"342\": [0, 1, 3, 16, 0, 0, 0.14928324354899083, 1.7191182434527041, 3], \"249\": [0, 0, 6, 12, 0, 0, 1.1873802092325163, 2.313913093299253, 3], \"286\": [2, 3, 12, 66, 0.22825865198098017, 0.4554755286828257, 2.325399770760217, 5.635613439547027, 1], \"392\": [7, 11, 17, 53, 0.24636109371045858, 0.5246408134838492, 0.9736771698856537, 2.8340849206592766, 1], \"345\": [3, 5, 6, 40, 0.05267455155097445, 0.13997095063174567, 0.19585140902620227, 2.362304327695668, 1], \"373\": [0, 1, 9, 53, 0, 0, 1.303488457435658, 4.5434356769514626, 3], \"241\": [0, 1, 2, 19, 0, 0, 0.41836851294407224, 3.8687629763804607, 3], \"517\": [0, 2, 2, 7, 0, 0.9808292530117262, 0.9808292530117262, 3.0641694351072197, 2], \"435\": [5, 7, 11, 46, 0.35581987761899897, 0.6084640933299067, 1.1211484536905227, 3.6155272777998824, 1], \"530\": [1, 2, 4, 12, 0, 0.10371982620036639, 0.3626678793363436, 1.5962364005755645, 2], \"227\": [7, 8, 27, 159, 0.6733445532637656, 0.8131064956389242, 2.727468286959312, 6.199282926374681, 1], \"415\": [1, 2, 5, 48, 0, 0.08994823666293948, 0.462623521948113, 4.011176059304101, 2], \"529\": [0, 0, 3, 41, 0, 0, 0.7537718023763802, 5.352450375127964, 3], \"182\": [3, 3, 4, 18, 0.11871630683938197, 0.11871630683938197, 0.2021974133159511, 1.7116000413909778, 1], \"532\": [2, 3, 5, 37, 0.2595111954850846, 0.5108256237659907, 1.0479685558493548, 4.628959047952106, 1], \"338\": [1, 8, 10, 49, 0, 0.6359887667199967, 0.8708283577973976, 3.536521148505361, 2], \"395\": [0, 2, 6, 39, 0, 0.21588838043303785, 1.1533134243811665, 4.5285753428535305, 2], \"536\": [0, 0, 0, 6, 0, 0, 0, 1.9459101490553132, 4], \"189\": [5, 19, 33, 146, 0.09451684378492897, 0.8884687234668399, 1.6710975910612542, 4.448752863135253, 1], \"290\": [5, 5, 6, 34, 0.2924262358737592, 0.2924262358737592, 0.3981923487790846, 2.8157991664895556, 1], \"547\": [8, 14, 37, 222, 0.6473043047125727, 1.3318516940032674, 3.0191403644520056, 6.54529323643729, 1], \"419\": [0, 1, 3, 33, 0, 0, 0.6279612006752497, 4.670284997349228, 3], \"216\": [1, 1, 4, 24, 0, 0, 0.27239954676797734, 2.507321520339316, 3], \"567\": [2, 6, 12, 60, 0.05370417897186106, 0.40316361111988513, 1.0940039855819155, 3.9250413461874034, 1], \"371\": [2, 4, 5, 46, 0.06485254217956125, 0.23744614004484665, 0.3497835812594523, 3.5957737104256005, 1], \"180\": [4, 4, 8, 46, 0.28820385696661954, 0.28820385696661954, 0.84849011090101, 3.810551923760867, 1], \"606\": [3, 3, 5, 11, 0.7044467358138786, 0.7044467358138786, 1.3457090810048122, 2.691243082785829, 1], \"601\": [0, 0, 2, 21, 0, 0, 0.3643378166843015, 3.901195366776083, 3], \"374\": [2, 2, 4, 19, 0.06875559541512997, 0.06875559541512997, 0.2505232889991352, 2.0046489662269718, 1], \"40\": [3, 6, 11, 74, 0.09171392769013605, 0.3251259020780217, 0.8291435156403588, 4.08499828226236, 1], \"902\": [0, 1, 9, 35, 0, 0, 3.157000421150113, 5.832696743267762, 3], \"465\": [0, 0, 3, 22, 0, 0, 0.6019569424953487, 3.8155929327227422, 3], \"778\": [25, 35, 60, 211, 2.783391855089478, 3.295410996487432, 4.538675287928852, 7.131910734565768, 1], \"89\": [1, 1, 2, 20, 0, 0, 0.15123096972392353, 2.852238888200721, 3], \"119\": [2, 4, 7, 27, 0.07893642545877254, 0.28408217141831077, 0.6962225289601929, 2.7706618156123537, 1], \"537\": [0, 0, 0, 3, 0, 0, 0, 1.11365016603265, 4], \"553\": [0, 0, 0, 2, 0, 0, 0, 1.0360919316867756, 4], \"645\": [4, 4, 7, 24, 0.22631312607548879, 0.22631312607548879, 0.5753641449035618, 2.316769727986002, 1], \"646\": [0, 2, 4, 33, 0, 0.29407187055055195, 0.8618435713895825, 4.544112778225635, 2], \"662\": [1, 7, 14, 74, 0, 1.0207813040234412, 2.09204296855784, 5.295341929830557, 2], \"738\": [1, 2, 2, 7, 0, 0.5968160716215132, 0.5968160716215132, 2.3978952727983707, 2], \"743\": [0, 0, 1, 4, 0, 0, 0, 2.5199979695992702, 4], \"747\": [4, 8, 15, 63, 0.16396554411604508, 0.5380680817633897, 1.2543525412350942, 3.8110576670967737, 1], \"767\": [0, 0, 0, 6, 0, 0, 0, 1.791759469228055, 4], \"790\": [0, 0, 0, 15, 0, 0, 0, 3.048765125462213, 4], \"791\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"819\": [0, 0, 1, 9, 0, 0, 0, 2.8080115520822657, 4], \"872\": [0, 0, 0, 3, 0, 0, 0, 1.791759469228055, 4], \"881\": [0, 0, 0, 2, 0, 0, 0, 0.48550781578170077, 4], \"917\": [1, 1, 3, 30, 0, 0, 0.38441169891033206, 3.86859344750081, 3], \"442\": [4, 9, 17, 104, 0.321465133695426, 1.0713888300574532, 2.0603022014691383, 5.5502556128522444, 1], \"437\": [2, 5, 12, 88, 0.09835932019884275, 0.49834496254238153, 1.552005863348225, 5.303819000632764, 1], \"393\": [0, 1, 2, 10, 0, 0, 0.5175824062288705, 2.887542901695687, 3], \"926\": [0, 0, 0, 9, 0, 0, 0, 2.6587681126791916, 4], \"367\": [1, 1, 7, 24, 0, 0, 0.7693637015486905, 2.6821866905122906, 3], \"716\": [1, 1, 4, 41, 0, 0, 1.3368460857059095, 5.690063061423465, 3], \"765\": [1, 1, 4, 23, 0, 0, 1.7414976344471667, 5.053619654898841, 3], \"853\": [1, 1, 4, 14, 0, 0, 0.6719663584804982, 2.544474002783482, 3], \"523\": [1, 3, 7, 46, 0, 0.24921579162398486, 0.9325106757409186, 4.212733051637985, 2], \"688\": [1, 2, 7, 45, 0, 0.4795730802618863, 2.144580843850797, 5.74472753852619, 2], \"879\": [1, 5, 9, 33, 0, 1.1260112628562242, 2.0476928433652555, 4.51906748693468, 2], \"935\": [0, 0, 1, 4, 0, 0, 0, 1.589732841354768, 4], \"480\": [2, 3, 7, 32, 0.3030501026800949, 0.5858181603294468, 1.674529378014845, 4.5176437930537725, 1], \"486\": [1, 5, 5, 23, 0, 1.3130221600135648, 1.3130221600135648, 4.069026754237811, 2], \"908\": [8, 17, 22, 90, 0.31137184357418557, 0.9743873153380456, 1.3250988000929709, 3.8550901906351926, 1], \"938\": [0, 0, 0, 3, 0, 0, 0, 2.005333569526114, 4], \"817\": [3, 4, 16, 95, 0.23545681154756673, 0.3866059883710684, 2.146121021541205, 5.588087964475958, 1], \"865\": [1, 1, 7, 42, 0, 0, 1.9218125974762528, 5.351858133476067, 3], \"305\": [0, 0, 2, 19, 0, 0, 0.36772478012531734, 3.7162784283020507, 3], \"673\": [0, 0, 5, 17, 0, 0, 1.0576858609588922, 3.123655866557704, 3], \"833\": [5, 8, 15, 59, 1.16701501555251, 1.8966774090875531, 3.0402994584745673, 5.733513098204011, 1], \"886\": [0, 1, 2, 29, 0, 0, 0.3281156420302715, 4.4146206976544216, 3], \"945\": [5, 7, 17, 133, 0.6107166636192816, 0.9744961096147036, 2.3731031756146366, 6.382513673690725, 1], \"233\": [3, 4, 5, 21, 0.3981923487790846, 0.6257058997644127, 0.8581087764914193, 3.217570625640058, 1], \"784\": [1, 1, 2, 23, 0, 0, 0.07522342123758753, 2.4276333396418415, 3], \"475\": [3, 3, 7, 16, 0.9064059726416132, 0.9064059726416132, 2.200860944979603, 3.760437339150095, 1], \"611\": [0, 2, 5, 19, 0, 0.31760375231683013, 1.204906947317733, 3.547843335835346, 2], \"715\": [0, 0, 3, 21, 0, 0, 0.7884573603642702, 4.091005660956586, 3], \"882\": [4, 15, 21, 97, 0.28978070910870213, 1.745172758025058, 2.328711397586266, 5.291635428172176, 1], \"965\": [0, 0, 2, 22, 0, 0, 0.1451820098444979, 2.9910337527724367, 3], \"967\": [1, 2, 6, 24, 0, 0.1415787733316046, 0.8623924866096886, 3.1311867208659567, 2], \"892\": [0, 0, 2, 23, 0, 0, 0.3856624808119847, 4.146862596505547, 3], \"974\": [0, 3, 75, 1127, 0, 0.4508337131380154, 5.110459279814185, 9.50030100140405, 2], \"399\": [4, 6, 24, 103, 0.41726149154853387, 0.772442783230483, 2.9776078489381095, 5.841610180451529, 1], \"689\": [0, 1, 2, 5, 0, 0, 0.5705448584676129, 1.7591832987934422, 3], \"838\": [1, 3, 3, 29, 0, 0.14588927347112293, 0.14588927347112293, 2.752203464514467, 2], \"941\": [3, 3, 6, 38, 0.2694761079552085, 0.2694761079552085, 0.8051863750370768, 3.924386128643446, 1], \"192\": [1, 2, 2, 12, 0, 0.6931471805599453, 0.6931471805599453, 3.6109179126442243, 2], \"556\": [2, 4, 16, 59, 0.25452986513488046, 0.7698398013481997, 2.9730123516104965, 5.53436283626078, 1], \"854\": [0, 2, 14, 35, 0, 0.17135825199668508, 2.3183480526593034, 4.064623753088678, 2], \"958\": [0, 0, 0, 11, 0, 0, 0, 2.1754845906998135, 4], \"366\": [1, 1, 9, 29, 0, 0, 2.738533217827286, 5.018461730345719, 3], \"832\": [0, 0, 2, 17, 0, 0, 0.49159426183810306, 3.84744215535239, 3], \"912\": [2, 3, 8, 63, 0.10212949507637983, 0.2166710368085923, 1.0007899955742643, 4.679289678812777, 1], \"983\": [1, 4, 4, 24, 0, 0.6632942174102642, 0.6632942174102642, 3.551981054941509, 2], \"178\": [1, 1, 3, 32, 0, 0, 0.2024827004879514, 3.2785083161351625, 3], \"594\": [0, 1, 2, 5, 0, 0, 0.24817962947553462, 1.0154347821892018, 3], \"978\": [0, 1, 3, 18, 0, 0, 0.36696662997527996, 2.8308924842967365, 3], \"376\": [0, 1, 2, 21, 0, 0, 0.27193371548364176, 3.56821140142017, 3], \"421\": [3, 4, 6, 31, 0.7044467358138786, 1.0360919316867756, 1.6274564179367788, 4.702338143187091, 1], \"956\": [0, 3, 3, 11, 0, 1.7047480922384253, 1.7047480922384253, 4.119037174812473, 2], \"994\": [1, 1, 2, 180, 0, 0, 0.5877866649021191, 8.590318209375159, 3], \"816\": [1, 1, 5, 19, 0, 0, 0.629777566627356, 2.614959778036198, 3], \"595\": [2, 8, 16, 46, 0.020629921936840843, 0.2878123401520889, 0.8475955901996002, 2.4871188961193447, 1], \"808\": [0, 0, 4, 17, 0, 0, 0.9555114450274365, 3.3978584803966405, 3], \"931\": [1, 2, 9, 60, 0, 0.3483066942682158, 2.244691114575143, 5.929589143389895, 2], \"621\": [5, 7, 16, 71, 0.18981846820813295, 0.3433762040512237, 1.1443719058175765, 3.7646552892689575, 1], \"1014\": [4, 4, 78, 808, 0.20426967106919308, 0.20426967106919308, 4.372036238549642, 8.94209445796587, 1], \"1018\": [2, 2, 2, 11, 0.22567199766756846, 0.22567199766756846, 0.22567199766756846, 2.158510065155529, 1], \"501\": [3, 4, 4, 12, 0.36101334553733055, 0.5726430547892012, 0.5726430547892012, 2.0739919369122712, 1], \"766\": [3, 3, 7, 55, 0.5292593254548287, 0.5292593254548287, 1.568292868322924, 5.461694454853972, 1], \"770\": [0, 1, 2, 12, 0, 0, 0.6359887667199967, 3.4965075614664802, 3], \"877\": [3, 6, 9, 19, 1.4118276631250553, 2.5192247872679676, 3.3612056007449755, 4.832168367625686, 1], \"954\": [2, 3, 7, 31, 0.1649822607176458, 0.3390314190800344, 1.162309648954177, 3.7863275833200376, 1], \"1013\": [5, 6, 14, 79, 0.179952822958404, 0.24991141156531438, 0.9344218943926681, 3.9163982779927062, 1], \"1019\": [1, 4, 15, 80, 0, 0.1356861992422396, 1.1130399510146305, 4.079721052339105, 2], \"115\": [2, 3, 4, 27, 0.11122563511022437, 0.23483959107740104, 0.3856624808119847, 3.110897506668296, 1], \"318\": [1, 1, 4, 13, 0, 0, 0.9433716904768258, 2.8661147802506046, 3], \"822\": [1, 1, 3, 9, 0, 0, 0.4396392879207579, 1.7866338813792426, 3], \"943\": [7, 12, 31, 118, 1.2788741124990537, 2.148728631863777, 3.883704229920334, 6.594848636508728, 1], \"1021\": [0, 0, 8, 36, 0, 0, 2.3699604954668168, 5.285047897079921, 3], \"940\": [3, 5, 11, 40, 0.26159729523649006, 0.6046245444040388, 1.6134166975238637, 3.991871469857414, 1], \"1025\": [3, 4, 11, 64, 0.5560675878793254, 0.8425641237370047, 2.3978952727983707, 5.827510460895335, 1], \"1034\": [0, 5, 8, 67, 0, 0.9371888495117716, 1.6044565820838963, 5.634146095363928, 2], \"397\": [0, 0, 2, 12, 0, 0, 0.2578291093020998, 2.4499903846817723, 3], \"1036\": [12, 17, 67, 616, 0.9970275161796942, 1.4889195477249078, 3.930189162763692, 8.269861574219059, 1], \"354\": [0, 1, 5, 36, 0, 0, 1.2249060139924017, 4.833224735508928, 3], \"515\": [4, 4, 5, 21, 0.6962869005646131, 0.6962869005646131, 0.9448109538225702, 3.35814543934304, 1], \"787\": [0, 0, 3, 18, 0, 0, 0.851553185957342, 3.8991040935908265, 3], \"894\": [1, 1, 2, 7, 0, 0, 1.209837923778334, 3.3952976595349673, 3], \"507\": [0, 2, 2, 11, 0, 0.1415787733316046, 0.1415787733316046, 1.7229023842848656, 2], \"741\": [0, 1, 2, 15, 0, 0, 0.5316597106688327, 3.7006519903392037, 3], \"1029\": [4, 7, 19, 139, 0.29244776852479537, 0.7131163149538747, 2.159239241389388, 6.019109660737914, 1], \"1035\": [4, 6, 13, 51, 0.8618435713895825, 1.4053425560905852, 2.7372493557944724, 5.408550606563093, 1], \"1046\": [3, 8, 13, 54, 0.09372098598555424, 0.5298573400642066, 1.0455553930106603, 3.4914664258237873, 1], \"432\": [0, 1, 4, 29, 0, 0, 0.7737512129745747, 4.133354697337893, 3], \"468\": [3, 3, 5, 24, 0.4881938233057933, 0.4881938233057933, 1.010964981609354, 3.7203713449807823, 1], \"792\": [2, 5, 17, 96, 0.020555708349040996, 0.12204301561776237, 0.9164983946305861, 3.8887639442510156, 1], \"794\": [1, 3, 6, 12, 0, 0.4700036292457356, 1.2237754316221157, 2.3608540011180215, 2], \"988\": [1, 1, 2, 14, 0, 0, 0.39730179746900346, 3.214965751460358, 3], \"352\": [0, 0, 2, 15, 0, 0, 0.5316597106688327, 3.7006519903392037, 3], \"561\": [0, 2, 3, 22, 0, 0.11343592966337171, 0.23922968906583414, 2.7430655800230714, 2], \"605\": [2, 7, 7, 30, 0.03025949476311255, 0.3194307707663612, 0.3194307707663612, 2.068436507357016, 1], \"1032\": [0, 0, 3, 12, 0, 0, 0.9367692632176957, 3.2514431535307455, 3], \"1039\": [5, 5, 5, 61, 0.5162164724008671, 0.5162164724008671, 0.5162164724008671, 4.620724267329186, 1], \"714\": [0, 2, 3, 25, 0, 0.12399764165657076, 0.26007680635989205, 3.073945433530128, 2], \"1059\": [0, 2, 4, 17, 0, 0.4321333551903257, 1.1512560221535317, 3.6902298932118076, 2], \"1060\": [1, 1, 2, 11, 0, 0, 0.7939518796819109, 3.628775530044231, 3], \"80\": [4, 8, 9, 30, 0.08439375477444573, 0.3017543041250079, 0.3686557212893687, 1.7839321812341185, 1], \"404\": [1, 2, 4, 24, 0, 0.1616413515564159, 0.5316597106688327, 3.268167116585078, 2], \"576\": [0, 1, 3, 10, 0, 0, 0.734450986701181, 2.5686496392043927, 3], \"1050\": [2, 2, 4, 45, 0.17666954336260812, 0.17666954336260812, 0.5726430547892012, 4.593361607923393, 1], \"1055\": [1, 3, 7, 194, 0, 0.6371529112053704, 1.7666955005648388, 8.125501840760252, 2], \"1068\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1074\": [0, 0, 1, 16, 0, 0, 0, 3.8979623519684905, 4], \"1075\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"582\": [2, 3, 5, 22, 0.33363937353690887, 0.6371529112053704, 1.2456657066246064, 3.890202502004491, 1], \"1072\": [1, 3, 4, 31, 0, 0.4054651081081644, 0.6359887667199967, 3.996159884634346, 2], \"1079\": [0, 0, 0, 20, 0, 0, 0, 3.6031659358399066, 4], \"1082\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1083\": [0, 1, 3, 39, 0, 0, 1.4118276631250553, 6.2556022417660735, 3], \"1084\": [0, 0, 1, 16, 0, 0, 0, 4.964397425602968, 4], \"65\": [2, 2, 4, 26, 0.11279549414534437, 0.11279549414534437, 0.39042723074362384, 3.0530150577690764, 1], \"359\": [2, 3, 6, 30, 0.1616413515564159, 0.3327057538257361, 0.9473813189441862, 3.7006519903392037, 1], \"541\": [0, 1, 2, 21, 0, 0, 0.17135825199668508, 3.073039395330362, 3], \"800\": [1, 1, 3, 11, 0, 0, 0.8347976976229722, 2.9197272969815833, 3], \"971\": [2, 6, 11, 36, 0.30538164955118186, 1.4384801142904609, 2.468402149116537, 4.75972894580469, 1], \"1080\": [1, 1, 2, 5, 0, 0, 0.7939518796819109, 2.1489393361767575, 3], \"1088\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1089\": [0, 1, 2, 9, 0, 0, 0.021266085846178402, 0.36133895646771014, 3], \"1090\": [0, 0, 0, 2, 0, 0, 0, 1.0986122886681096, 4], \"1091\": [0, 0, 0, 53, 0, 0, 0, 7.526937435796651, 4], \"1092\": [1, 2, 6, 34, 0, 0.3483066942682158, 1.55814461804655, 4.799228156407205, 2], \"1093\": [0, 1, 2, 8, 0, 0, 0.44183275227903923, 2.2914117923959205, 3], \"874\": [1, 2, 3, 35, 0, 0.10508346897368827, 0.22258938116979743, 3.5534467696229934, 2], \"1056\": [1, 3, 14, 96, 0, 0.16893998809812322, 1.6110725674772959, 5.244210948872237, 2], \"1098\": [0, 0, 0, 2, 0, 0, 0, 0.38946476676172326, 4], \"1099\": [0, 0, 1, 32, 0, 0, 0, 6.454314318383356, 4], \"1100\": [0, 0, 1, 50, 0, 0, 0, 6.508476958548199, 4], \"256\": [0, 0, 3, 17, 0, 0, 0.7958013346200287, 3.6902298932118076, 3], \"1042\": [0, 1, 2, 38, 0, 0, 1.252762968495368, 6.79756097149497, 3], \"1095\": [1, 1, 2, 17, 0, 0, 0.44183275227903923, 3.7169538758116887, 3], \"1108\": [14, 16, 84, 324, 2.6097376849617704, 2.8860102677871686, 5.267965791364974, 8.772614049642385, 1], \"267\": [0, 1, 2, 4, 0, 0, 0.7621400520468967, 1.717651497074333, 3], \"398\": [1, 1, 2, 9, 0, 0, 0.19290366612449156, 1.6693113134815147, 3], \"525\": [6, 6, 9, 48, 0.4385508326939298, 0.4385508326939298, 0.8058203430640581, 3.589869779057506, 1], \"925\": [1, 1, 3, 25, 0, 0, 1.1291490125281913, 4.9859930678333715, 3], \"1104\": [1, 1, 2, 7, 0, 0, 0.8472978603872036, 2.8526314299133175, 3], \"1105\": [1, 4, 4, 14, 0, 0.9873866535578852, 0.9873866535578852, 3.074154235329794, 2], \"1112\": [1, 1, 1, 15, 0, 0, 0, 2.505525936990736, 4], \"1114\": [0, 0, 7, 39, 0, 0, 1.6127112377790696, 4.833676381767189, 3], \"686\": [1, 2, 3, 15, 0, 0.291910408561302, 0.5668534552356532, 2.9991163715382316, 2], \"887\": [0, 0, 2, 4, 0, 0, 0.7328875092094594, 1.6722858160937641, 3], \"904\": [2, 2, 2, 16, 0.06911212496035019, 0.06911212496035019, 0.06911212496035019, 1.7191182434527041, 1], \"1007\": [1, 1, 2, 6, 0, 0, 0.5465437063680699, 2.0209453349982276, 3], \"1122\": [2, 2, 13, 50, 0.7621400520468967, 0.7621400520468967, 3.8330498943202045, 6.563966924737318, 1], \"713\": [2, 2, 5, 16, 0.1578069910303688, 0.1578069910303688, 0.7267637913589302, 2.4799084244592056, 1], \"726\": [0, 0, 2, 21, 0, 0, 0.9088557533866369, 5.101896885374581, 3], \"758\": [1, 1, 2, 33, 0, 0, 0.14310084364067333, 3.758513145872737, 3], \"923\": [2, 3, 4, 26, 0.36772478012531734, 0.6931471805599453, 1.0216512475319814, 4.332194260926006, 1], \"1135\": [1, 3, 4, 15, 0, 0.18884373606243307, 0.3144566709952356, 1.8239531224231342, 2], \"213\": [3, 6, 9, 40, 0.12911891544132809, 0.4390943749722523, 0.8066672717436932, 3.23876853008184, 1], \"316\": [2, 3, 7, 51, 0.21357410029805904, 0.42899560551835847, 1.3652409519220583, 5.048710662948405, 1], \"1136\": [1, 2, 4, 13, 0, 0.21825356602001797, 0.680877087968131, 2.425234318301602, 2], \"1140\": [0, 0, 1, 3, 0, 0, 0, 0.9808292530117262, 4], \"154\": [1, 1, 2, 25, 0, 0, 0.10398971352404764, 2.8971977229665646, 3], \"795\": [3, 5, 9, 31, 0.33024168687057687, 0.7357067949787413, 1.508896683212223, 3.7561316811231036, 1], \"1028\": [1, 2, 3, 37, 0, 0.16917873135476025, 0.3469503940467376, 4.160250235938151, 2], \"1097\": [0, 1, 3, 16, 0, 0, 1.33828514193353, 4.394449154672439, 3], \"1150\": [0, 0, 0, 11, 0, 0, 0, 3.689685580719461, 4], \"618\": [0, 0, 3, 7, 0, 0, 1.890850371872286, 3.453947947047684, 3], \"620\": [0, 2, 2, 3, 0, 0.04791335569589751, 0.04791335569589751, 0.10474683045906341, 2], \"1121\": [4, 5, 6, 25, 0.8023464725249373, 1.072636802264849, 1.32687094064909, 3.893388925883253, 1], \"1145\": [1, 2, 3, 12, 0, 0.5543107357057295, 0.9808292530117262, 3.3202283191284883, 2], \"1153\": [1, 1, 1, 14, 0, 0, 0, 0.6615528151417281, 4], \"1154\": [1, 1, 1, 3, 0, 0, 0, 1.9459101490553132, 4], \"1155\": [1, 1, 1, 5, 0, 0, 0, 0.43790038386131824, 4], \"698\": [0, 2, 8, 58, 0, 0.21019457697340665, 1.556604497612753, 5.2868779158100905, 2], \"836\": [2, 5, 19, 33, 0.538996500732687, 1.6982334112172315, 4.11692036400866, 5.275377680968714, 1], \"1044\": [2, 5, 6, 30, 0.3101549283038395, 1.1856236656577395, 1.4522523289116882, 4.4166476244615875, 1], \"685\": [0, 1, 2, 11, 0, 0, 0.38193461069797024, 2.7126905806587125, 3], \"975\": [1, 2, 3, 42, 0, 0.08218174592228585, 0.17623598225838671, 3.657724625151745, 2], \"1174\": [1, 1, 1, 12, 0, 0, 0, 2.6042986962500843, 4], \"1157\": [0, 0, 1, 2, 0, 0, 0, 0.7191226669632059, 4], \"1172\": [1, 1, 1, 6, 0, 0, 0, 2.9444389791664403, 4], \"1173\": [1, 1, 1, 17, 0, 0, 0, 4.885552955958261, 4], \"909\": [0, 2, 2, 15, 0, 0.17666954336260812, 0.17666954336260812, 2.47397757925581, 2], \"753\": [0, 0, 4, 30, 0, 0, 1.0663514264498883, 4.683453104382135, 3], \"1171\": [3, 5, 20, 109, 0.17185025692665923, 0.41925843024050025, 2.2335922215070942, 5.515526678374055, 1], \"214\": [0, 4, 5, 19, 0, 0.6157605169445252, 0.8457769475464969, 3.005787928542282, 2], \"948\": [3, 6, 10, 47, 0.11840357554598269, 0.40732557376108414, 0.8740711130872619, 3.4610987712566583, 1], \"990\": [0, 0, 4, 29, 0, 0, 0.6661590358422984, 3.9271739206498917, 3], \"1196\": [0, 1, 2, 10, 0, 0, 0.9088557533866369, 3.638560343924229, 3], \"1213\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"630\": [1, 1, 2, 8, 0, 0, 0.4519851237430572, 2.316769727986002, 3], \"735\": [6, 16, 36, 159, 0.41542960336759616, 1.5395249366037513, 2.9725031817690817, 5.89350386210793, 1], \"1184\": [0, 1, 6, 39, 0, 0, 1.4384801142904609, 4.918546111781672, 3], \"1222\": [0, 0, 1, 6, 0, 0, 0, 2.2377364462531206, 4], \"764\": [1, 1, 6, 22, 0, 0, 1.2429300475791292, 3.5307826423751667, 3], \"1231\": [0, 1, 3, 19, 0, 0, 0.2744368457017603, 2.614959778036198, 3], \"456\": [2, 2, 8, 53, 0.13862989729590636, 0.13862989729590636, 1.2176337145756397, 4.657988339491655, 1], \"1127\": [2, 7, 11, 53, 0.05748709091768152, 0.5451412908674736, 1.0260203871504388, 3.7507563371208708, 1], \"1227\": [0, 0, 0, 5, 0, 0, 0, 1.6696567724271552, 4], \"1229\": [1, 2, 2, 11, 0, 0.31259842371631547, 0.31259842371631547, 2.493281270488171, 2], \"719\": [2, 2, 23, 35, 0.46813621507094005, 0.46813621507094005, 4.293282982774247, 5.2140430815505185, 1], \"1009\": [0, 1, 2, 21, 0, 0, 0.5042466526679481, 4.2944935120606695, 3], \"1243\": [0, 1, 2, 23, 0, 0, 0.1157359520346586, 2.8464775643389393, 3], \"998\": [0, 0, 3, 24, 0, 0, 0.4881938233057933, 3.7203713449807823, 3], \"262\": [2, 3, 7, 41, 0.1656671218888174, 0.34032580593720296, 1.1654005295396963, 4.340171824701036, 1], \"282\": [0, 1, 2, 10, 0, 0, 0.2876820724517809, 2.2335922215070942, 3], \"554\": [2, 2, 3, 5, 0.49159426183810306, 0.49159426183810306, 0.8873031950009028, 1.6030684641486206, 1], \"587\": [2, 2, 2, 8, 0.8873031950009028, 0.8873031950009028, 0.8873031950009028, 3.172083663361442, 1], \"1205\": [1, 1, 3, 28, 0, 0, 0.21408407022088655, 3.081715270483177, 3], \"1217\": [4, 5, 5, 25, 0.7124403834946241, 0.964462275547521, 0.964462275547521, 3.727725471702976, 1], \"1128\": [3, 4, 15, 48, 0.20812125379246896, 0.34451909789108437, 1.9145759928848778, 4.098150506648194, 1], \"1263\": [2, 2, 3, 62, 0.27958486221916157, 0.27958486221916157, 0.5456944494168147, 5.739792912179234, 1], \"732\": [1, 1, 2, 6, 0, 0, 0.6931471805599453, 2.302585092994046, 3], \"1016\": [3, 6, 9, 32, 0.5742859776832164, 1.4118276631250553, 2.0772840435398146, 4.491731149765064, 1], \"1276\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1277\": [0, 0, 0, 2, 0, 0, 0, 1.791759469228055, 4], \"634\": [0, 0, 2, 6, 0, 0, 2.3978952727983707, 4.51085950651685, 3], \"1117\": [0, 1, 2, 19, 0, 0, 0.6931471805599453, 4.513602992462601, 3], \"1279\": [1, 1, 1, 3, 0, 0, 0, 1.1616252564968437, 4], \"1280\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1285\": [3, 4, 5, 25, 0.4554755286828257, 0.705886206337375, 0.9564971523521957, 3.7151343229195666, 1], \"1126\": [0, 0, 7, 140, 0, 0, 1.9744325816593093, 7.758453929268987, 3], \"1295\": [0, 0, 0, 2, 0, 0, 0, 1.791759469228055, 4], \"1116\": [0, 2, 2, 25, 0, 0.14208251361377278, 0.14208251361377278, 3.2130574039212796, 2], \"1250\": [8, 12, 22, 98, 0.5042466526679481, 0.9064059726416132, 1.7849054328002627, 4.599168605923535, 1], \"1301\": [0, 0, 2, 16, 0, 0, 0.4096756406445079, 3.508707484036303, 3], \"324\": [0, 0, 3, 16, 0, 0, 0.5632107588532816, 3.1140753764330795, 3], \"1023\": [4, 8, 23, 82, 0.2733360435777057, 0.814199261298233, 2.432992751325918, 4.891116961934891, 1], \"1300\": [0, 1, 5, 620, 0, 0, 1.2114916367399633, 9.418669109335335, 3], \"861\": [2, 2, 4, 16, 0.11441035117774422, 0.11441035117774422, 0.3953127366441464, 2.169919126645952, 1], \"368\": [3, 4, 5, 28, 0.5357102670818683, 0.8152951293010299, 1.0880581009894195, 4.138876202921775, 1], \"390\": [1, 1, 3, 11, 0, 0, 0.676886659688165, 2.6398250839715893, 3], \"513\": [0, 0, 2, 15, 0, 0, 0.13862989729590636, 2.236905896750771, 3], \"531\": [0, 0, 2, 3, 0, 0, 1.349926716949016, 2.005333569526114, 3], \"740\": [1, 1, 7, 28, 0, 0, 1.4209434965330647, 3.9368406883707534, 3], \"1207\": [0, 0, 5, 32, 0, 0, 0.9223330463301177, 4.144096264927154, 3], \"1319\": [6, 14, 24, 79, 0.4274440148269396, 1.361925770102933, 2.2547944291576973, 4.537525611489312, 1], \"1316\": [0, 1, 2, 10, 0, 0, 0.7621400520468967, 3.386808644210056, 3], \"1366\": [1, 1, 6, 30, 0, 0, 3.157000421150113, 6.3254521949425175, 3], \"665\": [0, 1, 5, 24, 0, 0, 0.8906781560174287, 3.5293985016362384, 3], \"721\": [3, 6, 13, 74, 0.24445333790096083, 0.7455936559324878, 1.8245492920510458, 5.132807543444428, 1], \"772\": [0, 1, 2, 9, 0, 0, 0.19768561861869782, 1.6912445112037515, 3], \"1165\": [0, 0, 3, 26, 0, 0, 1.7469089030627032, 5.8771458982645255, 3], \"1381\": [0, 0, 1, 5, 0, 0, 0, 2.3978952727983707, 4], \"453\": [1, 2, 4, 14, 0, 0.34228620648663277, 0.9679921062510455, 3.044522437723423, 2], \"1390\": [2, 5, 5, 18, 0.03524593906167478, 0.202300023724841, 0.202300023724841, 1.362470205392384, 1], \"455\": [3, 4, 6, 23, 0.16643479373146772, 0.27909399238798177, 0.5448478925011511, 2.45477927547721, 1], \"835\": [1, 1, 2, 6, 0, 0, 0.38193461069797024, 1.6459716557665565, 3], \"1386\": [0, 0, 0, 2, 0, 0, 0, 0.680877087968131, 4], \"1397\": [2, 6, 38, 281, 0.1529693447814272, 0.9113197191521346, 4.040855432858198, 7.996844902677634, 1], \"539\": [0, 1, 3, 14, 0, 0, 0.6514744841593773, 3.044522437723423, 3], \"1087\": [1, 3, 3, 18, 0, 0.7221347174331976, 0.7221347174331976, 3.666573696599638, 2], \"1146\": [6, 12, 12, 41, 0.1956378620818407, 0.6229101809818444, 0.6229101809818444, 2.406047048823708, 1], \"1176\": [1, 1, 5, 18, 0, 0, 1.8993901334204204, 4.312627836654058, 3], \"1331\": [0, 1, 2, 25, 0, 0, 0.4321333551903257, 4.448042105125193, 3], \"1125\": [0, 0, 6, 32, 0, 0, 1.38007672450902, 4.450013490655011, 3], \"1418\": [0, 3, 4, 9, 0, 1.084013489246957, 1.499234772300486, 2.9236289796526473, 2], \"343\": [6, 6, 7, 19, 1.2781321626208269, 1.2781321626208269, 1.5096573235697488, 3.29477048360522, 1], \"907\": [14, 24, 43, 98, 1.01273866068378, 1.816786537277167, 2.8643962714929043, 4.464797144586481, 1], \"1142\": [0, 1, 8, 48, 0, 0, 2.1129642337184795, 5.571462469217975, 3], \"1159\": [0, 0, 2, 16, 0, 0, 0.4369283775639494, 3.5854197183479184, 3], \"1380\": [1, 5, 8, 25, 0, 1.2456657066246064, 1.9928801084548275, 4.141247042961716, 2], \"1410\": [1, 1, 2, 14, 0, 0, 1.2992829841302609, 4.880273476233012, 3], \"1371\": [1, 1, 6, 45, 0, 0, 0.5887760293162374, 3.8308177811655364, 3], \"1411\": [1, 2, 2, 16, 0, 0.08218174592228585, 0.08218174592228585, 1.8689980513528213, 2], \"1427\": [1, 2, 2, 15, 0, 0.3933437475758196, 0.3933437475758196, 3.336069664224832, 2], \"1002\": [0, 0, 3, 8, 0, 0, 1.0698333241180664, 2.6821866905122906, 3], \"1228\": [0, 0, 2, 24, 0, 0, 0.7191226669632059, 5.027682149755215, 3], \"1308\": [0, 0, 2, 16, 0, 0, 0.680877087968131, 4.1500791987443435, 3], \"1438\": [0, 0, 0, 4, 0, 0, 0, 1.8458266904983307, 4], \"87\": [0, 2, 3, 17, 0, 0.30774963550259016, 0.5937747067467416, 3.297170644128033, 2], \"1436\": [1, 1, 1, 8, 0, 0, 0, 3.243193132518907, 4], \"1400\": [0, 1, 7, 43, 0, 0, 1.9744325816593093, 5.459800950133574, 3], \"1450\": [0, 0, 2, 9, 0, 0, 0.4519851237430572, 2.531426665422893, 3], \"1288\": [2, 3, 3, 9, 0.5790338737925242, 1.0169342576538425, 1.0169342576538425, 2.8262688717034052, 1], \"1454\": [0, 0, 0, 3, 0, 0, 0, 0.9367692632176957, 4], \"1370\": [1, 2, 3, 27, 0, 0.14361551169114867, 0.2982438605028894, 3.372342321440087, 2], \"1428\": [0, 0, 2, 14, 0, 0, 0.3393540829961018, 3.0348558568931994, 3], \"1462\": [0, 0, 0, 3, 0, 0, 0, 0.3022808718729336, 4], \"1463\": [0, 3, 4, 19, 0, 0.47251724598605155, 0.7293949709522863, 3.2279619376187187, 2], \"420\": [0, 0, 6, 31, 0, 0, 1.5339303599259553, 4.585688719235555, 3], \"473\": [0, 0, 2, 11, 0, 0, 0.44183275227903923, 2.87951051846456, 3], \"1475\": [1, 1, 3, 23, 0, 0, 0.6190392084062234, 3.9392675275347115, 3], \"303\": [3, 4, 5, 12, 0.23240287672700652, 0.38193461069797024, 0.5462376619892466, 1.6459716557665565, 1], \"1249\": [1, 2, 6, 23, 0, 0.3030501026800949, 1.4317075697795925, 3.8673218151317252, 2], \"1437\": [1, 5, 6, 32, 0, 0.7402651035370152, 0.9473813189441862, 3.8267326346955954, 2], \"1476\": [2, 4, 5, 29, 0.11675051104219424, 0.40236433042991615, 0.573233393492083, 3.2972119091910765, 1], \"584\": [4, 6, 9, 24, 0.05341723749698583, 0.11641035184441127, 0.245122458032985, 1.090347778818216, 1], \"1350\": [0, 1, 2, 11, 0, 0, 1.2992829841302609, 4.402645921876617, 3], \"1446\": [0, 0, 6, 34, 0, 0, 2.1777117631126375, 5.530636088261459, 3], \"1481\": [0, 0, 0, 4, 0, 0, 0, 2.03688192726104, 4], \"1008\": [0, 0, 5, 20, 0, 0, 1.6696567724271552, 4.248002509839341, 3], \"1274\": [0, 1, 5, 33, 0, 0, 1.6422277352570913, 5.206750173022546, 3], \"1478\": [4, 5, 7, 48, 1.0586069540544105, 1.37147927533475, 1.911718784307034, 5.606018305890309, 1], \"1349\": [0, 5, 5, 8, 0, 0.8975108372225588, 0.8975108372225588, 1.552005863348225, 2], \"1482\": [0, 0, 4, 23, 0, 0, 0.2786048543006643, 2.4529420107267215, 3], \"327\": [1, 3, 4, 10, 0, 0.9694005571881035, 1.363304842895192, 2.953962860677696, 2], \"841\": [1, 1, 2, 3, 0, 0, 0.27193371548364176, 0.5324647988694718, 3], \"957\": [0, 0, 4, 16, 0, 0, 0.3506199037197806, 2.0437055634272943, 3], \"1511\": [0, 0, 0, 20, 0, 0, 0, 4.135781752086274, 4], \"1520\": [0, 0, 0, 2, 0, 0, 0, 0.8668106746107854, 4], \"603\": [0, 0, 3, 23, 0, 0, 1.1962507582320256, 4.917357236167136, 3], \"916\": [2, 3, 3, 9, 0.4795730802618863, 0.8690378470236095, 0.8690378470236095, 2.5998366164619773, 1], \"1129\": [0, 3, 7, 19, 0, 0.5260930958967791, 1.562185027583555, 3.359306439952995, 2], \"1524\": [0, 1, 3, 8, 0, 0, 0.7282385003712154, 2.1539745935424026, 3], \"1525\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"937\": [1, 7, 12, 75, 0, 0.9500196688685292, 1.7334581981208566, 5.209698343176948, 2], \"1218\": [1, 1, 2, 7, 0, 0, 0.44183275227903923, 2.054835730877636, 3], \"1254\": [2, 2, 5, 19, 0.17745536714278173, 0.17745536714278173, 0.794616640724805, 2.919081863778596, 1], \"424\": [7, 9, 22, 82, 0.3994349390815732, 0.5942232646406579, 1.7663902751025962, 4.225003597101035, 1], \"1465\": [1, 1, 3, 19, 0, 0, 1.1786549963416462, 4.513602992462601, 3], \"1469\": [3, 3, 4, 14, 0.36696662997527996, 0.36696662997527996, 0.5811968552230635, 2.3660454469112713, 1], \"1551\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1426\": [1, 2, 3, 11, 0, 0.2322522675124501, 0.462623521948113, 2.1870055103040973, 2], \"201\": [5, 5, 7, 22, 0.6216882165778004, 0.6216882165778004, 0.9894129967031178, 2.8729800151842957, 1], \"1221\": [2, 2, 2, 7, 0.3643378166843015, 0.3643378166843015, 0.3643378166843015, 1.8538912503350613, 1], \"1267\": [2, 3, 4, 14, 0.10265415406008337, 0.21772348384487056, 0.3593740009078974, 1.8401205409214763, 1], \"1330\": [2, 4, 4, 10, 0.41397579777607296, 1.1155618469818829, 1.1155618469818829, 2.626153924779351, 1], \"1567\": [2, 5, 5, 13, 0.04287902305923364, 0.24202227192369596, 0.24202227192369596, 1.0476840243995968, 1], \"1568\": [4, 5, 5, 10, 0.9257694758286988, 1.2181574393178924, 1.2181574393178924, 2.35364026379433, 1], \"197\": [4, 6, 10, 30, 0.08060756546543643, 0.1730093573738042, 0.4217707599160808, 1.7443062912718594, 1], \"602\": [0, 2, 2, 10, 0, 0.14208251361377278, 0.14208251361377278, 1.5721085393400616, 2], \"1523\": [0, 1, 2, 5, 0, 0, 0.4054651081081644, 1.4170660197866443, 3], \"220\": [1, 1, 3, 19, 0, 0, 0.3483066942682158, 2.8742967423160333, 3], \"389\": [0, 3, 6, 16, 0, 0.17452286430813568, 0.5668534552356532, 1.8599987611767068, 2], \"677\": [1, 2, 2, 3, 0, 0.41397579777607296, 0.41397579777607296, 0.7672551527136672, 2], \"1278\": [1, 1, 3, 19, 0, 0, 0.16674386285208515, 2.1136286708539513, 3], \"1421\": [0, 1, 2, 9, 0, 0, 0.07550755250814514, 0.9509762898620451, 3], \"1579\": [1, 1, 3, 9, 0, 0, 1.791759469228055, 3.828641396489095, 3], \"1414\": [1, 1, 9, 31, 0, 0, 2.1906671767900603, 4.556144700015008, 3], \"1492\": [1, 3, 9, 25, 0, 0.5168226432383649, 1.9587171544117037, 3.871044357034304, 2], \"1304\": [1, 1, 6, 20, 0, 0, 1.55814461804655, 3.7534179752515073, 3], \"1474\": [3, 6, 10, 32, 0.23607730009877803, 0.7251732072793537, 1.375885345205155, 3.4434857561429064, 1], \"1613\": [0, 1, 1, 8, 0, 0, 0, 2.959364629383116, 4], \"1619\": [5, 5, 6, 13, 1.1148728095398899, 1.1148728095398899, 1.3739230693173439, 2.698165441869668, 1], \"1623\": [0, 0, 0, 11, 0, 0, 0, 5.158233943932214, 4], \"1528\": [8, 13, 15, 35, 0.3039202165023668, 0.6615774787912095, 0.8103134272002908, 2.0538675752174345, 1], \"1624\": [2, 2, 3, 8, 0.7939518796819109, 0.7939518796819109, 1.3156767939059373, 3.0152377681782476, 1], \"1626\": [0, 2, 2, 7, 0, 0.2646925542270822, 0.2646925542270822, 1.5501381701528085, 2], \"1457\": [0, 2, 9, 178, 0, 0.3308542443169896, 2.1906671767900603, 7.9476830212492, 2], \"1634\": [0, 0, 0, 2, 0, 0, 0, 1.0360919316867756, 4], \"1639\": [0, 0, 0, 3, 0, 0, 0, 1.591893602783191, 4], \"922\": [0, 0, 3, 12, 0, 0, 0.7672551527136672, 2.9684401312659836, 3], \"1185\": [4, 4, 4, 15, 0.9617082115649478, 0.9617082115649478, 0.9617082115649478, 3.166625134524323, 1], \"1374\": [0, 0, 2, 3, 0, 0, 0.46813621507094005, 0.851553185957342, 3], \"1620\": [2, 3, 5, 17, 0.5465437063680699, 0.9694005571881035, 1.7129785913749407, 3.9805309108532163, 1], \"1644\": [0, 1, 1, 7, 0, 0, 0, 2.8846080531794147, 4], \"755\": [0, 3, 5, 16, 0, 1.1786549963416462, 1.9810014688665833, 4.174387269895637, 2], \"930\": [1, 2, 5, 28, 0, 0.44685032427101873, 1.5087612460887005, 4.713329597980081, 2], \"1078\": [3, 4, 4, 11, 0.16957814342550975, 0.28408217141831077, 0.28408217141831077, 1.2483531421516365, 1], \"1258\": [3, 5, 5, 11, 0.03593200922606334, 0.0967872849473381, 0.0967872849473381, 0.40003031212220747, 1], \"1654\": [1, 1, 1, 17, 0, 0, 0, 4.545694097902595, 4], \"1603\": [2, 5, 12, 86, 0.05320403606346461, 0.29381079439315433, 1.0876231670925145, 4.625347756377659, 1], \"1662\": [0, 1, 1, 2, 0, 0, 0, 1.2992829841302609, 4], \"1451\": [1, 3, 7, 19, 0, 1.0698333241180664, 2.435850492798806, 4.354250816439323, 2], \"933\": [1, 2, 2, 16, 0, 0.322773392263051, 0.322773392263051, 3.2339989864424217, 2], \"946\": [0, 3, 3, 11, 0, 1.1786549963416462, 1.1786549963416462, 3.4420193761824107, 2], \"951\": [1, 1, 2, 5, 0, 0, 0.5968160716215132, 1.8086232752800597, 3], \"1547\": [1, 1, 3, 15, 0, 0, 0.3746934494414107, 2.5147596129376817, 3], \"1672\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1679\": [1, 2, 2, 11, 0, 1.0663514264498883, 1.0663514264498883, 4.07105968846103, 2], \"932\": [0, 2, 3, 14, 0, 0.18485641239714268, 0.3762784870216326, 2.393269917651168, 2], \"939\": [0, 0, 2, 7, 0, 0, 1.4053425560905852, 3.6556408126382025, 3], \"1178\": [0, 0, 2, 4, 0, 0, 0.22067136216882066, 0.6869552103120242, 3], \"1484\": [0, 0, 2, 11, 0, 0, 0.4978384282391795, 3.021211358854976, 3], \"1635\": [5, 5, 9, 29, 0.33063345964738017, 0.33063345964738017, 0.8196002896008718, 2.6519607344511664, 1], \"1694\": [3, 3, 3, 6, 0.8873031950009028, 0.8873031950009028, 0.8873031950009028, 1.9042374526547454, 1], \"1538\": [2, 2, 10, 18, 0.13176927763112334, 0.13176927763112334, 1.5087612460887005, 2.518377748894864, 1], \"1544\": [0, 1, 3, 22, 0, 0, 0.09106388892287375, 1.8127245976931, 3], \"1708\": [1, 3, 27, 78, 0, 0.368486104867077, 3.548738992506933, 5.711049733420098, 2], \"811\": [0, 0, 2, 9, 0, 0, 0.680877087968131, 3.0328400618690665, 3], \"1191\": [0, 0, 2, 8, 0, 0, 1.4053425560905852, 3.9166277718148943, 3], \"1360\": [4, 4, 5, 13, 0.8520882887098363, 0.8520882887098363, 1.131673150928998, 2.7214059922837657, 1], \"1582\": [1, 4, 9, 26, 0, 0.5945320530416506, 1.6315271639805737, 3.564299897185653, 2], \"1676\": [0, 1, 2, 4, 0, 0, 0.6257058997644127, 1.499234772300486, 3], \"1685\": [0, 0, 2, 4, 0, 0, 1.2992829841302609, 2.456735772821304, 3], \"1718\": [1, 1, 1, 8, 0, 0, 0, 3.404223102578692, 4], \"446\": [2, 3, 3, 7, 0.5245244681241525, 0.9367692632176957, 0.9367692632176957, 2.2458322764015963, 1], \"546\": [0, 1, 2, 7, 0, 0, 0.8286926725561692, 2.8217628372682206, 3], \"1447\": [0, 0, 3, 17, 0, 0, 0.851553185957342, 3.787237900461511, 3], \"1723\": [0, 1, 1, 5, 0, 0, 0, 2.4350742760401247, 4], \"1725\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1119\": [1, 4, 10, 567, 0, 0.8023464725249373, 2.1624384612508036, 9.268622026240733, 2], \"1580\": [3, 8, 10, 48, 0.11824782767032843, 0.6379558192352488, 0.8732580202978553, 3.500556662278902, 1], \"1604\": [1, 2, 3, 55, 0, 0.1559573650522073, 0.32190002976212223, 4.856995501090559, 2], \"953\": [1, 2, 3, 13, 0, 0.1629613095094132, 0.33520721431462625, 2.13745995925852, 2], \"984\": [0, 2, 6, 16, 0, 0.245122458032985, 1.252762968495368, 2.9326741375868544, 2], \"1170\": [2, 5, 7, 21, 0.2421400520048648, 0.9978075895461441, 1.4715919416317857, 3.4405937028587363, 1], \"1320\": [3, 4, 19, 58, 0.3811160790978779, 0.6014387540704463, 2.975950264601953, 5.161363333971909, 1], \"1736\": [0, 0, 7, 28, 0, 0, 4.4992311844914585, 7.349478614195719, 3], \"712\": [1, 1, 2, 7, 0, 0, 0.3308542443169896, 1.7585338215997346, 3], \"745\": [1, 5, 6, 14, 0, 0.3982637676579814, 0.5332723866487983, 1.5760086157849056, 2], \"910\": [0, 0, 2, 13, 0, 0, 0.5790338737925242, 3.5303893070438632, 3], \"1352\": [4, 4, 8, 55, 0.4962622595780941, 0.4962622595780941, 1.272644339049197, 4.807996278708048, 1], \"820\": [0, 0, 4, 9, 0, 0, 0.608512795419236, 1.6564813512685908, 3], \"962\": [0, 0, 5, 114, 0, 0, 2.02537432040956, 8.043869948691537, 3], \"1107\": [0, 0, 4, 42, 0, 0, 1.376991968457577, 5.791996831479057, 3], \"1261\": [0, 0, 2, 7, 0, 0, 0.7777045685880084, 2.735131159704881, 3], \"1754\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1759\": [0, 0, 1, 2, 0, 0, 0, 1.6945957207744073, 4], \"1763\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1168\": [1, 5, 6, 14, 0, 0.5262190008387144, 0.6917611789520681, 1.8608754479415561, 2], \"1767\": [1, 1, 1, 6, 0, 0, 0, 2.325399770760217, 4], \"1768\": [0, 0, 10, 49, 0, 0, 4.519231851198128, 7.725685866146149, 3], \"1306\": [0, 1, 2, 11, 0, 0, 0.22440062250426088, 2.152931623068217, 3], \"1774\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1299\": [0, 1, 4, 11, 0, 0, 1.6945957207744073, 3.5441747608912886, 3], \"526\": [0, 1, 2, 7, 0, 0, 0.4978384282391795, 2.1864136612320038, 3], \"1800\": [0, 0, 3, 3, 0, 0, 2.505525936990736, 2.505525936990736, 3], \"1212\": [3, 3, 11, 31, 0.6234672599219555, 0.6234672599219555, 2.536440299903183, 4.536932523764317, 1], \"1499\": [0, 0, 6, 13, 0, 0, 2.2587824703356527, 3.719362470839012, 3], \"1801\": [5, 6, 6, 14, 0.27989993200972596, 0.38193461069797024, 0.38193461069797024, 1.2619491436941679, 1], \"1816\": [1, 1, 1, 6, 0, 0, 0, 1.7802782868540987, 4], \"1241\": [0, 2, 3, 13, 0, 0.22314355131420976, 0.44628710262841953, 2.4477671028385437, 2], \"1402\": [0, 0, 2, 19, 0, 0, 0.4321333551903257, 3.9076893041710274, 3], \"1646\": [1, 2, 6, 28, 0, 0.07681317776161672, 0.541488403342866, 2.812332291156747, 2], \"1792\": [0, 0, 2, 8, 0, 0, 1.0986122886681096, 3.4965075614664802, 3], \"1825\": [0, 0, 3, 10, 0, 0, 1.591893602783191, 3.795000550022477, 3], \"1761\": [0, 1, 4, 9, 0, 0, 0.9033634973726954, 2.1319382401265434, 3], \"1790\": [2, 2, 5, 20, 0.11675051104219424, 0.11675051104219424, 0.573233393492083, 2.5940525614449754, 1], \"1829\": [0, 0, 25, 224, 0, 0, 3.983826301710628, 8.272908888632816, 3], \"1835\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1272\": [0, 0, 2, 8, 0, 0, 0.5705448584676129, 2.588342237036242, 3], \"1498\": [0, 1, 2, 6, 0, 0, 0.42285685082003355, 1.7469089030627032, 3], \"1776\": [0, 4, 4, 15, 0, 1.1895840668738362, 1.1895840668738362, 3.500827222610997, 2], \"528\": [0, 0, 2, 21, 0, 0, 0.1217306453046817, 2.726010914828642, 3], \"1842\": [0, 0, 0, 8, 0, 0, 0, 3.172083663361442, 4], \"1692\": [0, 3, 3, 10, 0, 2.2119792823642634, 2.217225244042889, 4.520799946222101, 2], \"1771\": [0, 0, 2, 64, 0, 0, 0.9315582040049435, 7.354174147401109, 3], \"1836\": [0, 0, 0, 2, 0, 0, 0, 2.1972245773362196, 4], \"718\": [1, 2, 3, 26, 0, 0.322773392263051, 0.6190392084062234, 4.180230968044548, 2], \"1298\": [0, 1, 2, 9, 0, 0, 0.3643378166843015, 2.292645751091488, 3], \"1791\": [1, 3, 10, 30, 0, 0.08907963005368878, 0.7105924664945938, 2.333770744628832, 2], \"1309\": [0, 0, 2, 8, 0, 0, 0.7939518796819109, 3.0152377681782476, 3], \"1575\": [0, 1, 3, 131, 0, 0, 1.33828514193353, 8.443770984939178, 3], \"1741\": [0, 1, 2, 18, 0, 0, 0.4519851237430572, 3.8562082263217494, 3], \"1874\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"648\": [0, 0, 2, 6, 0, 0, 0.42285685082003355, 1.7469089030627032, 3], \"1549\": [1, 1, 11, 28, 0, 0, 2.757227437078294, 4.570679730917609, 3], \"1700\": [2, 2, 3, 8, 0.46813621507094005, 0.46813621507094005, 0.851553185957342, 2.3563380465056065, 1], \"1713\": [0, 0, 2, 14, 0, 0, 0.13176927763112334, 2.067041028481381, 3], \"1770\": [0, 3, 3, 13, 0, 0.6325225587435105, 0.6325225587435105, 2.8661147802506046, 2], \"1883\": [0, 0, 2, 11, 0, 0, 1.0986122886681096, 4.119037174812473, 3], \"1887\": [0, 0, 0, 8, 0, 0, 0, 3.9951379121386528, 4], \"1888\": [0, 0, 0, 4, 0, 0, 0, 0.8520882887098363, 4], \"1891\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1892\": [0, 0, 0, 9, 0, 0, 0, 1.9333181673579534, 4], \"550\": [0, 1, 12, 49, 0, 0, 3.0990318433917947, 5.869546134318865, 3], \"1584\": [0, 3, 3, 10, 0, 0.5491078103370076, 0.5491078103370076, 2.211574599366026, 2], \"1669\": [0, 3, 7, 22, 0, 0.716136698784644, 1.9017603644423835, 4.047935282426976, 2], \"1850\": [2, 2, 2, 3, 0.14897379164772453, 0.14897379164772453, 0.14897379164772453, 0.30854721091574266, 1], \"1693\": [1, 3, 3, 18, 0, 0.5168226432383649, 0.5168226432383649, 3.2332087068398963, 2], \"1706\": [1, 3, 4, 15, 0, 0.40732557376108414, 0.6386143015396952, 2.6078491231614174, 2], \"1886\": [0, 1, 2, 5, 0, 0, 0.7328875092094594, 2.0485643031153966, 3], \"1919\": [0, 0, 0, 6, 0, 0, 0, 4.51085950651685, 4], \"1332\": [4, 4, 6, 14, 0.6931471805599453, 0.6931471805599453, 1.1786549963416462, 2.583997552432231, 1], \"1926\": [1, 1, 2, 4, 0, 0, 1.6094379124341003, 2.833213344056216, 3], \"1917\": [0, 1, 1, 14, 0, 0, 0, 4.948759890378168, 4], \"1932\": [0, 0, 0, 2, 0, 0, 0, 0.7939518796819109, 4], \"843\": [1, 1, 5, 13, 0, 0, 1.0384437672016569, 2.590449630549882, 3], \"1937\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1253\": [0, 0, 2, 12, 0, 0, 0.4572413776318843, 3.0850959541705896, 3], \"1512\": [0, 0, 2, 12, 0, 0, 0.462623521948113, 3.0990318433917947, 3], \"1948\": [0, 0, 0, 7, 0, 0, 0, 1.7666955005648388, 4], \"1851\": [1, 4, 4, 12, 0, 1.6722858160937641, 1.6722858160937641, 3.6868503698871553, 2], \"1958\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"806\": [2, 3, 5, 16, 0.15970111035790735, 0.3290234126082223, 0.7334495595839676, 2.4917375230145287, 1], \"883\": [2, 3, 4, 16, 0.09287412500644375, 0.1980128865886302, 0.32879599515977564, 1.9780606609663731, 1], \"1296\": [0, 1, 2, 7, 0, 0, 0.9315582040049435, 2.9880102274600806, 3], \"1964\": [0, 0, 0, 5, 0, 0, 0, 2.8716796248840124, 4], \"999\": [0, 1, 2, 9, 0, 0, 1.1700712526502546, 3.828641396489095, 3], \"1731\": [0, 0, 2, 3, 0, 0, 0.3308542443169896, 0.6325225587435105, 3], \"1925\": [3, 3, 3, 6, 0.6987494361086152, 0.6987494361086152, 0.6987494361086152, 1.6183865180101145, 1], \"1956\": [6, 6, 6, 13, 1.541901705443613, 1.541901705443613, 1.541901705443613, 2.9038854770628877, 1], \"1957\": [0, 0, 0, 3, 0, 0, 0, 2.217225244042889, 4], \"696\": [0, 0, 5, 104, 0, 0, 1.0065376097219332, 6.614168928635075, 3], \"1206\": [1, 2, 3, 12, 0, 0.5705448584676129, 1.0045833390198333, 3.3566290621822787, 2], \"1997\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"1753\": [0, 1, 3, 22, 0, 0, 0.36696662997527996, 3.212550443034938, 3], \"1978\": [0, 1, 2, 4, 0, 0, 1.4663370687934272, 2.662587827025453, 3], \"2003\": [0, 0, 1, 2, 0, 0, 0, 2.03688192726104, 4], \"474\": [0, 0, 2, 8, 0, 0, 0.35774963506849783, 2.0645462087333954, 3], \"1797\": [1, 1, 2, 6, 0, 0, 0.11343592966337171, 0.7328875092094594, 3], \"1993\": [0, 1, 3, 4, 0, 0, 0.7102416139192455, 1.0434802179733935, 3], \"966\": [3, 3, 3, 7, 0.1505340393570698, 0.1505340393570698, 0.1505340393570698, 0.6336500816953002, 1], \"1737\": [0, 1, 3, 8, 0, 0, 0.37156355643248307, 1.4350845252893227, 3], \"1966\": [2, 7, 8, 29, 0.1578069910303688, 1.129470277028015, 1.317759260297834, 3.609299602269075, 1], \"2001\": [1, 1, 2, 4, 0, 0, 0.5968160716215132, 1.4505139538541845, 3], \"2015\": [0, 0, 0, 4, 0, 0, 0, 1.133098464739279, 4], \"2018\": [0, 0, 0, 5, 0, 0, 0, 3.7534179752515073, 4], \"1806\": [1, 2, 2, 9, 0, 0.1735948056557174, 0.1735948056557174, 1.576679684688599, 2], \"1675\": [1, 2, 3, 9, 0, 0.3281156420302715, 0.6279612006752497, 2.1820068923653326, 2], \"1849\": [0, 1, 2, 4, 0, 0, 0.6257058997644127, 1.499234772300486, 3], \"1962\": [1, 1, 7, 17, 0, 0, 2.230560997603811, 3.9116839649095567, 3], \"1179\": [1, 1, 4, 10, 0, 0, 0.40755934971127916, 1.4218193322822756, 3], \"783\": [0, 1, 3, 18, 0, 0, 0.08568511684827633, 1.4399952916035168, 3], \"1894\": [18, 32, 32, 70, 1.0267708632689274, 1.8966774090875531, 1.8966774090875531, 3.335832560530689, 1], \"924\": [2, 2, 3, 13, 0.3513978868378886, 0.3513978868378886, 0.666478933477784, 2.9332968026131985, 1], \"1970\": [1, 3, 3, 8, 0, 0.5049690916532777, 0.5049690916532777, 1.7354594245395225, 2], \"363\": [0, 1, 4, 14, 0, 0, 1.7414976344471667, 4.071537425905622, 3], \"2047\": [0, 2, 3, 9, 0, 0.2876820724517809, 0.5596157879354227, 2.0476928433652555, 2], \"2051\": [0, 0, 0, 5, 0, 0, 0, 3.166625134524323, 4], \"326\": [0, 1, 2, 13, 0, 0, 0.06136894637629212, 1.3012947681109794, 3], \"1456\": [2, 3, 4, 10, 0.2815658454343448, 0.5491078103370076, 0.8332625422708201, 2.211574599366026, 1], \"1477\": [2, 3, 4, 9, 0.3746934494414107, 0.7044467358138786, 1.0360919316867756, 2.322833253823993, 1], \"1677\": [5, 5, 6, 12, 0.48647129981422654, 0.48647129981422654, 0.6430403605057664, 1.5280158077144577, 1], \"1690\": [4, 7, 27, 70, 1.090347778818216, 1.9529400549835714, 4.414970840873718, 6.398062980305656, 1], \"610\": [0, 3, 3, 8, 0, 0.13616164199118494, 0.13616164199118494, 0.7116141846848596, 2], \"2058\": [2, 4, 4, 19, 0.02827043393825548, 0.10858113035786851, 0.10858113035786851, 1.277542997493855, 1], \"959\": [0, 0, 2, 10, 0, 0, 0.9315582040049435, 3.6753264877092326, 3], \"2054\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2012\": [1, 1, 3, 6, 0, 0, 1.0045833390198333, 2.069779630768099, 3], \"2084\": [1, 1, 2, 9, 0, 0, 0.680877087968131, 3.0328400618690665, 3], \"2087\": [2, 2, 2, 6, 0.05910139227591337, 0.05910139227591337, 0.05910139227591337, 0.4369283775639494, 1], \"2072\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2086\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"797\": [1, 1, 5, 10, 0, 0, 1.3541748116977779, 2.5252687684666255, 3], \"986\": [0, 0, 3, 7, 0, 0, 1.084013489246957, 2.455492764581707, 3], \"1464\": [0, 0, 3, 7, 0, 0, 0.49091031406504926, 1.4930623365455966, 3], \"2094\": [0, 0, 3, 9, 0, 0, 0.7221347174331976, 2.3541724617845388, 3], \"2080\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1220\": [0, 3, 4, 5, 0, 1.1616252564968437, 1.589732841354768, 1.9597512004671847, 2], \"491\": [0, 2, 3, 10, 0, 0.44183275227903923, 0.8109302162163288, 2.700615222614692, 2], \"896\": [0, 1, 2, 6, 0, 0, 0.44183275227903923, 1.791759469228055, 3], \"1407\": [1, 3, 3, 7, 0, 0.5049690916532777, 0.5049690916532777, 1.5209656148047959, 2], \"1585\": [3, 11, 15, 90, 0.25708853309999324, 1.597642231761335, 2.1197422277039895, 5.579139645103247, 1], \"1651\": [1, 3, 3, 9, 0, 0.21007146974685698, 0.21007146974685698, 1.132658130077827, 2], \"1798\": [1, 1, 4, 15, 0, 0, 0.23922968906583414, 1.5687566737730403, 3], \"1951\": [0, 2, 3, 20, 0, 0.2876820724517809, 0.5596157879354227, 3.5361166995615263, 2], \"2048\": [1, 4, 5, 25, 0, 0.2805718342692762, 0.40950551764516935, 2.6138729824937688, 2], \"2108\": [0, 1, 1, 3, 0, 0, 0, 1.3156767939059373, 4], \"2125\": [0, 0, 0, 2, 0, 0, 0, 2.03688192726104, 4], \"1286\": [3, 3, 4, 9, 0.9925527167077854, 0.9925527167077854, 1.3910002521573033, 2.790122777531306, 1], \"1574\": [3, 4, 7, 13, 0.24921579162398486, 0.40755934971127916, 0.9325106757409186, 1.842843098031443, 1], \"1807\": [0, 1, 4, 11, 0, 0, 0.7545999597736089, 2.253513199001649, 3], \"1814\": [1, 2, 4, 9, 0, 0.8286926725561692, 1.8182862235614836, 3.300604455487802, 2], \"1909\": [1, 1, 3, 11, 0, 0, 0.2608348224155929, 1.6107615393646086, 3], \"2116\": [1, 1, 3, 7, 0, 0, 0.33395175639587793, 1.1501258231182176, 3], \"2138\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"527\": [0, 0, 2, 4, 0, 0, 3.648987693048466, 5.081404364984463, 3], \"2134\": [0, 2, 2, 6, 0, 0.5042466526679481, 0.5042466526679481, 1.9317589695090702, 2], \"2155\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2021\": [2, 3, 4, 11, 0.18315872720701828, 0.3731218633879398, 0.5900175637637866, 1.9573306871741878, 1], \"2038\": [1, 2, 4, 9, 0, 0.13720112151348504, 0.462623521948113, 1.3807643931104296, 2], \"2120\": [0, 0, 4, 18, 0, 0, 2.9326741375868544, 5.8888779583328805, 3], \"512\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"972\": [4, 5, 11, 22, 1.4505139538541845, 1.8086232752800597, 3.2462527359337203, 4.602922764468019, 1], \"1327\": [1, 2, 2, 6, 0, 0.1367313953551935, 0.1367313953551935, 0.8409986269592165, 2], \"1612\": [1, 1, 3, 4, 0, 0, 1.2939210409888755, 1.7414976344471667, 3], \"2165\": [15, 22, 52, 80, 2.7474743691570778, 3.348964423627468, 4.872325054988416, 6.177181677185043, 1], \"441\": [1, 2, 5, 18, 0, 0.08682239465891518, 0.4490949483208239, 2.1218948579321752, 2], \"1762\": [4, 4, 13, 23, 0.5991182309116689, 0.5991182309116689, 2.268683541318364, 3.3367728141455837, 1], \"2163\": [1, 1, 1, 2, 0, 0, 0, 0.36101334553733055, 4], \"1514\": [0, 2, 2, 6, 0, 0.18658595558041216, 0.18658595558041216, 1.0459685551826876, 2], \"1508\": [0, 2, 2, 6, 0, 0.27193371548364176, 0.27193371548364176, 1.33828514193353, 2], \"1878\": [3, 10, 12, 24, 0.11998394835114094, 0.8822914905583823, 1.1117456856974017, 2.2146977207921363, 1], \"2197\": [0, 0, 2, 2, 0, 0, 0.9808292530117262, 0.9808292530117262, 3], \"1621\": [0, 2, 2, 14, 0, 0.4572413776318843, 0.4572413776318843, 3.3811918352285555, 2], \"1305\": [2, 3, 6, 10, 0.37827896780400755, 0.7102416139192455, 1.636650475958985, 2.5252687684666255, 1], \"2205\": [0, 0, 9, 13, 0, 0, 3.7111968023130126, 4.49922470394915, 3], \"2217\": [1, 1, 7, 23, 0, 0, 2.277267285009756, 4.558752205963715, 3], \"2227\": [0, 1, 58, 138, 0, 0, 5.024078570124617, 7.20035755111324, 3], \"2207\": [0, 0, 13, 17, 0, 0, 4.773805997962503, 5.4882487836561324, 3], \"1111\": [0, 2, 4, 13, 0, 0.5316597106688327, 1.3368460857059095, 3.4226040422995063, 2], \"2233\": [0, 0, 4, 9, 0, 0, 1.791759469228055, 3.2700441114426, 3], \"2234\": [0, 1, 2, 6, 0, 0, 1.791759469228055, 3.828641396489095, 3], \"2232\": [0, 0, 2, 3, 0, 0, 0.44183275227903923, 0.8109302162163288, 3], \"2137\": [2, 2, 2, 4, 0.061939299440290606, 0.061939299440290606, 0.061939299440290606, 0.22760642132910802, 1], \"1559\": [0, 1, 3, 8, 0, 0, 0.8032907596583713, 2.2790219792659046, 3], \"2117\": [0, 0, 3, 8, 0, 0, 0.9582549309731873, 2.5199979695992702, 3], \"2237\": [0, 1, 2, 3, 0, 0, 0.41397579777607296, 0.7672551527136672, 3], \"2244\": [1, 1, 2, 12, 0, 0, 0.31508104663989533, 2.662587827025453, 3], \"2259\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1423\": [0, 1, 2, 6, 0, 0, 0.4321333551903257, 1.7689794408962352, 3], \"2206\": [1, 2, 2, 10, 0, 0.26121549926361765, 0.26121549926361765, 2.135666684336786, 2], \"2220\": [2, 2, 12, 21, 0.35454501768090746, 0.35454501768090746, 2.7923391996571976, 3.8694263875495225, 1], \"500\": [1, 2, 2, 5, 0, 0.15123096972392353, 0.15123096972392353, 0.7032995520239633, 2], \"506\": [1, 4, 6, 10, 0, 0.6257058997644127, 1.084013489246957, 1.8617180578349655, 2], \"1515\": [0, 0, 2, 4, 0, 0, 0.9088557533866369, 1.9352717508502575, 3], \"2231\": [0, 2, 2, 6, 0, 0.10084103435079068, 0.10084103435079068, 0.6703427047413258, 2], \"2236\": [0, 1, 21, 42, 0, 0, 1.7851761669788575, 3.03699511576851, 3], \"2263\": [0, 3, 3, 8, 0, 1.3862943611198906, 1.3862943611198906, 3.106080330722856, 2], \"649\": [1, 3, 3, 8, 0, 0.30024869505163937, 0.30024869505163937, 1.2499797771635763, 2], \"1988\": [2, 2, 2, 4, 0.2561688067457042, 0.2561688067457042, 0.2561688067457042, 0.7737512129745747, 1], \"2249\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2271\": [1, 3, 5, 18, 0, 0.1369919558744535, 0.3420497551472166, 1.838242408689946, 2], \"1813\": [1, 2, 3, 8, 0, 0.5042466526679481, 0.9064059726416132, 2.4416340228612787, 2], \"2132\": [1, 2, 2, 3, 0, 0.35454501768090746, 0.35454501768090746, 0.6716409753389817, 2], \"2188\": [0, 1, 2, 5, 0, 0, 0.5705448584676129, 1.7591832987934422, 3], \"2264\": [0, 0, 1, 5, 0, 0, 0, 0.8054144824310264, 4], \"2265\": [0, 0, 1, 2, 0, 0, 0, 0.30774963550259016, 4], \"1915\": [2, 2, 3, 4, 0.3643378166843015, 0.3643378166843015, 0.6876375247489758, 1.0145934326149337, 1], \"1985\": [0, 0, 5, 9, 0, 0, 1.9189724933235048, 2.987559431798117, 3], \"2213\": [3, 3, 3, 5, 0.5897688261061103, 0.5897688261061103, 0.5897688261061103, 1.1731453405306764, 1], \"2313\": [0, 0, 1, 3, 0, 0, 0, 2.772588722239781, 4], \"458\": [2, 2, 4, 9, 0.3856624808119847, 0.3856624808119847, 1.0586069540544105, 2.3541724617845388, 1], \"815\": [0, 2, 2, 10, 0, 0.680877087968131, 0.680877087968131, 3.234365001910661, 2], \"1632\": [0, 0, 5, 11, 0, 0, 1.8617180578349655, 3.307045950539049, 3], \"1356\": [0, 0, 26, 35, 0, 0, 4.9029494924550505, 5.950154152089618, 3], \"1461\": [2, 5, 5, 10, 0.538996500732687, 1.6982334112172315, 1.6982334112172315, 2.9368917735310576, 1], \"2294\": [0, 1, 2, 6, 0, 0, 0.44685032427101873, 1.8034282130624324, 3], \"2305\": [0, 0, 5, 6, 0, 0, 1.7591832987934422, 2.069779630768099, 3], \"2307\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1630\": [0, 0, 3, 20, 0, 0, 0.4396392879207579, 3.240241046388213, 3], \"1918\": [2, 2, 2, 6, 0.5175824062288705, 0.5175824062288705, 0.5175824062288705, 1.9603334760164182, 1], \"1764\": [1, 1, 2, 4, 0, 0, 0.3856624808119847, 1.0586069540544105, 3], \"2162\": [2, 2, 8, 11, 0.322773392263051, 0.322773392263051, 1.9594238682220362, 2.5276315944543417, 1], \"2255\": [1, 2, 4, 7, 0, 0.7328875092094594, 1.6722858160937641, 2.656282635897138, 2], \"2354\": [0, 0, 46, 58, 0, 0, 5.463994569279079, 7.1197214035547285, 3], \"2309\": [1, 1, 1, 2, 0, 0, 0, 1.6094379124341003, 4], \"1120\": [0, 0, 2, 5, 0, 0, 0.5705448584676129, 1.7591832987934422, 3], \"1534\": [0, 0, 2, 2, 0, 0, 0.5543107357057295, 0.5543107357057295, 3], \"1616\": [0, 0, 3, 4, 0, 0, 0.8347976976229722, 1.1996154989569803, 3], \"1983\": [0, 1, 3, 8, 0, 0, 0.666478933477784, 2.0459936076122958, 3], \"2288\": [0, 0, 2, 3, 0, 0, 0.41397579777607296, 0.7672551527136672, 3], \"2369\": [0, 0, 2, 3, 0, 0, 2.1972245773362196, 2.9444389791664403, 3], \"255\": [0, 0, 2, 5, 0, 0, 0.8873031950009028, 2.295416603515433, 3], \"1351\": [1, 1, 2, 5, 0, 0, 0.5543107357057295, 1.7280436548419473, 3], \"2210\": [0, 1, 2, 6, 0, 0, 0.1559573650522073, 0.923856972257471, 3], \"2324\": [0, 0, 28, 33, 0, 0, 4.462795927525512, 4.884352381194201, 3], \"2325\": [2, 2, 27, 37, 0.44183275227903923, 0.44183275227903923, 4.53153212927978, 5.25300033074637, 1], \"2326\": [0, 2, 2, 3, 0, 1.4053425560905852, 1.4053425560905852, 2.069779630768099, 2], \"2370\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2383\": [6, 11, 20, 48, 0.48285177172358457, 1.1269427952943356, 2.0664261735677654, 3.7068209862108885, 1], \"2384\": [1, 2, 4, 6, 0, 0.10648348040245009, 0.37117603462953225, 0.6987494361086152, 2], \"889\": [1, 2, 3, 9, 0, 0.245122458032985, 0.48550781578170077, 1.890850371872286, 2], \"969\": [1, 5, 7, 9, 0, 0.37698021009947796, 0.6405034470745233, 0.9096754927554358, 2], \"1586\": [3, 7, 8, 17, 0.17623598225838671, 0.7174741337840569, 0.8630796750397396, 1.9724737393111376, 1], \"1724\": [4, 8, 11, 17, 0.12535952944324677, 0.4280245242402377, 0.6981430277533169, 1.2274023532081457, 1], \"1824\": [0, 0, 5, 6, 0, 0, 2.700615222614692, 3.044522437723423, 3], \"2175\": [0, 1, 2, 4, 0, 0, 0.3856624808119847, 1.0586069540544105, 3], \"2192\": [0, 1, 2, 2, 0, 0, 0.9315582040049435, 0.9315582040049435, 3], \"2204\": [0, 0, 2, 3, 0, 0, 0.30538164955118186, 0.5897688261061103, 3], \"2302\": [0, 1, 2, 3, 0, 0, 1.0986122886681096, 1.7047480922384253, 3], \"2350\": [0, 1, 2, 3, 0, 0, 0.33647223662121295, 0.6418538861723948, 3], \"2364\": [1, 2, 4, 5, 0, 0.9808292530117262, 2.03688192726104, 2.4350742760401247, 2], \"2362\": [1, 3, 11, 22, 0, 0.851553185957342, 2.947576236641573, 4.293725416698938, 2], \"2376\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1303\": [1, 2, 5, 8, 0, 0.6576404921030354, 1.9189724933235048, 2.7652947438772277, 2], \"1984\": [1, 1, 2, 2, 0, 0, 0.7191226669632059, 0.7191226669632059, 3], \"1994\": [0, 0, 13, 18, 0, 0, 4.0879126212373045, 4.795790545596741, 3], \"2333\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1782\": [0, 0, 2, 5, 0, 0, 0.9315582040049435, 2.362304327695668, 3], \"2183\": [0, 1, 2, 2, 0, 0, 1.2992829841302609, 1.2992829841302609, 3], \"2337\": [0, 0, 2, 2, 0, 0, 0.19671029424605424, 0.19671029424605424, 3], \"2340\": [0, 4, 25, 36, 0, 1.3240520522426698, 4.593242271893377, 5.413645283585913, 2], \"2342\": [3, 3, 10, 16, 1.042653635020065, 1.042653635020065, 3.0637723102856707, 3.9749019870261018, 1], \"2339\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"408\": [1, 1, 2, 6, 0, 0, 0.09983345855568045, 0.6652012501693859, 3], \"2360\": [0, 11, 184, 238, 0, 3.5092368366525744, 5.6215010808298675, 9.186990134172017, 2], \"2405\": [14, 14, 33, 44, 2.4931297272675828, 2.5483673698596165, 4.214529726998853, 4.848398267702564, 1], \"2368\": [5, 10, 142, 178, 1.3803241941333868, 2.4805376567922734, 5.542747825054473, 8.137653100040136, 1], \"2348\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2355\": [0, 0, 1, 3, 0, 0, 0, 1.4954936530848826, 4], \"2358\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"664\": [1, 1, 2, 5, 0, 0, 0.6466271649250525, 1.8993901334204204, 3], \"2304\": [0, 1, 2, 3, 0, 0, 0.44183275227903923, 0.8109302162163288, 3], \"2366\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1065\": [0, 0, 2, 2, 0, 0, 1.133098464739279, 1.133098464739279, 3], \"1486\": [0, 0, 2, 6, 0, 0, 0.3393540829961018, 1.5339303599259553, 3], \"1557\": [0, 0, 2, 3, 0, 0, 0.5968160716215132, 1.042653635020065, 3], \"2387\": [0, 0, 10, 14, 0, 0, 3.282452344969581, 3.9368406883707534, 3], \"2372\": [0, 0, 4, 6, 0, 0, 1.717651497074333, 2.423537703411708, 3], \"2373\": [3, 4, 8, 9, 0.9264088620397397, 1.3115342859107813, 2.472113298328091, 2.6898056813596725, 1], \"1908\": [14, 25, 28, 66, 0.6385604952128653, 1.3480672262516118, 1.5206091905077246, 3.037986893906405, 1], \"2374\": [0, 2, 4, 5, 0, 0.5790338737925242, 1.4200325007517407, 1.7752846320245501, 2], \"2394\": [0, 0, 2, 4, 0, 0, 0.4737843520856416, 1.2308802572458604, 3], \"2388\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2389\": [1, 1, 2, 2, 0, 0, 0.6690496289808848, 0.6690496289808848, 3], \"2431\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"903\": [0, 1, 2, 5, 0, 0, 0.4054651081081644, 1.4170660197866443, 3], \"1684\": [1, 1, 2, 2, 0, 0, 1.6945957207744073, 1.6945957207744073, 3], \"1845\": [3, 3, 4, 9, 1.0045833390198333, 1.0045833390198333, 1.4053425560905852, 2.8080115520822657, 1], \"2056\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1479\": [0, 0, 2, 4, 0, 0, 1.9042374526547454, 3.172083663361442, 3], \"2344\": [1, 1, 2, 4, 0, 0, 0.9315582040049435, 1.9676501356917193, 3], \"2065\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"462\": [0, 0, 3, 10, 0, 0, 0.7472144018302211, 2.5911926629667694, 3], \"2400\": [0, 0, 1, 2, 0, 0, 0, 1.4053425560905852, 4], \"2401\": [1, 1, 2, 2, 0, 0, 0.2815658454343448, 0.2815658454343448, 3], \"2403\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1680\": [0, 1, 2, 4, 0, 0, 0.8873031950009028, 1.9042374526547454, 3], \"2262\": [0, 1, 2, 4, 0, 0, 0.41397579777607296, 1.1155618469818829, 3], \"2267\": [0, 0, 3, 3, 0, 0, 1.6274564179367788, 1.6274564179367788, 3], \"2330\": [0, 0, 2, 2, 0, 0, 1.349926716949016, 1.349926716949016, 3], \"2408\": [0, 0, 2, 5, 0, 0, 0.9315582040049435, 2.362304327695668, 3], \"2451\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2458\": [1, 2, 2, 2, 0, 0.9555114450274365, 0.9555114450274365, 0.9555114450274365, 2], \"1073\": [1, 6, 8, 14, 0, 1.0169342576538425, 1.4200325007517407, 2.361593646122156, 2], \"2179\": [0, 0, 2, 2, 0, 0, 1.0663514264498883, 1.0663514264498883, 3], \"2413\": [0, 1, 3, 4, 0, 0, 0.28861100888643976, 0.4667455393261779, 3], \"2474\": [13, 17, 30, 35, 2.4925917862774942, 2.99779461308806, 4.172153711407473, 4.541197161492806, 1], \"2414\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2418\": [0, 1, 1, 2, 0, 0, 0, 1.0986122886681096, 4], \"2452\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2468\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2334\": [2, 2, 3, 8, 0.4795730802618863, 0.4795730802618863, 0.8690378470236095, 2.3838105329166317, 1], \"2395\": [0, 0, 2, 3, 0, 0, 1.4053425560905852, 2.069779630768099, 3], \"2421\": [0, 1, 2, 2, 0, 0, 0.462623521948113, 0.462623521948113, 3], \"2473\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2182\": [0, 1, 2, 4, 0, 0, 0.5108256237659907, 1.2992829841302609, 3], \"2429\": [2, 2, 3, 6, 0.5175824062288705, 0.5175824062288705, 0.9264088620397397, 1.9603334760164182, 1], \"2435\": [0, 0, 2, 2, 0, 0, 1.252762968495368, 1.252762968495368, 3], \"2433\": [0, 0, 2, 3, 0, 0, 0.705886206337375, 1.1962507582320256, 3], \"1987\": [1, 1, 3, 5, 0, 0, 0.40920343021877154, 0.8773396452897118, 3], \"2301\": [0, 4, 5, 5, 0, 1.8744511850731684, 2.2639159518348917, 2.2639159518348917, 2], \"2436\": [11, 15, 37, 42, 1.8306748854777286, 2.368753311491382, 4.034151686210931, 4.348516855775004, 1], \"2490\": [4, 10, 35, 39, 1.2872888373444415, 2.774225922486277, 4.852559253737898, 5.52283701977987, 1], \"1468\": [0, 1, 2, 7, 0, 0, 0.17435338714477774, 1.2039728043259361, 3], \"2216\": [0, 1, 2, 12, 0, 0, 0.02473842915612247, 0.6427433168307363, 3], \"2443\": [0, 2, 3, 4, 0, 0.8472978603872036, 1.3862943611198906, 1.8458266904983307, 2], \"1393\": [0, 1, 2, 5, 0, 0, 0.9088557533866369, 2.3281806401830094, 3], \"2256\": [0, 1, 2, 3, 0, 0, 1.252762968495368, 1.890850371872286, 3], \"2457\": [1, 1, 4, 4, 0, 0, 2.743768283704289, 2.743768283704289, 3], \"2456\": [0, 1, 1, 2, 0, 0, 0, 0.6157605169445252, 4], \"275\": [1, 1, 2, 4, 0, 0, 0.29849298855599654, 0.8718389693033213, 3], \"900\": [2, 2, 3, 6, 0.7191226669632059, 0.7191226669632059, 1.2144441041932312, 2.348865845558052, 1], \"1715\": [1, 1, 2, 2, 0, 0, 0.9808292530117262, 0.9808292530117262, 3], \"1786\": [1, 1, 2, 4, 0, 0, 0.14842000511827327, 0.49469624183610705, 3], \"2032\": [5, 7, 8, 12, 0.4054651081081644, 0.6830968447064438, 0.8241754429663495, 1.355835153635182, 1], \"2428\": [0, 1, 2, 5, 0, 0, 0.07410797215372188, 0.3925617032722565, 3], \"2461\": [5, 8, 12, 20, 0.9079722049990643, 1.5659002021354183, 2.25346943206931, 3.2055327629577235, 1], \"2462\": [0, 0, 9, 14, 0, 0, 3.4302779287493896, 4.298544376547488, 3], \"2464\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1364\": [0, 0, 2, 2, 0, 0, 0.8109302162163288, 0.8109302162163288, 3], \"2449\": [0, 2, 16, 28, 0, 1.007640510462383, 4.625323911523559, 5.834429276062366, 2], \"2470\": [0, 0, 0, 5, 0, 0, 0, 0.25676403304847073, 4], \"1324\": [0, 0, 2, 8, 0, 0, 0.9315582040049435, 3.243193132518907, 3], \"2031\": [1, 4, 5, 11, 0, 1.589732841354768, 1.9597512004671847, 3.418126443762603, 2], \"2347\": [0, 1, 3, 5, 0, 0, 0.38776553100876343, 0.8397506547518208, 3], \"2409\": [0, 2, 3, 3, 0, 1.133098464739279, 1.7469089030627032, 1.7469089030627032, 2], \"2481\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2534\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1823\": [1, 1, 3, 4, 0, 0, 0.4964368863138911, 0.7621400520468967, 3], \"1938\": [1, 2, 3, 4, 0, 0.3513978868378886, 0.666478933477784, 0.9873866535578852, 2], \"2487\": [4, 14, 16, 26, 0.39042723074362384, 1.9243575906695791, 2.156609858182029, 3.0530150577690764, 1], \"2488\": [0, 1, 3, 3, 0, 0, 2.9444389791664403, 2.9444389791664403, 3], \"2555\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1605\": [3, 3, 6, 12, 0.22203796800646014, 0.22203796800646014, 0.6903809270670552, 1.605008226342512, 1], \"2477\": [1, 1, 2, 3, 0, 0, 0.8668106746107854, 1.4118276631250553, 3], \"2497\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2498\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2499\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"793\": [1, 1, 4, 7, 0, 0, 1.4825711915553106, 2.435850492798806, 3], \"2504\": [0, 1, 2, 3, 0, 0, 0.9555114450274365, 1.5260563034950494, 3], \"623\": [0, 0, 2, 4, 0, 0, 0.5705448584676129, 1.4053425560905852, 3], \"1466\": [0, 0, 2, 3, 0, 0, 1.1700712526502546, 1.791759469228055, 3], \"2161\": [1, 1, 2, 3, 0, 0, 0.4274440148269396, 0.7884573603642702, 3], \"2450\": [1, 3, 4, 7, 0, 1.084013489246957, 1.499234772300486, 2.455492764581707, 2], \"2565\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1355\": [0, 1, 2, 3, 0, 0, 1.2992829841302609, 1.9459101490553132, 3], \"2520\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2139\": [1, 1, 2, 3, 0, 0, 0.31508104663989533, 0.6061358035703156, 3], \"2541\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1353\": [0, 1, 2, 4, 0, 0, 0.4274440148269396, 1.1420974006078486, 3], \"1781\": [2, 2, 3, 6, 0.09055957704572704, 0.09055957704572704, 0.19331931100349597, 0.6168494265092993, 1], \"2491\": [1, 1, 2, 5, 0, 0, 0.11918851726511835, 0.5828518646162708, 3], \"2552\": [1, 3, 3, 8, 0, 0.4353180712578455, 0.4353180712578455, 1.584896803517983, 2], \"2558\": [0, 0, 0, 2, 0, 0, 0, 0.8873031950009028, 4], \"2561\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"2606\": [2, 2, 5, 12, 0.4978384282391795, 0.4978384282391795, 1.6158688027643908, 3.1874184472789886, 1], \"2613\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1777\": [3, 3, 4, 5, 0.19044696423787166, 0.19044696423787166, 0.3169692647235698, 0.4591642086306792, 1], \"2572\": [0, 1, 4, 6, 0, 0, 1.1242547192814474, 1.7361277732419063, 3], \"2573\": [1, 2, 3, 8, 0, 0.17435338714477774, 0.35667494393873234, 1.3981288187668934, 2], \"2571\": [1, 2, 2, 2, 0, 0.06971463261536112, 0.06971463261536112, 0.06971463261536112, 2], \"2586\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2587\": [0, 1, 1, 2, 0, 0, 0, 0.9315582040049435, 4], \"2590\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2658\": [3, 10, 10, 12, 1.2939210409888755, 3.1836266511865405, 3.4111202547164563, 3.7693745481331207, 1], \"1961\": [1, 1, 2, 6, 0, 0, 0.48550781578170077, 1.890850371872286, 3], \"2621\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2617\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2713\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2646\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"2650\": [1, 1, 1, 2, 0, 0, 0, 0.5790338737925242, 4], \"2530\": [0, 2, 2, 2, 0, 0.5245244681241525, 0.5245244681241525, 0.5245244681241525, 2], \"2669\": [0, 1, 1, 2, 0, 0, 0, 1.4053425560905852, 4], \"1054\": [0, 3, 3, 14, 0, 0.29626581614317243, 0.29626581614317243, 2.141192416571734, 2], \"1460\": [1, 2, 2, 5, 0, 0.16635770580494058, 0.16635770580494058, 0.7566953924986649, 2], \"2670\": [1, 3, 3, 3, 0, 1.6650077635889111, 1.6650077635889111, 1.6650077635889111, 2], \"2720\": [0, 5, 5, 11, 0, 1.7591832987934422, 1.7591832987934422, 3.189209324519731, 2], \"2724\": [1, 3, 3, 4, 0, 0.4675170966757307, 0.4675170966757307, 0.7225130753643099, 2], \"2732\": [4, 8, 8, 14, 0.18400364297693944, 0.592265955706165, 0.592265955706165, 1.2455218072388086, 1], \"2762\": [0, 2, 2, 2, 0, 0.38193461069797024, 0.38193461069797024, 0.38193461069797024, 2], \"911\": [0, 2, 2, 7, 0, 0.9315582040049435, 0.9315582040049435, 2.9880102274600806, 2], \"2677\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2738\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"2684\": [0, 2, 2, 2, 0, 0.5245244681241525, 0.5245244681241525, 0.5245244681241525, 2], \"2734\": [1, 5, 5, 7, 0, 0.5856612655898056, 0.5856612655898056, 0.940206283270713, 2], \"2743\": [1, 2, 2, 3, 0, 0.3101549283038395, 0.3101549283038395, 0.5978370007556205, 2], \"1392\": [0, 2, 2, 8, 0, 0.04535924939893056, 0.04535924939893056, 0.5552975616603869, 2], \"1509\": [1, 3, 3, 5, 0, 0.04110167568555186, 0.04110167568555186, 0.11024367848289826, 2], \"2794\": [0, 3, 3, 3, 0, 1.4118276631250553, 1.4118276631250553, 1.4118276631250553, 2], \"577\": [0, 2, 2, 7, 0, 0.026650477991494073, 0.026650477991494073, 0.28582349288492137, 2], \"2636\": [0, 3, 3, 6, 0, 0.3012613305781618, 0.3012613305781618, 0.8780695190539574, 2], \"2809\": [16, 24, 24, 66, 1.227538371151658, 1.8607942290407362, 1.8607942290407362, 3.738992740596082, 1], \"2755\": [0, 3, 3, 8, 0, 1.3862943611198906, 1.3862943611198906, 3.106080330722856, 2], \"2756\": [2, 3, 3, 4, 0.22567199766756846, 0.4508337131380154, 0.4508337131380154, 0.69945634975321, 1], \"2818\": [0, 2, 2, 3, 0, 1.0360919316867756, 1.0360919316867756, 1.6274564179367788, 2], \"2757\": [0, 2, 2, 3, 0, 1.0663514264498883, 1.0663514264498883, 1.6650077635889111, 2], \"1929\": [1, 2, 2, 5, 0, 0.6576404921030354, 0.6576404921030354, 1.9189724933235048, 2], \"2808\": [3, 6, 6, 7, 0.9473813189441862, 1.9900349539642512, 1.9900349539642512, 2.261397534587431, 1], \"2810\": [0, 2, 2, 3, 0, 1.5339303599259553, 1.5339303599259553, 2.217225244042889, 2], \"1415\": [0, 4, 4, 8, 0, 0.13275469355635036, 0.13275469355635036, 0.44972395827992007, 2], \"2211\": [0, 3, 3, 8, 0, 0.6061358035703156, 0.6061358035703156, 1.9352717508502575, 2], \"2538\": [0, 2, 2, 7, 0, 0.705886206337375, 0.705886206337375, 2.607426785728653, 2], \"1048\": [1, 2, 2, 5, 0, 0.7621400520468967, 0.7621400520468967, 2.097141118779237, 2], \"1802\": [1, 2, 2, 7, 0, 0.1684645221325284, 0.1684645221325284, 1.1779490309046308, 2], \"2553\": [0, 2, 2, 5, 0, 0.17435338714477774, 0.17435338714477774, 0.7841189587656721, 2], \"2741\": [0, 4, 4, 4, 0, 0.4506902061131003, 0.4506902061131003, 0.4506902061131003, 2], \"2868\": [0, 2, 2, 2, 0, 0.5968160716215132, 0.5968160716215132, 0.5968160716215132, 2], \"2539\": [1, 2, 2, 2, 0, 1.4663370687934272, 1.4663370687934272, 1.4663370687934272, 2], \"2681\": [0, 2, 2, 7, 0, 0.8109302162163288, 0.8109302162163288, 2.791931685082912, 2], \"2603\": [1, 2, 2, 3, 0, 0.7472144018302211, 0.7472144018302211, 1.252762968495368, 2], \"2834\": [1, 2, 2, 3, 0, 1.209837923778334, 1.209837923778334, 1.83961549040569, 2], \"1683\": [1, 2, 2, 4, 0, 0.2578291093020998, 0.2578291093020998, 0.7777045685880084, 2], \"2566\": [0, 2, 2, 3, 0, 0.5623075796011341, 0.5623075796011341, 0.9925527167077854, 2], \"2789\": [2, 3, 3, 4, 0.07593779883079804, 0.16340610980141893, 0.16340610980141893, 0.27427904232444056, 1], \"2812\": [1, 3, 3, 4, 0, 0.27029032973991174, 0.27029032973991174, 0.4393666597838457, 2], \"2884\": [75, 85, 85, 101, 2.921128539284785, 3.621021181953466, 5.30648805772829, 6.635064804462185, 1], \"826\": [0, 2, 2, 5, 0, 0.9315582040049435, 0.9315582040049435, 2.362304327695668, 2], \"2000\": [1, 2, 2, 3, 0, 0.5316597106688327, 0.5316597106688327, 0.9473813189441862, 2], \"2274\": [0, 2, 2, 2, 0, 0.31760375231683013, 0.31760375231683013, 0.31760375231683013, 2], \"2995\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1338\": [2, 3, 3, 3, 0.07249550203815351, 0.15629660339753504, 0.15629660339753504, 0.15629660339753504, 1], \"1758\": [0, 2, 2, 2, 0, 1.2992829841302609, 1.2992829841302609, 1.2992829841302609, 2], \"2921\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2479\": [2, 3, 3, 6, 0.13862989729590636, 0.28861100888643976, 0.28861100888643976, 0.8494198770986015, 1], \"2876\": [1, 2, 2, 8, 0, 0.08068891125014274, 0.08068891125014274, 0.8520882887098363, 2], \"3018\": [0, 7, 7, 10, 0, 2.5792239095331335, 2.656282635897138, 3.3331692955853027, 2], \"2871\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2979\": [0, 1, 1, 4, 0, 0, 0, 1.2992829841302609, 4], \"3088\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1652\": [2, 3, 3, 4, 0.29407187055055195, 0.5705448584676129, 0.5705448584676129, 0.8618435713895825, 1], \"1730\": [1, 3, 3, 5, 0, 0.7741883905630712, 0.7741883905630712, 1.4461547490435696, 2], \"2042\": [2, 3, 3, 8, 0.17824823140631882, 0.36396537720141164, 0.36396537720141164, 1.4163266482187657, 1], \"2576\": [0, 2, 2, 4, 0, 0.4096756406445079, 0.4096756406445079, 1.107015699464489, 2], \"2626\": [1, 2, 2, 2, 0, 0.8668106746107854, 0.8668106746107854, 0.8668106746107854, 2], \"2796\": [2, 4, 4, 6, 0.14571181118139367, 0.48701497507227215, 0.48701497507227215, 0.8803587226480918, 1], \"2813\": [1, 2, 2, 6, 0, 0.07145896398214495, 0.07145896398214495, 0.5108256237659907, 2], \"2954\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"3019\": [1, 3, 3, 3, 0, 1.0986122886681096, 1.0986122886681096, 1.0986122886681096, 2], \"3025\": [0, 2, 2, 3, 0, 2.03688192726104, 2.03688192726104, 2.772588722239781, 2], \"2998\": [1, 2, 2, 3, 0, 0.3933437475758196, 0.3933437475758196, 0.734450986701181, 2], \"1045\": [1, 2, 2, 3, 0, 0.5175824062288705, 0.5175824062288705, 0.9264088620397397, 2], \"2471\": [1, 2, 2, 4, 0, 0.3452699473247421, 0.3452699473247421, 0.9743651063918369, 2], \"2692\": [1, 2, 2, 2, 0, 0.6257058997644127, 0.6257058997644127, 0.6257058997644127, 2], \"3095\": [0, 2, 2, 2, 0, 0.8873031950009028, 0.8873031950009028, 0.8873031950009028, 2], \"3045\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1061\": [2, 3, 3, 3, 0.9088557533866369, 1.4663370687934272, 1.4663370687934272, 1.4663370687934272, 1], \"2614\": [1, 2, 2, 2, 0, 0.18924199963852842, 0.18924199963852842, 0.18924199963852842, 2], \"2634\": [4, 5, 5, 6, 0.27380672595816385, 0.40020193806388976, 0.40020193806388976, 0.5357102670818683, 1], \"1161\": [2, 2, 2, 5, 0.06025919151819684, 0.06025919151819684, 0.06025919151819684, 0.32800704906916056, 1], \"1535\": [4, 4, 4, 8, 1.5163474893680884, 1.5163474893680884, 1.5163474893680884, 2.7227563484919055, 1], \"1827\": [2, 2, 2, 3, 0.02559320751785131, 0.02559320751785131, 0.02559320751785131, 0.05669024060730427, 1], \"2149\": [3, 3, 3, 5, 0.4776275543563949, 0.4776275543563949, 0.4776275543563949, 0.993503693908454, 1], \"3094\": [14, 14, 14, 21, 2.2586025597031165, 2.3431342465923644, 2.34838020827099, 3.1047816292416197, 1], \"830\": [4, 4, 4, 5, 1.209837923778334, 1.209837923778334, 1.209837923778334, 1.5425436776040702, 1], \"1882\": [2, 2, 2, 4, 0.11153609770197609, 0.11153609770197609, 0.11153609770197609, 0.3866059883710684, 1], \"2551\": [2, 2, 2, 3, 0.27193371548364176, 0.27193371548364176, 0.27193371548364176, 0.5324647988694718, 1], \"1275\": [3, 3, 3, 8, 0.7282385003712154, 0.7282385003712154, 0.7282385003712154, 2.1539745935424026, 1], \"3150\": [3, 3, 3, 3, 1.0169342576538425, 1.0169342576538425, 1.0169342576538425, 1.0169342576538425, 1], \"3182\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3139\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3183\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3184\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3199\": [2, 2, 2, 2, 0.5175824062288705, 0.5175824062288705, 0.5175824062288705, 0.5175824062288705, 1], \"3201\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3216\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3207\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2556\": [2, 2, 2, 2, 0.1529693447814272, 0.1529693447814272, 0.1529693447814272, 0.1529693447814272, 1], \"3193\": [2, 2, 2, 2, 0.27958486221916157, 0.27958486221916157, 0.27958486221916157, 0.27958486221916157, 1], \"2820\": [2, 2, 2, 6, 0.0955379961853079, 0.0955379961853079, 0.0955379961853079, 0.6430403605057664, 1], \"3062\": [4, 4, 4, 6, 0.24031279986563278, 0.24031279986563278, 0.24031279986563278, 0.47698261495834116, 1], \"3208\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3210\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3211\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2025\": [3, 3, 3, 4, 0.8109302162163288, 0.8109302162163288, 0.8109302162163288, 1.1700712526502546, 1], \"2917\": [2, 2, 2, 2, 0.10161017641078245, 0.10161017641078245, 0.10161017641078245, 0.10161017641078245, 1], \"1817\": [2, 2, 2, 4, 0.26826398659467937, 0.26826398659467937, 0.26826398659467937, 0.8023464725249373, 1], \"3194\": [2, 2, 2, 3, 0.04902942724031861, 0.04902942724031861, 0.04902942724031861, 0.10711776476069794, 1], \"3218\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"1637\": [4, 4, 4, 12, 1.3910002521573033, 1.3910002521573033, 1.3910002521573033, 3.338250883987069, 1], \"3273\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1354\": [2, 2, 2, 4, 0.22067136216882066, 0.22067136216882066, 0.22067136216882066, 0.6869552103120242, 1], \"3275\": [2, 2, 2, 3, 0.5968160716215132, 0.5968160716215132, 0.5968160716215132, 1.042653635020065, 1], \"3276\": [0, 0, 0, 2, 0, 0, 0, 0.8286926725561692, 4], \"3299\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3343\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3242\": [3, 3, 3, 3, 0.1679917312391297, 0.1679917312391297, 0.1679917312391297, 0.1679917312391297, 1], \"3351\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3354\": [0, 0, 0, 0, 0, 0, 0, 0, 4]}"
}